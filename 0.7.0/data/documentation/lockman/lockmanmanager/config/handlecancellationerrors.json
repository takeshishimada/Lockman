{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCancellationErrors","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"When ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", CancellationError is passed to the catch handler if provided.","type":"text"},{"text":" ","type":"text"},{"text":"When ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", CancellationError is silently ignored and not passed to handlers.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Disable CancellationError handling globally","LockmanManager.config.handleCancellationErrors = false"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"type":"text","text":"Controls whether CancellationError should be passed to error handlers in withLock operations."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config\/handleCancellationErrors","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCancellationErrors"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","roleHeading":"Type Property","title":"handleCancellationErrors","symbolKind":"property","externalID":"s:7Lockman0A7ManagerO6configO24handleCancellationErrorsSbvpZ","modules":[{"name":"Lockman"}]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmanmanager\/config\/handlecancellationerrors"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanManager/config":{"abstract":[{"text":"Configuration namespace for Lockman settings.","type":"text"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"config","kind":"identifier"}],"title":"LockmanManager.config","role":"symbol","url":"\/documentation\/lockman\/lockmanmanager\/config","navigatorTitle":[{"text":"config","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","alt":"Lockman logo","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanManager/config/handleCancellationErrors":{"type":"topic","url":"\/documentation\/lockman\/lockmanmanager\/config\/handlecancellationerrors","role":"symbol","title":"handleCancellationErrors","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCancellationErrors","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config\/handleCancellationErrors","kind":"symbol","abstract":[{"text":"Controls whether CancellationError should be passed to error handlers in withLock operations.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanManager":{"abstract":[{"type":"text","text":"A facade providing static access to the shared "},{"type":"codeVoice","code":"LockmanStrategyContainer"},{"type":"text","text":" and core framework functionality."}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanManager","kind":"identifier"}],"title":"LockmanManager","role":"symbol","url":"\/documentation\/lockman\/lockmanmanager","navigatorTitle":[{"text":"LockmanManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"}}}