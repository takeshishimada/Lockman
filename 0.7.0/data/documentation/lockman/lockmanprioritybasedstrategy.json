{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This strategy implements a sophisticated priority system that allows higher-priority"},{"type":"text","text":" "},{"type":"text","text":"actions to preempt lower-priority ones, while providing configurable concurrency"},{"type":"text","text":" "},{"type":"text","text":"behavior for actions of the same priority level."}],"type":"paragraph"},{"text":"Priority System Overview","anchor":"Priority-System-Overview","type":"heading","level":2},{"inlineContent":[{"text":"The strategy maintains a per-boundary collection of active ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instances and uses the priority hierarchy to determine execution precedence:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"High Priority"}],"type":"strong"},{"text":" (.high): Can cancel low\/none priority actions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Low Priority"}]},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"No Priority","type":"text"}]},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}]}]}],"type":"unorderedList"},{"text":"Concurrency Behavior Logic","anchor":"Concurrency-Behavior-Logic","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" is called for same-priority actions, the strategy evaluates conflicts"},{"type":"text","text":" "},{"type":"text","text":"using the existing action’s concurrency behavior:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Priority Actions"}]},{"text":": Always succeed (bypass priority system)","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}],"type":"strong"},{"text":": Priority actions always win","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Different Priority Levels"}],"type":"strong"},{"type":"text","text":": Higher priority wins"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Same Priority Level"}],"type":"strong"},{"text":": Apply existing action’s ","type":"text"},{"type":"codeVoice","code":"ConcurrencyBehavior"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Exclusive"}]},{"type":"text","text":": Existing action continues, new action fails"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Replaceable"}]},{"type":"text","text":": Existing action is canceled, new action succeeds"}],"type":"paragraph"}]}]}]}],"type":"orderedList"},{"text":"Thread Safety","anchor":"Thread-Safety","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This strategy is thread-safe through the underlying "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" which provides"},{"type":"text","text":" "},{"type":"text","text":"synchronized access to the per-boundary lock collections."}],"type":"paragraph"},{"text":"Usage Examples","anchor":"Usage-Examples","type":"heading","level":2},{"code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(id: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(id: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods"},{"generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"anchor":"Type-Aliases"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"anchor":"Type-Properties"},{"generated":true,"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"anchor":"Type-Methods"}],"metadata":{"roleHeading":"Class","modules":[{"name":"Lockman"}],"role":"symbol","symbolKind":"class","title":"LockmanPriorityBasedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(id:info:)":{"type":"topic","title":"unlock(id:info:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Releases a previously acquired priority-based lock."}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","kind":"symbol","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(id:info:)":{"role":"symbol","abstract":[{"text":"Evaluates whether a priority-based lock can be acquired.","type":"text"}],"title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(id:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","title":"strategyId","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"title":"makeStrategyId()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","abstract":[{"text":"Creates a strategy identifier for the priority-based strategy.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","role":"symbol"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","title":"cleanUp()"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","title":"shared","abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanPriorityBasedStrategy","preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"role":"symbol","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"title":"cleanUp(id:)","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"kind":"symbol","title":"LockmanPriorityBasedStrategy.I","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","abstract":[],"navigatorTitle":[{"text":"I","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","role":"symbol","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","title":"init()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","abstract":[{"text":"Creates a new priority-based strategy instance.","type":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(id:info:)":{"role":"symbol","type":"topic","title":"lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}