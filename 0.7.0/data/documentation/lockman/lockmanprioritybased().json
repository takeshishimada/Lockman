{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"A macro that generates protocol conformance and required members for priority-based locking behavior.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybased()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","text":"LockmanPriorityBasedAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedAction","preciseIdentifier":"s:7Lockman0A19PriorityBasedActionP"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBased"},{"kind":"text","text":"()"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanPriorityBasedAction"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actionName"},{"type":"text","text":" property that returns the enum case name as a String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"lockmanInfo","type":"codeVoice"},{"text":" property that provides ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"text":" (must be implemented by user)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"type":"codeVoice","code":"strategyId"},{"type":"text","text":" implementation is provided by the protocol"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"type":"codeListing","code":["@Reducer","struct MyFeature {","  @LockmanPriorityBased","  enum Action {","    case highPriorityTask","    case lowPriorityTask","","    var lockmanInfo: LockmanPriorityBasedInfo {","      switch self {","      case .highPriorityTask:","        return .init(priority: 100, perBoundary: false, blocksSameAction: true)","      case .lowPriorityTask:","        return .init(priority: 10, perBoundary: false, blocksSameAction: true)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .highPriorityTask:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .highPriorityTask,","          cancelID: \"priority-task\"","        )","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"title":"LockmanPriorityBased()","modules":[{"name":"Lockman"}],"roleHeading":"Macro","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBased","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","externalID":"s:7Lockman0A13PriorityBasedyycfm"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBased()"},"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedAction":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedAction","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedAction","title":"LockmanPriorityBasedAction","type":"topic","navigatorTitle":[{"text":"LockmanPriorityBasedAction","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanprioritybasedaction","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":" subtype that enforces priority-based locking semantics."}]},"Lockman.png":{"alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanPriorityBased()":{"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for priority-based locking behavior."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBased()","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBased"},{"kind":"text","text":"()"}],"title":"LockmanPriorityBased()","url":"\/documentation\/lockman\/lockmanprioritybased()"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"}}}