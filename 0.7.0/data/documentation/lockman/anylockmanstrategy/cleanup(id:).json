{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)"},"sections":[],"kind":"symbol","metadata":{"role":"symbol","title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7Lockman03AnyA8StrategyV7cleanUp2idyqd___tSHRd__s8SendableRd__lF","modules":[{"name":"Lockman"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The identifier whose lock information should be removed"}]}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method provides targeted cleanup for specific boundary identifiers,","type":"text"},{"text":" ","type":"text"},{"text":"allowing fine-grained control over which lock state to clear while","type":"text"},{"text":" ","type":"text"},{"text":"leaving other boundaries unaffected.","type":"text"}]},{"type":"heading","text":"Selective Cleanup Benefits","level":2,"anchor":"Selective-Cleanup-Benefits"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Resource Management"}]},{"text":": Clean up specific features without global impact","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"User Sessions"}]},{"type":"text","text":": Clear user-specific locks during logout"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Feature Lifecycle"}],"type":"strong"},{"text":": Clean up when components are deallocated","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Error Recovery"}],"type":"strong"},{"text":": Reset specific boundary state after errors","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"Boundary Isolation","level":2,"anchor":"Boundary-Isolation"},{"type":"paragraph","inlineContent":[{"text":"This operation only affects locks associated with the specified boundary.","type":"text"},{"text":" ","type":"text"},{"text":"Other boundaries managed by the same strategy instance remain unaffected.","type":"text"}]},{"type":"heading","text":"Use Cases","level":2,"anchor":"Use-Cases"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Feature-specific cleanup when a view controller is deallocated"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"User session cleanup when a user logs out","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Scoped cleanup for temporary contexts or workflows","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Partial system resets during development and testing"}]}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"title":"cleanUp(id:)"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic"}}}