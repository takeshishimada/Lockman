{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"sections":[],"metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF","symbolKind":"method","role":"symbol","title":"cleanUp()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method provides a global reset mechanism by clearing all internal lock state"},{"type":"text","text":" "},{"type":"text","text":"from the underlying strategy. Itâ€™s typically used during:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Emergency reset scenarios during development","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Memory pressure response"}]}]}]},{"level":2,"text":"Scope of Operation","type":"heading","anchor":"Scope-of-Operation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method affects "},{"type":"strong","inlineContent":[{"text":"all boundaries","type":"text"}]},{"type":"text","text":" managed by the underlying strategy,"},{"type":"text","text":" "},{"type":"text","text":"not just those accessed through this particular wrapper instance."}]},{"level":2,"text":"Thread Safety","type":"heading","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"text":"The operation is atomic with respect to other strategy operations, but","type":"text"},{"text":" ","type":"text"},{"text":"callers should be aware that concurrent operations may be affected.","type":"text"}]},{"level":2,"text":"Side Effects","type":"heading","anchor":"Side-Effects"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"All active locks are immediately released","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock state tracking is reset to initial conditions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Pending operations may receive unexpected unlock notifications","type":"text"}]}]}]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","kind":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"type":"topic","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image"}}}