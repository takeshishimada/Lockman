{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-3qht0"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"text":"Registers multiple strategies with their IDs in a single atomic operation.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategies","kind":"internalParam"},{"text":": [(","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","text":"LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Array of (id, strategy) pairs to register"}],"type":"paragraph"}],"name":"strategies"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method allows bulk registration of strategies while ensuring that","type":"text"},{"text":" ","type":"text"},{"text":"either all strategies are registered successfully or none are registered","type":"text"},{"text":" ","type":"text"},{"text":"(all-or-nothing semantics).","type":"text"}]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"LockmanError.strategyAlreadyRegistered","type":"codeVoice"},{"type":"text","text":" if any ID is already registered"}]}]},{"type":"heading","text":"Error Behavior","level":2,"anchor":"Error-Behavior"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If any strategy ID in the array conflicts with an existing registration,"},{"type":"text","text":" "},{"type":"text","text":"the entire operation fails and no strategies are registered."}]},{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["try container.registerAll([","  (.singleExecution, LockmanSingleExecutionStrategy.shared),","  (.priorityBased, LockmanPriorityBasedStrategy.shared),","  (\"MyApp.Custom\", MyCustomStrategy())","])"]}]}],"metadata":{"title":"registerAll(_:)","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC11registerAllyySayAA0aB2IdV_xtGKAA0aB0RzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">([(","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-3qht0","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","url":"\/documentation\/lockman\/lockmanstrategyid","title":"LockmanStrategyId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/registerAll(_:)-3qht0":{"abstract":[{"text":"Registers multiple strategies with their IDs in a single atomic operation.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-3qht0","title":"registerAll(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">([(","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-3qht0"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"type":"topic","title":"LockmanStrategyContainer","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer"},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","type":"image","alt":"Lockman logo"}}}