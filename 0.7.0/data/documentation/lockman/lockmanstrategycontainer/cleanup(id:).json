{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":" whose associated lock state should be cleared","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" method to clear state associated with the given boundary identifier.","type":"text"},{"text":" ","type":"text"},{"text":"Useful when a feature or component is being deallocated.","type":"text"}]},{"type":"heading","level":2,"text":"Error Handling","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"text":", errors in individual strategy cleanup are logged","type":"text"},{"text":" ","type":"text"},{"text":"but donâ€™t prevent cleanup of other strategies.","type":"text"}]},{"type":"heading","level":2,"text":"Complexity","anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}]}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"symbolKind":"method","title":"cleanUp(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Invokes "},{"code":"cleanUp(id:)","type":"codeVoice"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"kind":"symbol","type":"topic","title":"cleanUp(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"type":"topic","title":"LockmanStrategyContainer","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer"},"Lockman.png":{"type":"image","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png"}}}