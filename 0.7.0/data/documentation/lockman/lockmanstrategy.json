{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Lockman\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"type":"conformingTypes","kind":"relationships"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"anchor":"Associated-Types","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods","generated":true},{"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"anchor":"Type-Methods","generated":true}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}],"type":"paragraph"},{"level":2,"anchor":"Strategy-Types","text":"Strategy Types","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Single Execution"}]},{"type":"text","text":": Prevents concurrent execution of the same action"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority-Based"}]},{"type":"text","text":": Allows higher priority actions to preempt lower priority ones"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Composite","type":"text"}],"type":"strong"},{"type":"text","text":": Combines multiple strategies for complex coordination"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"anchor":"Implementation-Guidelines","text":"Implementation Guidelines","type":"heading"},{"inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Thread-Safety","text":"Thread Safety","type":"heading"},{"inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}],"type":"paragraph"},{"level":2,"anchor":"Example-Implementation","text":"Example Implementation","type":"heading"},{"syntax":"swift","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"type":"codeListing"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"title":"LockmanStrategy","externalID":"s:7Lockman0A8StrategyP","role":"symbol"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"title":"LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"kind":"symbol","role":"symbol","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"title":"strategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","title":"LockmanConcurrencyLimitedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/i","title":"I","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"title":"getCurrentLocks()","required":true},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"role":"symbol","required":true,"title":"cleanUp(id:)","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"role":"symbol","required":true,"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"type":"topic","title":"unlock(id:info:)","abstract":[{"type":"text","text":"Releases a previously acquired lock."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"required":true,"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","title":"lock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"required":true,"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired without actually acquiring it."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","kind":"symbol","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"LockmanSingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"title":"LockmanCompositeStrategy5","type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy5","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 5 different strategies."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","navigatorTitle":[{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"title":"LockmanCompositeStrategy4","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","url":"\/documentation\/lockman\/lockmancompositestrategy4","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"url":"\/documentation\/lockman\/lockmancompositestrategy2","navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","title":"LockmanCompositeStrategy2","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","type":"topic","role":"symbol","title":"cleanUp()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","required":true},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","role":"symbol","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","kind":"symbol","title":"LockmanGroupCoordinationStrategy"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","type":"image"},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"role":"symbol","abstract":[{"text":"Creates a strategy identifier for this strategy type.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","title":"makeStrategyId()","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"role":"symbol","navigatorTitle":[{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}],"url":"\/documentation\/lockman\/lockmancompositestrategy3","kind":"symbol","type":"topic","title":"LockmanCompositeStrategy3","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3"}}}