{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutMembers","kind":"identifier"}],"roleHeading":"Case","externalID":"s:7Lockman0A21GroupCoordinationRoleO17LeaderEntryPolicyO14withoutMembersyA2EmF","role":"symbol","symbolKind":"case","title":"LockmanGroupCoordinationRole.LeaderEntryPolicy.withoutMembers"},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/withoutMembers","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy"]]},"abstract":[{"text":"Leader can enter when there are no members (but other leaders are allowed).","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutMembers","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/withoutmembers"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/withoutMembers":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutMembers","kind":"identifier"}],"title":"LockmanGroupCoordinationRole.LeaderEntryPolicy.withoutMembers","abstract":[{"type":"text","text":"Leader can enter when there are no members (but other leaders are allowed)."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/withoutmembers","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/withoutMembers"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy":{"title":"LockmanGroupCoordinationRole.LeaderEntryPolicy","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy","abstract":[{"type":"text","text":"Policy for when a leader can enter a group."}],"role":"symbol","navigatorTitle":[{"text":"LeaderEntryPolicy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeaderEntryPolicy","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole":{"title":"LockmanGroupCoordinationRole","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationRole","kind":"identifier"}],"abstract":[{"text":"Role definition for group coordination strategy.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole","url":"\/documentation\/lockman\/lockmangroupcoordinationrole","kind":"symbol","navigatorTitle":[{"text":"LockmanGroupCoordinationRole","kind":"identifier"}]}}}