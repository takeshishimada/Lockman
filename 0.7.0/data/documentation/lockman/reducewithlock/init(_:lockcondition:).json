{"variants":[{"paths":["\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:7Lockman14ReduceWithLockV_13lockConditionACyxq_G22ComposableArchitecture6EffectVyq_Gxz_q_tc_AA0A6ResultOx_q_tYbcSgtcfc","modules":[{"name":"Lockman"}],"symbolKind":"init","title":"init(_:lockCondition:)","fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":")?)"}],"roleHeading":"Initializer","role":"symbol"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"reduce","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":")? = nil)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The base reducer function to be executed."}],"type":"paragraph"}],"name":"reduce"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Optional function that evaluates the current state and action","type":"text"},{"text":" ","type":"text"},{"text":"to determine if a lock should be acquired. If nil, no reducer-level","type":"text"},{"text":" ","type":"text"},{"text":"condition is applied.","type":"text"}]}],"name":"lockCondition"}]}],"abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}],"references":{"doc://Lockman/documentation/Lockman/LockmanResult":{"url":"\/documentation\/lockman\/lockmanresult","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"title":"LockmanResult","role":"symbol","abstract":[{"text":"The result of attempting to acquire a lock.","type":"text"}]},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","alt":"Lockman logo","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/ReduceWithLock":{"url":"\/documentation\/lockman\/reducewithlock","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReduceWithLock","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock","title":"ReduceWithLock","abstract":[{"text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ReduceWithLock","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/ReduceWithLock/init(_:lockCondition:)":{"title":"init(_:lockCondition:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)","kind":"symbol","abstract":[{"text":"Initializes a reducer with optional lock condition evaluation.","type":"text"}],"url":"\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)"}}}