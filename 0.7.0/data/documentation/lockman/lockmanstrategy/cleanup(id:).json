{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The identifier whose lock information should be removed"}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method provides targeted cleanup for specific boundary identifiers,"},{"type":"text","text":" "},{"type":"text","text":"allowing fine-grained control over which lock state to clear while"},{"type":"text","text":" "},{"type":"text","text":"leaving other boundaries unaffected."}],"type":"paragraph"},{"level":2,"text":"Use Cases","anchor":"Use-Cases","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Feature-specific cleanup when a component is deallocated","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"User session cleanup when a user logs out","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Scoped cleanup for temporary contexts","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Partial system resets during development","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Implementation Guidelines","anchor":"Implementation-Guidelines","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should only affect locks associated with the specified boundary"}]}]},{"content":[{"inlineContent":[{"text":"Should not fail if no locks exist for the boundary","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Should preserve locks for other boundaries"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)"]}],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A8StrategyP7cleanUp2idyqd___tSHRd__s8SendableRd__lF","roleHeading":"Instance Method","required":true},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","type":"topic"},"Lockman.png":{"identifier":"Lockman.png","type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"role":"symbol","required":true,"title":"cleanUp(id:)","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"}}}