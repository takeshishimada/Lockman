{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Clears all internal lock state, effectively resetting the strategy to its","type":"text"},{"text":" ","type":"text"},{"text":"initial state. This operation affects all boundaries simultaneously.","type":"text"}]},{"anchor":"Use-Cases","type":"heading","text":"Use Cases","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Application shutdown sequences","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Global system resets during development","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Emergency cleanup scenarios","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUpyyF","title":"cleanUp()","roleHeading":"Instance Method","modules":[{"name":"Lockman"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","kind":"symbol","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","title":"cleanUp()"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image"}}}