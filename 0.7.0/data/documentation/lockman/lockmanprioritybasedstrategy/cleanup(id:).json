{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"metadata":{"roleHeading":"Instance Method","title":"cleanUp(id:)","symbolKind":"method","role":"symbol","externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUp2idyx_tSHRzs8SendableRzlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"modules":[{"name":"Lockman"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)"},"sections":[],"abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The boundary identifier whose locks should be removed","type":"text"}]}],"name":"id"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides targeted cleanup for specific boundaries while preserving"},{"type":"text","text":" "},{"type":"text","text":"lock state for other boundaries. This allows fine-grained control"},{"type":"text","text":" "},{"type":"text","text":"over which priority contexts to reset."}]},{"level":2,"anchor":"Use-Cases","type":"heading","text":"Use Cases"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Feature-specific cleanup when components are deallocated","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"User session cleanup when users log out","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Scoped cleanup for temporary contexts or workflows","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Partial system resets during development","type":"text"}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"role":"symbol","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"title":"cleanUp(id:)","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","kind":"symbol","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","role":"symbol"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","alt":"Lockman logo","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"}}}