{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","text":"AnyLockmanGroupId"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","text":"AnyLockmanGroupId"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The left-hand side wrapper to compare"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"The right-hand side wrapper to compare"}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the wrapped values are equal; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Two instances are equal if their wrapped values are equal according to"},{"type":"text","text":" "},{"type":"text","text":"the underlying type’s equality implementation."}]},{"type":"heading","level":2,"text":"Type Safety","anchor":"Type-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Different types with identical values will not be equal due to "},{"code":"AnyHashable","type":"codeVoice"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"text","text":"type-aware equality comparison."}]}]}],"variants":[{"paths":["\/documentation\/lockman\/anylockmangroupid\/==(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Compares two ","type":"text"},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":" values.","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"},"metadata":{"role":"symbol","externalID":"s:7Lockman03AnyA7GroupIdV2eeoiySbAC_ACtFZ","roleHeading":"Operator","modules":[{"name":"Lockman"}],"symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":", ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"==(_:_:)"},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmangroupid","type":"topic","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanGroupId"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","title":"AnyLockmanGroupId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"role":"symbol"},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/==(_:_:)":{"url":"\/documentation\/lockman\/anylockmangroupid\/==(_:_:)","type":"topic","title":"==(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)","abstract":[{"text":"Compares two ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":" values.","type":"text"}]}}}