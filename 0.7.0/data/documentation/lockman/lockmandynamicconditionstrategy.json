{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"],"title":"Type Aliases","generated":true,"anchor":"Type-Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"],"title":"Type Properties","generated":true,"anchor":"Type-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"],"title":"Type Methods","generated":true,"anchor":"Type-Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"},"abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"code":"LockmanDynamicConditionStrategy","type":"codeVoice"},{"type":"text","text":" allows you to define arbitrary locking conditions"},{"type":"text","text":" "},{"type":"text","text":"using closures that are evaluated when the lock is requested. This provides maximum"},{"type":"text","text":" "},{"type":"text","text":"flexibility for complex business logic scenarios."}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"type":"codeListing","syntax":"swift","code":["\/\/ Business logic condition with custom error","struct PriorityTooLowError: Error {","    let priority: Int","}","","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .failure(PriorityTooLowError(priority: priority))","    }","    return .success","}"]},{"type":"heading","text":"Thread Safety","anchor":"Thread-Safety","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is thread-safe and uses "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" for managing concurrent access."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"]}],"kind":"symbol","sections":[],"metadata":{"externalID":"s:7Lockman0A24DynamicConditionStrategyC","symbolKind":"class","modules":[{"name":"Lockman"}],"title":"LockmanDynamicConditionStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","roleHeading":"Class","navigatorTitle":[{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}]},"references":{"Lockman.png":{"identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","type":"image"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"title":"LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(id:info:)":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Releases all locks with the same actionId."}],"title":"unlock(id:info:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC","kind":"typeIdentifier","text":"LockmanDynamicConditionStrategy"}],"abstract":[{"text":"Shared singleton instance.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared","title":"shared","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"title":"cleanUp()","type":"topic","abstract":[{"type":"text","text":"Removes all active locks across all boundaries."}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"title":"init()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","abstract":[{"text":"Creates a new dynamic condition strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(id:)":{"abstract":[{"type":"text","text":"Removes all active locks for the specified boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(id:)","kind":"symbol","title":"cleanUp(id:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)","role":"symbol","title":"lock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"role":"symbol","title":"makeStrategyId()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for the dynamic condition strategy."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"navigatorTitle":[{"text":"I","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i","title":"LockmanDynamicConditionStrategy.I","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"title":"getCurrentLocks()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(id:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Evaluates the dynamic condition to determine if a lock can be acquired."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","kind":"symbol","title":"canLock(id:info:)","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","kind":"symbol","title":"strategyId","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","type":"topic"}}}