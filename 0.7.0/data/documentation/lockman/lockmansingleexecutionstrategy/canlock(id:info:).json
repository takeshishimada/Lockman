{"metadata":{"modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:7Lockman0A23SingleExecutionStrategyC7canLock2id4infoAA0A6ResultOx_AA0abC4InfoVtSHRzs8SendableRzlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"symbolKind":"method","title":"canLock(id:info:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"code":"LockmanBoundaryId","type":"codeVoice"}]}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lock information containing the action ID and execution mode"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior depends on the execution mode specified in the info:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".none"},{"text":": Always returns ","type":"text"},{"type":"codeVoice","code":".success"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Returns ","type":"text"},{"code":".failure","type":"codeVoice"},{"text":" if any lock exists in the boundary","type":"text"}]}]},{"content":[{"inlineContent":[{"code":".action","type":"codeVoice"},{"type":"text","text":": Returns "},{"code":".failure","type":"codeVoice"},{"type":"text","text":" if a lock with the same action ID exists"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"type":"codeListing","code":["let strategy = LockmanSingleExecutionStrategy()","let info1 = LockmanSingleExecutionInfo(mode: .boundary)","let info2 = LockmanSingleExecutionInfo(mode: .action)","","strategy.lock(id: boundary, info: info1)","strategy.canLock(id: boundary, info: info2) \/\/ Result depends on mode and actionId"],"syntax":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)"]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and action."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/canLock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and action."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier","text":"LockmanSingleExecutionInfo"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"}],"title":"canLock(id:info:)","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"LockmanSingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","type":"topic","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"title":"LockmanSingleExecutionInfo","url":"\/documentation\/lockman\/lockmansingleexecutioninfo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"role":"symbol"},"Lockman.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanResult":{"url":"\/documentation\/lockman\/lockmanresult","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"title":"LockmanResult","role":"symbol","abstract":[{"text":"The result of attempting to acquire a lock.","type":"text"}]}}}