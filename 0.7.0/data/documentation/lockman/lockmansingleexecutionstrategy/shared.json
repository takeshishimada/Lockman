{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","preciseIdentifier":"s:7Lockman0A23SingleExecutionStrategyC","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"metadata":{"externalID":"s:7Lockman0A23SingleExecutionStrategyC6sharedACvpZ","roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionStrategy","preciseIdentifier":"s:7Lockman0A23SingleExecutionStrategyC"}],"title":"shared","role":"symbol","symbolKind":"property","modules":[{"name":"Lockman"}]},"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/shared","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"abstract":[{"type":"text","text":"Shared singleton instance."}],"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic"},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/shared":{"abstract":[{"text":"Shared singleton instance.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/shared","kind":"symbol","title":"shared","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A23SingleExecutionStrategyC"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/shared","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"LockmanSingleExecutionStrategy"}}}