{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy implements a sophisticated priority system that allows higher-priority"},{"type":"text","text":" "},{"type":"text","text":"actions to preempt lower-priority ones, while providing configurable concurrency"},{"type":"text","text":" "},{"type":"text","text":"behavior for actions of the same priority level."}]},{"anchor":"Priority-System-Overview","type":"heading","level":2,"text":"Priority System Overview"},{"type":"paragraph","inlineContent":[{"text":"The strategy maintains a per-boundary collection of active ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instances and uses the priority hierarchy to determine execution precedence:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"High Priority"}],"type":"strong"},{"text":" (.high): Can cancel low\/none priority actions","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Low Priority"}]},{"type":"text","text":" (.low): Can cancel none priority actions, yields to high priority"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Priority"}]},{"type":"text","text":" (.none): Yields to all priority actions, simple conflict handling"}],"type":"paragraph"}]}]},{"anchor":"Concurrency-Behavior-Logic","type":"heading","level":2,"text":"Concurrency Behavior Logic"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" is called for same-priority actions, the strategy evaluates conflicts"},{"type":"text","text":" "},{"type":"text","text":"using the existing action’s concurrency behavior:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Priority Actions"}]},{"type":"text","text":": Always succeed (bypass priority system)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}],"type":"strong"},{"text":": Priority actions always win","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Different Priority Levels","type":"text"}]},{"type":"text","text":": Higher priority wins"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Same Priority Level","type":"text"}]},{"type":"text","text":": Apply existing action’s "},{"type":"codeVoice","code":"ConcurrencyBehavior"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Exclusive"}]},{"type":"text","text":": Existing action continues, new action fails"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Replaceable"}],"type":"strong"},{"text":": Existing action is canceled, new action succeeds","type":"text"}]}]}]}]}]},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"text":"This strategy is thread-safe through the underlying ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" which provides","type":"text"},{"text":" ","type":"text"},{"text":"synchronized access to the per-boundary lock collections.","type":"text"}]},{"anchor":"Usage-Examples","type":"heading","level":2,"text":"Usage Examples"},{"code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(id: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(id: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"]},{"anchor":"Type-Aliases","generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"]},{"anchor":"Type-Properties","generated":true,"title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"]},{"anchor":"Type-Methods","generated":true,"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"]}],"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Class","title":"LockmanPriorityBasedStrategy","role":"symbol","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"},"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)","abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"title":"cleanUp(id:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","title":"canLock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(id:info:)","kind":"symbol","abstract":[{"type":"text","text":"Evaluates whether a priority-based lock can be acquired."}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","role":"symbol","navigatorTitle":[{"text":"I","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"LockmanPriorityBasedStrategy.I","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"title":"cleanUp()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","title":"LockmanStrategy","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"title":"init()","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","abstract":[{"type":"text","text":"Creates a new priority-based strategy instance."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"type":"topic","title":"getCurrentLocks()","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(id:info:)":{"title":"lock(id:info:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","abstract":[{"type":"text","text":"Registers a priority-based lock for the specified boundary and action."}],"role":"symbol"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"title":"strategyId","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","kind":"typeIdentifier","text":"LockmanPriorityBasedStrategy"}],"role":"symbol","abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"type":"topic","title":"shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(id:info:)":{"type":"topic","title":"unlock(id:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired priority-based lock."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"title":"makeStrategyId()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for the priority-based strategy."}]}}}