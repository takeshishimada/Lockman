{"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"text":"The identifier whose lock information should be removed","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method provides targeted cleanup for specific boundary identifiers,"},{"type":"text","text":" "},{"type":"text","text":"allowing fine-grained control over which lock state to clear while"},{"type":"text","text":" "},{"type":"text","text":"leaving other boundaries unaffected."}],"type":"paragraph"},{"level":2,"anchor":"Selective-Cleanup-Benefits","type":"heading","text":"Selective Cleanup Benefits"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Resource Management"}]},{"type":"text","text":": Clean up specific features without global impact"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"User Sessions"}],"type":"strong"},{"type":"text","text":": Clear user-specific locks during logout"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Feature Lifecycle","type":"text"}]},{"type":"text","text":": Clean up when components are deallocated"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Error Recovery","type":"text"}]},{"type":"text","text":": Reset specific boundary state after errors"}],"type":"paragraph"}]}]},{"level":2,"anchor":"Boundary-Isolation","type":"heading","text":"Boundary Isolation"},{"inlineContent":[{"text":"This operation only affects locks associated with the specified boundary.","type":"text"},{"text":" ","type":"text"},{"text":"Other boundaries managed by the same strategy instance remain unaffected.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Use-Cases","type":"heading","text":"Use Cases"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Feature-specific cleanup when a view controller is deallocated","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"User session cleanup when a user logs out"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Scoped cleanup for temporary contexts or workflows","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Partial system resets during development and testing","type":"text"}],"type":"paragraph"}]}]}]}],"metadata":{"roleHeading":"Instance Method","title":"cleanUp(id:)","modules":[{"name":"Lockman"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","externalID":"s:7Lockman03AnyA8StrategyV7cleanUp2idyqd___tSHRd__s8SendableRd__lF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","alt":"Lockman logo","type":"image"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)","title":"cleanUp(id:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","title":"AnyLockmanStrategy"}}}