{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"title":"cleanUp()","symbolKind":"method","role":"symbol","externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This method provides a global reset mechanism by clearing all internal lock state","type":"text"},{"text":" ","type":"text"},{"text":"from the underlying strategy. Itâ€™s typically used during:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Emergency reset scenarios during development","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Memory pressure response","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Scope-of-Operation","text":"Scope of Operation","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method affects "},{"inlineContent":[{"type":"text","text":"all boundaries"}],"type":"strong"},{"type":"text","text":" managed by the underlying strategy,"},{"type":"text","text":" "},{"type":"text","text":"not just those accessed through this particular wrapper instance."}],"type":"paragraph"},{"anchor":"Thread-Safety","text":"Thread Safety","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The operation is atomic with respect to other strategy operations, but"},{"type":"text","text":" "},{"type":"text","text":"callers should be aware that concurrent operations may be affected."}],"type":"paragraph"},{"anchor":"Side-Effects","text":"Side Effects","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All active locks are immediately released","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Lock state tracking is reset to initial conditions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Pending operations may receive unexpected unlock notifications","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"title":"cleanUp()","kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","title":"AnyLockmanStrategy"},"Lockman.png":{"alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","type":"image"}}}