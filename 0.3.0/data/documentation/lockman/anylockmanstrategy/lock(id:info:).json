{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","role":"symbol","modules":[{"name":"Lockman"}],"title":"lock(id:info:)","externalID":"s:7Lockman03AnyA8StrategyV4lock2id4infoyqd___xtSHRd__s8SendableRd__lF"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"code":"LockmanBoundaryId","type":"codeVoice"}]}],"name":"id"},{"content":[{"inlineContent":[{"type":"text","text":"Lock information of type "},{"code":"I","type":"codeVoice"},{"type":"text","text":" to be registered as active"}],"type":"paragraph"}],"name":"info"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method should only be called after ","type":"text"},{"code":"canLock","type":"codeVoice"},{"text":" returns a success result.","type":"text"},{"text":" ","type":"text"},{"text":"The implementation delegates to the concrete strategyâ€™s lock acquisition logic.","type":"text"}]},{"anchor":"Usage-Contract","text":"Usage Contract","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Precondition","type":"text"}]},{"text":": ","type":"text"},{"type":"codeVoice","code":"canLock(id:info:)"},{"text":" should return ","type":"text"},{"type":"codeVoice","code":".success"},{"text":" or ","type":"text"},{"type":"codeVoice","code":".successWithPrecedingCancellation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Postcondition","type":"text"}]},{"text":": The lock is acquired and tracked by the underlying strategy","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Thread Safety"}]},{"type":"text","text":": Safe to call concurrently with different boundary IDs"}]}]}]},{"anchor":"State-Management","text":"State Management","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The concrete strategy is responsible for updating its internal state to track"},{"type":"text","text":" "},{"type":"text","text":"the acquired lock. This wrapper does not add any additional state management."}]}],"kind":"content"}],"kind":"symbol","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(id:info:)":{"role":"symbol","title":"lock(id:info:)","url":"\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","title":"AnyLockmanStrategy"},"Lockman.png":{"type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]}}}