{"abstract":[{"text":"Controls whether CancellationError should be passed to error handlers in withLock operations.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCancellationErrors","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"code":"true","type":"codeVoice"},{"type":"text","text":" (default), CancellationError is passed to the catch handler if provided."},{"type":"text","text":" "},{"type":"text","text":"When "},{"code":"false","type":"codeVoice"},{"type":"text","text":", CancellationError is silently ignored and not passed to handlers."}]},{"syntax":"swift","code":["\/\/ Disable CancellationError handling globally","LockmanManager.config.handleCancellationErrors = false"],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanmanager\/config\/handlecancellationerrors"]}],"kind":"symbol","metadata":{"externalID":"s:7Lockman0A7ManagerO6configO24handleCancellationErrorsSbvpZ","symbolKind":"property","role":"symbol","modules":[{"name":"Lockman"}],"title":"handleCancellationErrors","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCancellationErrors","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"roleHeading":"Type Property"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config\/handleCancellationErrors"},"references":{"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanManager/config":{"role":"symbol","title":"LockmanManager.config","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config","kind":"symbol","url":"\/documentation\/lockman\/lockmanmanager\/config","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"config"}],"navigatorTitle":[{"kind":"identifier","text":"config"}],"type":"topic","abstract":[{"type":"text","text":"Configuration namespace for Lockman settings."}]},"doc://Lockman/documentation/Lockman/LockmanManager/config/handleCancellationErrors":{"role":"symbol","type":"topic","title":"handleCancellationErrors","abstract":[{"text":"Controls whether CancellationError should be passed to error handlers in withLock operations.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCancellationErrors"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config\/handleCancellationErrors","kind":"symbol","url":"\/documentation\/lockman\/lockmanmanager\/config\/handlecancellationerrors"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanManager":{"type":"topic","url":"\/documentation\/lockman\/lockmanmanager","title":"LockmanManager","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanManager","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanManager","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager","abstract":[{"text":"A facade providing static access to the shared ","type":"text"},{"code":"LockmanStrategyContainer","type":"codeVoice"},{"text":" and core framework functionality.","type":"text"}]}}}