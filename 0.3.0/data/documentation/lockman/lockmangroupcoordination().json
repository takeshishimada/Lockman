{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordination()"]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"text":"LockmanGroupCoordinatedAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinatedAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22GroupCoordinatedActionP"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordination","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanGroupCoordinatedAction"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"actionName","type":"codeVoice"},{"type":"text","text":" property that returns the enum case name as a String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"type":"codeVoice","code":"strategyId"},{"type":"text","text":" implementation is provided by the protocol"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Important","type":"text"}]},{"type":"text","text":": You must implement the "},{"type":"codeVoice","code":"lockmanInfo"},{"type":"text","text":" property to specify coordination details:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"The group ID(s) this action belongs to","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The coordination role (.leader or .member)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Example usage with TCA:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct NavigationFeature {","  @LockmanGroupCoordination","  enum Action {","    case navigate(to: String)","    case back","","    var lockmanInfo: LockmanGroupCoordinatedInfo {","      switch self {","      case .navigate:","        return LockmanGroupCoordinatedInfo(","          actionId: actionName,","          groupId: \"navigation\",","          coordinationRole: .leader","        )","      case .back:","        return LockmanGroupCoordinatedInfo(","          actionId: actionName,","          groupId: \"navigation\",","          coordinationRole: .member","        )","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .navigate:","        return .withLock(","          operation: { send in","            \/\/ navigation logic","          },","          action: .navigate(to: destination),","          cancelID: \"navigation\"","        )","      \/\/ ...","      }","    }","  }","}"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordination()"},"metadata":{"roleHeading":"Macro","role":"symbol","title":"LockmanGroupCoordination()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordination"},{"kind":"text","text":"()"}],"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17GroupCoordinationyycfm","symbolKind":"macro"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for group coordination locking behavior."}],"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinatedAction":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinatedAction","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for actions that use group coordination locking behavior."}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinatedaction","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinatedAction","navigatorTitle":[{"text":"LockmanGroupCoordinatedAction","kind":"identifier"}],"title":"LockmanGroupCoordinatedAction"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordination()":{"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for group coordination locking behavior."}],"role":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordination()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordination","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordination()","title":"LockmanGroupCoordination()","kind":"symbol","type":"topic"},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]}}}