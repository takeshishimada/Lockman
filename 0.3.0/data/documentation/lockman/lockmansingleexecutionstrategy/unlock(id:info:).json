{"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier whose lock should be released"}]}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The exact lock information that was used when acquiring the lock"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Removes the specific lock information from the internal state using the","type":"text"},{"text":" ","type":"text"},{"text":"instanceâ€™s ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":". This provides precise lock management and prevents","type":"text"},{"text":" ","type":"text"},{"text":"unintended removal of other locks with the same ","type":"text"},{"code":"actionId","type":"codeVoice"},{"text":".","type":"text"}]},{"text":"Instance-Specific Removal","type":"heading","level":2,"anchor":"Instance-Specific-Removal"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only the exact "},{"type":"codeVoice","code":"info"},{"type":"text","text":" instance that was passed to "},{"type":"codeVoice","code":"lock()"},{"type":"text","text":" is removed."},{"type":"text","text":" "},{"type":"text","text":"Other instances with the same "},{"type":"codeVoice","code":"actionId"},{"type":"text","text":" but different "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":" values"},{"type":"text","text":" "},{"type":"text","text":"remain unaffected."}]},{"text":"Rationale for uniqueId-based Removal","type":"heading","level":2,"anchor":"Rationale-for-uniqueId-based-Removal"},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"type":"codeVoice","code":"uniqueId"},{"text":" instead of ","type":"text"},{"type":"codeVoice","code":"actionId"},{"text":" for removal provides:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Precision"}],"type":"strong"},{"type":"text","text":": Only removes the specific lock instance that was acquired"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Safety","type":"text"}],"type":"strong"},{"text":": Prevents accidental removal of other locks with the same actionId","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Consistency","type":"text"}]},{"text":": Maintains 1:1 correspondence between lock() and unlock() calls","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Flexibility","type":"text"}],"type":"strong"},{"text":": Allows multiple lock instances with the same actionId in different scenarios","type":"text"}]}]}],"type":"unorderedList"},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"code":["let info1 = LockmanSingleExecutionInfo(actionId: \"sync\")","let info2 = LockmanSingleExecutionInfo(actionId: \"sync\")  \/\/ Same actionId, different uniqueId","","\/\/ Hypothetical scenario where both could be locked on different boundaries","strategy.lock(id: boundary1, info: info1)","strategy.lock(id: boundary2, info: info2)","","\/\/ Unlock only removes the specific instance","strategy.unlock(id: boundary1, info: info1)  \/\/ Only removes info1","\/\/ info2 remains locked on boundary2"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)"]}],"metadata":{"role":"symbol","symbolKind":"method","externalID":"s:7Lockman0A23SingleExecutionStrategyC6unlock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"unlock(id:info:)","modules":[{"name":"Lockman"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)"},"abstract":[{"type":"text","text":"Releases a previously acquired lock for the specified boundary and action."}],"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/unlock(id:info:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)","title":"unlock(id:info:)","abstract":[{"type":"text","text":"Releases a previously acquired lock for the specified boundary and action."}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)","type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"title":"LockmanSingleExecutionStrategy"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"title":"LockmanSingleExecutionInfo","abstract":[{"text":"Information required for single-execution locking behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","role":"symbol"}}}