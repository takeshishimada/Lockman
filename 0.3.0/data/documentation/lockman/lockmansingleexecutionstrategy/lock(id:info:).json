{"sections":[],"abstract":[{"type":"text","text":"Acquires a single-execution lock for the specified boundary and action."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier","text":"LockmanSingleExecutionInfo"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}]}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The lock information to register as active"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Adds the lock information to the internal state. This method should only be called","type":"text"},{"text":" ","type":"text"},{"text":"after ","type":"text"},{"type":"codeVoice","code":"canLock"},{"text":" returns ","type":"text"},{"type":"codeVoice","code":".success"},{"text":" to ensure proper lock coordination.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Instance Tracking","anchor":"Instance-Tracking"},{"inlineContent":[{"type":"text","text":"The exact "},{"type":"codeVoice","code":"info"},{"type":"text","text":" instance (with its "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":") is stored, allowing for"},{"type":"text","text":" "},{"type":"text","text":"precise removal during unlock operations."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Example","anchor":"Example"},{"type":"codeListing","code":["let info = LockmanSingleExecutionInfo(actionId: \"processPayment\")","","if strategy.canLock(id: boundary, info: info) == .success {","  strategy.lock(id: boundary, info: info)","  \/\/ info is now tracked with its specific uniqueId","}"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/lock(id:info:)"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":")"}],"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A23SingleExecutionStrategyC4lock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","title":"lock(id:info:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/lock(id:info:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"title":"LockmanSingleExecutionStrategy"},"Lockman.png":{"alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","type":"image"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/lock(id:info:)":{"title":"lock(id:info:)","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/lock(id:info:)","abstract":[{"text":"Acquires a single-execution lock for the specified boundary and action.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"title":"LockmanSingleExecutionInfo","abstract":[{"text":"Information required for single-execution locking behavior.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","role":"symbol"}}}