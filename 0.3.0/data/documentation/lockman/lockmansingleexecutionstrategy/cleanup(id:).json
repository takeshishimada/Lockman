{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/cleanup(id:)"]}],"abstract":[{"type":"text","text":"Removes all active locks for the specified boundary identifier."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/cleanUp(id:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The boundary identifier whose locks should be removed","type":"text"}]}],"name":"id"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Clears lock state associated with a specific boundary while leaving","type":"text"},{"text":" ","type":"text"},{"text":"other boundaries unaffected. Useful for:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Feature-specific cleanup when a component is deallocated"}]}]},{"content":[{"inlineContent":[{"text":"User session cleanup","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Targeted state resets","type":"text"}]}]}],"type":"unorderedList"}]}],"sections":[],"metadata":{"symbolKind":"method","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"role":"symbol","externalID":"s:7Lockman0A23SingleExecutionStrategyC7cleanUp2idyx_tSHRzs8SendableRzlF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"Lockman.png":{"type":"image","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"title":"LockmanSingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/cleanUp(id:)":{"abstract":[{"text":"Removes all active locks for the specified boundary identifier.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/cleanup(id:)","type":"topic","title":"cleanUp(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/cleanUp(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]}}}