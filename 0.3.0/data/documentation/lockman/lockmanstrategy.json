{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"This protocol provides a common interface for different locking strategies,","type":"text"},{"text":" ","type":"text"},{"text":"allowing them to be used interchangeably while maintaining type safety for","type":"text"},{"text":" ","type":"text"},{"text":"lock information. Each strategy implements specific logic for conflict detection,","type":"text"},{"text":" ","type":"text"},{"text":"lock management, and cleanup operations.","type":"text"}],"type":"paragraph"},{"anchor":"Strategy-Types","level":2,"type":"heading","text":"Strategy Types"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Single Execution"}],"type":"strong"},{"text":": Prevents concurrent execution of the same action","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Priority-Based","type":"text"}],"type":"strong"},{"type":"text","text":": Allows higher priority actions to preempt lower priority ones"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composite"}]},{"text":": Combines multiple strategies for complex coordination","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Implementation-Guidelines","level":2,"type":"heading","text":"Implementation Guidelines"},{"inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Thread-Safety","level":2,"type":"heading","text":"Thread Safety"},{"inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}],"type":"paragraph"},{"anchor":"Example-Implementation","level":2,"type":"heading","text":"Example Implementation"},{"code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"syntax":"swift","type":"codeListing"}]}],"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"title":"Associated Types"},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"title":"Instance Properties"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"],"title":"Instance Methods"},{"anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"title":"Type Methods"}],"kind":"symbol","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"title":"Conforming Types","type":"conformingTypes"}],"metadata":{"externalID":"s:7Lockman0A8StrategyP","symbolKind":"protocol","title":"LockmanStrategy","role":"symbol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"modules":[{"name":"Lockman"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"url":"\/documentation\/lockman\/lockmancompositestrategy5","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"title":"LockmanCompositeStrategy5","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","required":true,"title":"cleanUp(id:)","role":"symbol","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"title":"LockmanSingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"title":"canLock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"required":true,"type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"required":true,"title":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"}],"url":"\/documentation\/lockman\/lockmanstrategy\/i","role":"symbol"},"Lockman.png":{"alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"title":"LockmanConcurrencyLimitedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","title":"AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)","type":"topic","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":")","kind":"text"}],"required":true,"role":"symbol","title":"unlock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","role":"symbol","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"title":"LockmanGroupCoordinationStrategy","type":"topic","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"navigatorTitle":[{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 4 different strategies."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"title":"LockmanCompositeStrategy4","role":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy4"},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","title":"strategyId","type":"topic","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","required":true},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"kind":"symbol","title":"LockmanDynamicConditionStrategy","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","role":"symbol","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"title":"LockmanCompositeStrategy2","type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy2","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","role":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 2 different strategies.","type":"text"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"role":"symbol","title":"LockmanCompositeStrategy3","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","url":"\/documentation\/lockman\/lockmancompositestrategy3","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"type":"topic","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","title":"cleanUp()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","title":"makeStrategyId()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"required":true,"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","title":"getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"role":"symbol","required":true},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","title":"LockmanStrategy","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"title":"lock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","kind":"symbol","role":"symbol"},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"}}}