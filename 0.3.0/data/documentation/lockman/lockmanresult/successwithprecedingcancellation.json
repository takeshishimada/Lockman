{"metadata":{"roleHeading":"Case","symbolKind":"case","externalID":"s:7Lockman0A6ResultO32successWithPrecedingCancellationyA2CmF","role":"symbol","title":"LockmanResult.successWithPrecedingCancellation","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"successWithPrecedingCancellation","kind":"identifier"}],"modules":[{"name":"Lockman"}]},"sections":[],"abstract":[{"type":"text","text":"Lock acquisition succeeded but requires canceling a preceding operation."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"successWithPrecedingCancellation"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"The requested lock was acquired, but an existing operation needs to be","type":"text"},{"text":" ","type":"text"},{"text":"canceled to make way for the new one. This typically occurs in priority-based","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strategies where a higher-priority action preempts a lower-priority one."}],"type":"paragraph"},{"inlineContent":[{"text":"When this result is returned, the calling code should:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Cancel the existing operation (usually via Effect cancellation)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Proceed with the new operation"}]}]}],"type":"orderedList"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanresult\/successwithprecedingcancellation"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult\/successWithPrecedingCancellation"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/LockmanResult/successWithPrecedingCancellation":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"successWithPrecedingCancellation"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanresult\/successwithprecedingcancellation","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult\/successWithPrecedingCancellation","type":"topic","role":"symbol","abstract":[{"text":"Lock acquisition succeeded but requires canceling a preceding operation.","type":"text"}],"title":"LockmanResult.successWithPrecedingCancellation"},"doc://Lockman/documentation/Lockman/LockmanResult":{"url":"\/documentation\/lockman\/lockmanresult","navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"title":"LockmanResult","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}]},"Lockman.png":{"identifier":"Lockman.png","type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]}}}