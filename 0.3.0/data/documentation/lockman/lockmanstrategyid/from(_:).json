{"abstract":[{"text":"Creates a strategy ID from a strategy type.","type":"text"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId\/from(_:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"from"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","text":"LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Convenience method for cleaner syntax:"}]},{"syntax":"swift","code":["let id = .from(MyStrategy.self)"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"]]},"kind":"symbol","metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Type Method","symbolKind":"method","externalID":"s:7Lockman0A10StrategyIdV4fromyACxmAA0aB0RzlFZ","title":"from(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"from"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategyid\/from(_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","title":"LockmanStrategy","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"title":"LockmanStrategyId","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"role":"symbol","kind":"symbol"},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","alt":"Lockman logo","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyId/from(_:)":{"abstract":[{"text":"Creates a strategy ID from a strategy type.","type":"text"}],"kind":"symbol","title":"from(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"from","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId\/from(_:)","url":"\/documentation\/lockman\/lockmanstrategyid\/from(_:)","type":"topic","role":"symbol"}}}