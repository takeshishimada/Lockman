{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","required":true,"externalID":"s:7Lockman0A8StrategyP4lock2id4infoyqd___1IQztSHRd__s8SendableRd__lF","modules":[{"name":"Lockman"}],"symbolKind":"method","role":"symbol","title":"lock(id:info:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}]}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" to be registered as active"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"When this method is called, the strategy should update its internal state"},{"type":"text","text":" "},{"type":"text","text":"to reflect that the lock has been acquired. The strategy is responsible"},{"type":"text","text":" "},{"type":"text","text":"for tracking this state until the corresponding "},{"type":"codeVoice","code":"unlock"},{"type":"text","text":" call."}],"type":"paragraph"},{"text":"Implementation Guidelines","anchor":"Implementation-Guidelines","level":2,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Should only be called after ","type":"text"},{"code":"canLock","type":"codeVoice"},{"text":" returns a success result","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Must update internal state to track the active lock","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Should be idempotent if called multiple times with the same parameters","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Thread Safety","anchor":"Thread-Safety","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method may be called concurrently and must handle concurrent"},{"type":"text","text":" "},{"type":"text","text":"access to internal state appropriately."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"title":"lock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","title":"LockmanStrategy","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"required":true,"title":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"}],"url":"\/documentation\/lockman\/lockmanstrategy\/i","role":"symbol"},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]}}}