{"abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}],"externalID":"s:7Lockman0A8StrategyP04makeB2IdAA0abD0VyFZ","role":"symbol","title":"makeStrategyId()","symbolKind":"method","required":true,"modules":[{"name":"Lockman"}],"roleHeading":"Type Method"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/makestrategyid()"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"}]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"LockmanStrategyId","type":"codeVoice"},{"type":"text","text":" that uniquely identifies this strategy type"}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This static method provides a consistent way to generate strategy IDs"},{"type":"text","text":" "},{"type":"text","text":"that can be used both during strategy initialization and in macro-generated code."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Implementation-Example","text":"Implementation Example"},{"syntax":"swift","type":"codeListing","code":["static func makeStrategyId() -> LockmanStrategyId {","  .init(name: \"myStrategy\")","}"]},{"level":2,"type":"heading","anchor":"For-Configurable-Strategies","text":"For Configurable Strategies"},{"syntax":"swift","type":"codeListing","code":["\/\/ Provide a default configuration","static func makeStrategyId() -> LockmanStrategyId {","  makeStrategyId(mode: .default)","}","","\/\/ And a parameterized version","static func makeStrategyId(mode: Mode) -> LockmanStrategyId {","  .init(name: \"myStrategy\", configuration: \"mode:\\(mode)\")","}"]}],"kind":"content"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"title":"LockmanStrategyId","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","title":"makeStrategyId()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"required":true,"kind":"symbol"},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","title":"LockmanStrategy","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]}}}