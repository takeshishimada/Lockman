{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A group identifier used by Lockman strategies, combining "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"text","text":"to ensure unique and concurrent-safe keys."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupId","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This type alias enables any type that is both "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" to be used"},{"type":"text","text":" "},{"type":"text","text":"as a group identifier in coordination strategies."}]},{"anchor":"Usage-Examples","type":"heading","text":"Usage Examples","level":2},{"syntax":"swift","code":["\/\/ Using String as group ID","let stringGroupId: any LockmanGroupId = \"navigation\"","","\/\/ Using custom enum as group ID","enum AppGroupId: String, LockmanGroupId {","    case navigation","    case dataLoading","    case authentication","}","let enumGroupId: any LockmanGroupId = AppGroupId.navigation","","\/\/ Using struct as group ID","struct FeatureGroupId: LockmanGroupId {","    let feature: String","    let version: Int","}","let structGroupId: any LockmanGroupId = FeatureGroupId(feature: \"search\", version: 2)"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmangroupid"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"Lockman"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanGroupId"}],"roleHeading":"Type Alias","title":"LockmanGroupId","symbolKind":"typealias","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupId","kind":"identifier"}],"externalID":"s:7Lockman0A7GroupIda"},"references":{"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanGroupId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","title":"LockmanGroupId","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A group identifier used by Lockman strategies, combining "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"text","text":"to ensure unique and concurrent-safe keys."}],"url":"\/documentation\/lockman\/lockmangroupid","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupId"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanGroupId"}]}}}