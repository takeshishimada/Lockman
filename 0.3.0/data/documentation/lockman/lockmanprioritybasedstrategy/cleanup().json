{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUpyyF","title":"cleanUp()","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Lockman"}]},"kind":"symbol","abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Clears all internal lock state, effectively resetting the strategy to its","type":"text"},{"text":" ","type":"text"},{"text":"initial state. This operation affects all boundaries simultaneously.","type":"text"}],"type":"paragraph"},{"anchor":"Use-Cases","text":"Use Cases","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown sequences"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Global system resets during development","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite cleanup between test cases"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","type":"topic","title":"Lockman","role":"collection","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","images":[{"identifier":"Lockman.png","type":"icon"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"title":"cleanUp()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","title":"LockmanPriorityBasedStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}]},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","alt":"Lockman logo","type":"image"}}}