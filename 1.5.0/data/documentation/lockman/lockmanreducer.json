{"metadata":{"modules":[{"name":"Lockman"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","externalID":"s:7Lockman0A7ReducerV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanReducer","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanReducer","kind":"identifier"}],"title":"LockmanReducer"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Lockman\/22ComposableArchitecture7ReducerP"],"kind":"relationships"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"A reducer wrapper that applies Lockman locking with true lock-first behavior.","type":"text"}],"topicSections":[{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/body"],"generated":true},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Action","doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/State"],"generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Reducer-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanReducer"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Base"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Lock-First Behavior","anchor":"Lock-First-Behavior","type":"heading","level":2},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"This reducer implements true lock-first behavior","type":"text"}]},{"type":"text","text":": Lock acquisition feasibility is checked"},{"type":"text","text":" "},{"type":"text","text":"BEFORE the base reducer executes, preventing state mutations when locks cannot be acquired."},{"type":"text","text":" "},{"type":"text","text":"This ensures complete exclusive control over both state changes and effects."}],"type":"paragraph"},{"text":"Lock Execution Flow & UniqueId Consistency","anchor":"Lock-Execution-Flow--UniqueId-Consistency","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"LockmanInfo Capture"}],"type":"strong"},{"type":"text","text":": Capture action’s lockmanInfo once to ensure consistent uniqueId"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lock Feasibility Check"}],"type":"strong"},{"text":": Determine if lock can be acquired using strategy’s ","type":"text"},{"code":"canLock","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Conditional State Mutation"}]},{"type":"text","text":": Base reducer executes ONLY if lock acquisition succeeded"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Effect Execution","type":"text"}],"type":"strong"},{"text":": Run effects with the already-acquired lock using same lockmanInfo","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Guaranteed Unlock","type":"text"}]},{"text":": Release lock when effects complete using matching uniqueId","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"text":"When Lock Fails","anchor":"When-Lock-Fails","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No state mutations occur (true lock-first behavior)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Base reducer is never called","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Lock failure handler is invoked if provided","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Effect returns ","type":"text"},{"type":"codeVoice","code":".none"},{"text":" (operation is completely cancelled)","type":"text"}]}]}],"type":"unorderedList"},{"text":"Strategy Resolution","anchor":"Strategy-Resolution","type":"heading","level":2},{"inlineContent":[{"text":"The reducer uses Effect-based strategy resolution to work around Swift’s existential type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"limitations, allowing type-safe strategy resolution before reducer execution."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct Feature {","  struct State: Equatable {","    var counter = 0  \/\/ ✅ Only mutated when lock can be acquired","  }","","  enum Action: LockmanSingleExecutionAction {","    case increment","    case decrement","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .increment, .decrement:","        return LockmanSingleExecutionInfo(actionId: \"counter\", mode: .boundary)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .increment:","        state.counter += 1  \/\/ ✅ Executes ONLY after lock feasibility check","        return .run { send in","          \/\/ This effect executes with the acquired lock","          await performSideEffect()","        }","      case .decrement:","        state.counter -= 1  \/\/ ✅ Executes ONLY after lock feasibility check","        return .none","      }","    }","    .lock(boundaryId: CancelID.feature)","  }","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanreducer"]}],"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanReducer/body":{"url":"\/documentation\/lockman\/lockmanreducer\/body","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/body","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"body","type":"topic","abstract":[]},"doc://Lockman/documentation/Lockman/LockmanReducer/Action":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Action"}],"kind":"symbol","title":"LockmanReducer.Action","url":"\/documentation\/lockman\/lockmanreducer\/action","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Action","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanReducer/State":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/State","type":"topic","url":"\/documentation\/lockman\/lockmanreducer\/state","title":"LockmanReducer.State","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"navigatorTitle":[{"kind":"identifier","text":"State"}],"kind":"symbol"},"doc://Lockman/22ComposableArchitecture7ReducerP":{"title":"ComposableArchitecture.Reducer","type":"unresolvable","identifier":"doc:\/\/Lockman\/22ComposableArchitecture7ReducerP"},"doc://Lockman/documentation/Lockman/LockmanReducer/Reducer-Implementations":{"title":"Reducer Implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/lockman\/lockmanreducer\/reducer-implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Reducer-Implementations"},"doc://Lockman/documentation/Lockman/LockmanReducer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanReducer","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanreducer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer","abstract":[{"type":"text","text":"A reducer wrapper that applies Lockman locking with true lock-first behavior."}],"navigatorTitle":[{"text":"LockmanReducer","kind":"identifier"}],"kind":"symbol","title":"LockmanReducer","role":"symbol","type":"topic"}}}