{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"}]}],"name":"boundaryId"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lock information of type ","type":"text"},{"type":"codeVoice","code":"I"}]}],"name":"info"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"LockmanResult","type":"codeVoice"},{"text":" indicating whether the lock can be acquired","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method delegates to the concrete strategyâ€™s implementation through the"},{"type":"text","text":" "},{"type":"text","text":"captured closure, maintaining identical behavior while hiding the concrete type."}],"type":"paragraph"},{"text":"Delegation Pattern","type":"heading","anchor":"Delegation-Pattern","level":2},{"inlineContent":[{"type":"text","text":"The type-erased wrapper acts as a transparent proxy, forwarding all calls to the"},{"type":"text","text":" "},{"type":"text","text":"underlying concrete strategy without modification. This ensures that the behavior"},{"type":"text","text":" "},{"type":"text","text":"is identical to calling the concrete strategy directly."}],"type":"paragraph"},{"text":"Error Handling","type":"heading","anchor":"Error-Handling","level":2},{"inlineContent":[{"type":"text","text":"Any errors thrown by the concrete strategy are propagated unchanged through this wrapper."},{"type":"text","text":" "},{"type":"text","text":"The wrapper does not add its own error handling or modification."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)"]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and information.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"title":"canLock(boundaryId:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"symbolKind":"method","externalID":"s:7Lockman03AnyA8StrategyV7canLock10boundaryId4infoAA0A6ResultOqd___xtSHRd__s8SendableRd__lF"},"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(boundaryId:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","role":"symbol","type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"title":"canLock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanResult":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","url":"\/documentation\/lockman\/lockmanresult","title":"LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}],"role":"symbol","kind":"symbol"}}}