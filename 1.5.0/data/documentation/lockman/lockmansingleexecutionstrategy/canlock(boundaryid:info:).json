{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}],"type":"paragraph"}],"name":"boundaryId"},{"content":[{"inlineContent":[{"text":"The lock information containing the action ID and execution mode","type":"text"}],"type":"paragraph"}],"name":"info"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":".success"},{"type":"text","text":" if the lock can be acquired, "},{"type":"codeVoice","code":".cancel"},{"type":"text","text":" if a lock conflict exists based on the execution mode"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The behavior depends on the execution mode specified in the info:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".none"},{"type":"text","text":": Always returns "},{"type":"codeVoice","code":".success"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".boundary"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" if any lock exists in the boundary"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".action"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" if a lock with the same action ID exists"}]}]}],"type":"unorderedList"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"syntax":"swift","code":["let strategy = LockmanSingleExecutionStrategy()","let info1 = LockmanSingleExecutionInfo(mode: .boundary)","let info2 = LockmanSingleExecutionInfo(mode: .action)","","strategy.lock(boundaryId: boundary, info: info1)","strategy.canLock(boundaryId: boundary, info: info2) \/\/ Result depends on mode and actionId"],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(boundaryid:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(boundaryId:info:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and action.","type":"text"}],"kind":"symbol","metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"symbolKind":"method","roleHeading":"Instance Method","title":"canLock(boundaryId:info:)","role":"symbol","externalID":"s:7Lockman0A23SingleExecutionStrategyC7canLock10boundaryId4infoAA0A6ResultOx_AA0abC4InfoVtSHRzs8SendableRzlF"},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"type":"topic","title":"LockmanSingleExecutionStrategy","kind":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanResult":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","url":"\/documentation\/lockman\/lockmanresult","title":"LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"title":"LockmanSingleExecutionInfo","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/canLock(boundaryId:info:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and action.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(boundaryId:info:)","title":"canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(boundaryid:info:)","type":"topic","role":"symbol"}}}