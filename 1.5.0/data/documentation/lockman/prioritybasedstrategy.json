{"variants":[{"paths":["\/documentation\/lockman\/prioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","interfaceLanguage":"swift"},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"Lockman"}],"title":"PriorityBasedStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","abstract":[{"type":"text","text":"Control action execution based on priority levels."}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"],"title":"Strategies","anchor":"Strategies"}],"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"PriorityBasedStrategy is a strategy that performs execution control based on priority. High-priority operations can interrupt low-priority operations to execute, allowing important operations to be handled preferentially.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This strategy is used in situations where high-urgency operations or control based on importance is required.","type":"text"}]},{"type":"heading","anchor":"Priority-System","text":"Priority System","level":2},{"type":"heading","anchor":"Priority-Levels","text":"Priority Levels","level":3},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"high","type":"text"}]},{"type":"text","text":" - High Priority"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Can interrupt all other priority operations"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"System-level emergency operations or important user operations"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"low"}]},{"text":" - Low Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Can interrupt none priority operations"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Interrupted by high priority"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Regular background operations"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"none"}],"type":"strong"},{"text":" - No Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Bypasses priority system"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Not interrupted by other operations","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Basic operations or temporary disabling"}],"type":"paragraph"}]}]},{"type":"heading","text":"Exclusive Execution Control","level":3,"anchor":"Exclusive-Execution-Control"},{"inlineContent":[{"type":"text","text":"Within the same priority level, control is based on the exclusive execution behavior setting of existing operations:"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"exclusive"}]},{"type":"text","text":" - Exclusive Execution"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["LockmanPriorityBasedInfo(","    actionId: \"payment\",","    priority: .high(.exclusive)",")"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Rejects new operations of the same priority","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protects important operations from interruption"}]}]}]},{"inlineContent":[{"inlineContent":[{"text":"replaceable","type":"text"}],"type":"strong"},{"type":"text","text":" - Replaceable Execution"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["LockmanPriorityBasedInfo(","    actionId: \"search\", ","    priority: .high(.replaceable)",")"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Can be interrupted by new operations of the same priority","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Applied to search or update operations"}],"type":"paragraph"}]}]},{"type":"heading","text":"Usage","level":2,"anchor":"Usage"},{"type":"heading","text":"Basic Usage Example","level":3,"anchor":"Basic-Usage-Example"},{"type":"codeListing","syntax":"swift","code":["@LockmanPriorityBased","enum ViewAction {","    case emergencySync","    case normalSync","    case backgroundTask","    ","    var lockmanInfo: LockmanPriorityBasedInfo {","        switch self {","        case .emergencySync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        case .backgroundTask:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .none","            )","        }","    }","}"]},{"type":"heading","text":"Operation Examples","level":2,"anchor":"Operation-Examples"},{"type":"heading","text":"Interruption by Priority","level":3,"anchor":"Interruption-by-Priority"},{"type":"codeListing","syntax":null,"code":["Time: 0s  - Low priority process starts    ‚Üí ‚úÖ Execute","Time: 2s  - High priority process request  ‚Üí ‚úÖ Execute (interrupts low process)","Time: 2s  - Low priority process           ‚Üí üõë Cancel","Time: 5s  - High priority process complete ‚Üí ‚úÖ Complete"]},{"type":"heading","text":"Control at Same Priority","level":3,"anchor":"Control-at-Same-Priority"},{"type":"codeListing","syntax":null,"code":["\/\/ Exclusive setting case","Time: 0s  - high(.exclusive) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.exclusive) request ‚Üí ‚ùå Reject","Time: 3s  - First process completes  ‚Üí ‚úÖ Complete","Time: 4s  - high(.exclusive) request ‚Üí ‚úÖ Execute","","\/\/ Replaceable setting case","Time: 0s  - high(.replaceable) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.replaceable) request ‚Üí ‚úÖ Execute (interrupts previous)","Time: 1s  - First process              ‚Üí üõë Cancel"]},{"level":2,"text":"Error Handling","type":"heading","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"text":"For errors that may occur with PriorityBasedStrategy and their solutions, please also refer to the common patterns on the ","type":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Error Handling"}],"overridingTitle":"Error Handling","type":"reference"},{"text":" page.","type":"text"}]},{"level":3,"text":"Error Types","type":"heading","anchor":"Error-Types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PriorityBasedStrategy uses two error types, both conforming to "},{"type":"codeVoice","code":"LockmanCancellationError"},{"type":"text","text":" protocol:"}]},{"level":4,"text":"LockmanPriorityBasedBlockedError","type":"heading","anchor":"LockmanPriorityBasedBlockedError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Occurs when a new action is blocked due to priority conflicts."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"BlockedReason cases:"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"higherPriorityExists"}],"type":"strong"},{"type":"text","text":" - Higher priority is running"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"samePriorityConflict"}],"type":"strong"},{"type":"text","text":" - Conflict at same priority"}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["lockFailure: { error, send in","    if let blockedError = error as? LockmanPriorityBasedBlockedError {","        switch blockedError.reason {","        case .higherPriorityExists(let requested, let current):","            await send(.priorityConflict(\"Waiting due to high priority process running\"))","        case .samePriorityConflict(let priority):","            await send(.busyMessage(\"Process with same priority is running\"))","        }","    }","}"],"type":"codeListing"},{"level":4,"text":"LockmanPriorityBasedCancellationError","type":"heading","anchor":"LockmanPriorityBasedCancellationError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Occurs when an existing action is cancelled by preemption."}]},{"syntax":"swift","code":["catch handler: { error, send in","    if let cancellationError = error as? LockmanPriorityBasedCancellationError {","        await send(.processCancelled(\"Interrupted by high priority process: \\(cancellationError.cancelledInfo.actionId)\"))","    }","}"],"type":"codeListing"}],"kind":"content"}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"type":"topic","kind":"article","title":"ConcurrencyLimitedStrategy","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"url":"\/documentation\/lockman\/concurrencylimitedstrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}],"type":"topic","kind":"article","url":"\/documentation\/lockman\/singleexecutionstrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","title":"SingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"kind":"article","type":"topic","url":"\/documentation\/lockman\/compositestrategy","role":"article","abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","title":"CompositeStrategy"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","abstract":[{"text":"Control actions based on runtime conditions with unified condition evaluation.","type":"text"}],"url":"\/documentation\/lockman\/dynamicconditionstrategy","title":"Dynamic Condition Evaluation","type":"topic"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"url":"\/documentation\/lockman\/groupcoordinationstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"role":"article","title":"GroupCoordinationStrategy","kind":"article"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic","kind":"article","url":"\/documentation\/lockman\/errorhandling","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}],"role":"article","title":"Error Handling"}}}