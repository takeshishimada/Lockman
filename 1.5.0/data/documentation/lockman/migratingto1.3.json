{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/MigratingTo1.3"},"sections":[],"abstract":[{"type":"text","text":"Update your code from Lockman 1.2 to take advantage of Lockman 1.3â€™s simplified API and enhanced safety features."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","metadata":{"modules":[{"name":"Lockman"}],"role":"article","title":"Migrating to 1.3","roleHeading":"Article"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Lockman 1.3 introduces a major API simplification by removing the ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" methods in favor of the more consistent ","type":"text"},{"code":"Effect.lock","type":"codeVoice"},{"text":" method chain approach. This change eliminates API duplication and provides a cleaner, more maintainable codebase.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The key improvements include:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removal of "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" methods for API consistency"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Enhanced safety through automatic lock management"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Simplified learning curve with fewer API options"}]}]},{"content":[{"inlineContent":[{"text":"Better integration with TCAâ€™s Effect patterns","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Updating dependencies","anchor":"Updating-dependencies"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To upgrade to Lockman 1.3, update your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" file:"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(","    url: \"https:\/\/github.com\/takeshishimada\/Lockman\",","    from: \"1.3.0\"","  )","]"]},{"type":"heading","level":2,"text":"Breaking changes","anchor":"Breaking-changes"},{"type":"heading","level":3,"text":"Removal of withLock methods","anchor":"Removal-of-withLock-methods"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" methods have been removed. Use "},{"type":"codeVoice","code":"Effect.lock"},{"type":"text","text":" method chain or "},{"type":"codeVoice","code":"Reducer.lock"},{"type":"text","text":" instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸš« Before (1.2):"}]},{"type":"codeListing","syntax":"swift","code":["return .withLock(","  operation: { send in","    try await performWork()","    await send(.completed)","  },","  catch handler: { error, send in","    await send(.failed(error))","  },","  lockFailure: { error, send in","    await send(.lockFailed)","  },","  action: action,","  boundaryId: CancelID.operation",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"âœ… After (1.3):"}]},{"type":"codeListing","syntax":"swift","code":["return .run { send in","  try await performWork()","  await send(.completed)","} catch: { error, send in","  await send(.failed(error))","}",".lock(","  action: action,","  boundaryId: CancelID.operation,","  lockFailure: { error, send in","    await send(.lockFailed)","  }",")"]},{"type":"heading","level":3,"text":"Removal of withLock(concatenating:)","anchor":"Removal-of-withLockconcatenating"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"withLock(concatenating:)","type":"codeVoice"},{"text":" method has been renamed to ","type":"text"},{"code":"Effect.lock(concatenating:)","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"ðŸš« Before (1.2):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["return .withLock(","  concatenating: [","    .run { send in await step1() },","    .run { send in await step2() },","    .run { send in await step3() }","  ],","  action: action,","  boundaryId: CancelID.workflow",")"]},{"type":"paragraph","inlineContent":[{"text":"âœ… After (1.3):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["return .lock(","  concatenating: [","    .run { send in await step1() },","    .run { send in await step2() },","    .run { send in await step3() }","  ],","  action: action,","  boundaryId: CancelID.workflow",")"]},{"type":"heading","level":3,"text":"Manual unlock functionality removed","anchor":"Manual-unlock-functionality-removed"},{"type":"paragraph","inlineContent":[{"text":"Manual unlock functionality (unlock parameter in operation) has been removed. All locks are now automatically managed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"ðŸš« Before (1.2):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["return .withLock(","  operation: { send, unlock in","    defer { unlock() }","    try await performWork()","    await send(.completed)","  },","  action: action,","  boundaryId: CancelID.operation",")"]},{"type":"paragraph","inlineContent":[{"text":"âœ… After (1.3):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["return .run { send in","  try await performWork()","  await send(.completed)","}",".lock(","  action: action,","  boundaryId: CancelID.operation,","  unlockOption: .immediate \/\/ Control timing instead",")"]},{"type":"heading","level":2,"text":"Migration strategy","anchor":"Migration-strategy"},{"type":"heading","level":3,"text":"Step 1: Replace withLock with Effect.lock","anchor":"Step-1-Replace-withLock-with-Effectlock"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For each "},{"type":"codeVoice","code":"withLock"},{"type":"text","text":" call:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Move the operation closure to a "},{"type":"codeVoice","code":".run { }"},{"type":"text","text":" effect"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Move the catch handler to "},{"type":"codeVoice","code":".catch { }"},{"type":"text","text":" if present"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Chain "},{"type":"codeVoice","code":".lock()"},{"type":"text","text":" with the action and boundary parameters"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Move lockFailure to the lock method","type":"text"}]}]}]},{"type":"heading","level":3,"text":"Step 2: Replace withLock(concatenating:) calls","anchor":"Step-2-Replace-withLockconcatenating-calls"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Change method name from ","type":"text"},{"code":".withLock(concatenating:","type":"codeVoice"},{"text":" to ","type":"text"},{"code":".lock(concatenating:","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters remain the same"}]}]}]},{"type":"heading","level":3,"text":"Step 3: Remove manual unlock usage","anchor":"Step-3-Remove-manual-unlock-usage"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Remove "},{"type":"codeVoice","code":"unlock"},{"type":"text","text":" parameter from operation closures"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove manual "},{"type":"codeVoice","code":"unlock()"},{"type":"text","text":" calls"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"unlockOption"},{"type":"text","text":" parameter to control timing if needed"}]}]}]},{"type":"heading","level":2,"text":"Complete migration examples","anchor":"Complete-migration-examples"},{"type":"heading","level":3,"text":"Basic operation migration","anchor":"Basic-operation-migration"},{"type":"paragraph","inlineContent":[{"text":"ðŸš« Before (1.2):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["case .fetchData:","  return .withLock(","    operation: { send in","      let data = try await apiClient.fetchData()","      await send(.dataReceived(data))","    },","    catch handler: { error, send in","      await send(.fetchFailed(error))","    },","    lockFailure: { error, send in","      await send(.fetchBlocked)","    },","    action: action,","    boundaryId: CancelID.fetch","  )"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"âœ… After (1.3):"}]},{"type":"codeListing","syntax":"swift","code":["case .fetchData:","  return .run { send in","    let data = try await apiClient.fetchData()","    await send(.dataReceived(data))","  } catch: { error, send in","    await send(.fetchFailed(error))","  }","  .lock(","    action: action,","    boundaryId: CancelID.fetch,","    lockFailure: { error, send in","      await send(.fetchBlocked)","    }","  )"]},{"type":"heading","level":3,"text":"Concatenated operations migration","anchor":"Concatenated-operations-migration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ðŸš« Before (1.2):"}]},{"type":"codeListing","syntax":"swift","code":["case .processWorkflow:","  return .withLock(","    concatenating: [","      .send(.workflowStarted),","      .run { send in await processStep1() },","      .run { send in await processStep2() },","      .send(.workflowCompleted)","    ],","    unlockOption: .transition,","    action: action,","    boundaryId: CancelID.workflow","  )"]},{"type":"paragraph","inlineContent":[{"text":"âœ… After (1.3):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["case .processWorkflow:","  return .lock(","    concatenating: [","      .send(.workflowStarted),","      .run { send in await processStep1() },","      .run { send in await processStep2() },","      .send(.workflowCompleted)","    ],","    unlockOption: .transition,","    action: action,","    boundaryId: CancelID.workflow","  )"]},{"type":"heading","level":3,"text":"Complex manual unlock migration","anchor":"Complex-manual-unlock-migration"},{"type":"paragraph","inlineContent":[{"text":"ðŸš« Before (1.2):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["case .complexOperation:","  return .withLock(","    operation: { send, unlock in","      try await phase1()","      ","      if shouldSkipPhase2 {","        unlock()","        await send(.skipped)","        return","      }","      ","      try await phase2()","      unlock()","      await send(.completed)","    },","    catch handler: { error, send, unlock in","      unlock()","      await send(.failed(error))","    },","    action: action,","    boundaryId: CancelID.complex","  )"]},{"type":"paragraph","inlineContent":[{"text":"âœ… After (1.3):","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["case .complexOperation:","  return .run { send in","    try await phase1()","    ","    if shouldSkipPhase2 {","      await send(.skipped)","      return","    }","    ","    try await phase2()","    await send(.completed)","  } catch: { error, send in","    await send(.failed(error))","  }","  .lock(","    action: action,","    boundaryId: CancelID.complex,","    unlockOption: .immediate \/\/ Automatic timing control","  )"]},{"type":"heading","level":2,"text":"Benefits of upgrading","anchor":"Benefits-of-upgrading"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Simplified API"}],"type":"strong"},{"text":": Single consistent method chain approach","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Enhanced safety"}],"type":"strong"},{"text":": Automatic lock management prevents lock leaks","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Better TCA integration","type":"text"}],"type":"strong"},{"text":": Natural fit with Effect patterns","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Reduced learning curve","type":"text"}],"type":"strong"},{"text":": Fewer API variants to learn","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Improved maintainability"}]},{"type":"text","text":": Cleaner, more predictable code patterns"}]}]}]},{"type":"heading","level":2,"text":"API mapping reference","anchor":"API-mapping-reference"},{"type":"table","header":"row","rows":[[[{"type":"paragraph","inlineContent":[{"text":"Old API (1.2)","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"New API (1.3)"}]}]],[[{"type":"paragraph","inlineContent":[{"code":".withLock(operation:...)","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".run {...}.lock(...)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".withLock(concatenating:...)"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".lock(concatenating:...)"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"operation: { send, unlock in }"}]}],[{"type":"paragraph","inlineContent":[{"code":".run { send in }","type":"codeVoice"},{"type":"text","text":" with "},{"code":"unlockOption","type":"codeVoice"}]}]],[[{"type":"paragraph","inlineContent":[{"text":"Manual ","type":"text"},{"code":"unlock()","type":"codeVoice"},{"text":" calls","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic with "},{"code":"unlockOption","type":"codeVoice"},{"type":"text","text":" control"}]}]]]},{"type":"heading","level":2,"text":"Testing your migration","anchor":"Testing-your-migration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After migrating, verify that:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Lock behavior is maintained"}]},{"type":"text","text":": Operations are still properly locked"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Error handling works","type":"text"}]},{"text":": Both operation errors and lock failures are handled","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Timing is correct"}]},{"type":"text","text":": Use "},{"type":"codeVoice","code":"unlockOption"},{"type":"text","text":" to adjust timing if needed"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Performance is maintained"}]},{"text":": No regression in lock performance","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Summary","anchor":"Summary"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lockman 1.3 represents a significant API simplification while maintaining all the functionality and safety guarantees of previous versions. The migration primarily involves moving from "},{"code":"withLock","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Effect.lock","type":"codeVoice"},{"type":"text","text":" method chains, which provides a cleaner and more consistent API surface."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Key takeaways:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Breaking changes"}]},{"text":": ","type":"text"},{"code":"withLock","type":"codeVoice"},{"text":" methods removed","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Consistent API","type":"text"}]},{"text":": Single method chain approach with ","type":"text"},{"type":"codeVoice","code":"Effect.lock"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Enhanced safety"}],"type":"strong"},{"type":"text","text":": Automatic lock management only"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Better integration","type":"text"}]},{"type":"text","text":": Natural fit with TCA Effect patterns"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new API eliminates confusion between different locking approaches and provides a more maintainable codebase going forward."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/migratingto1.3"]}],"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"}}}