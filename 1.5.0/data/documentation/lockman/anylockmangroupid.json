{"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/s8CopyableP","doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","doc:\/\/Lockman\/SQ","doc:\/\/Lockman\/SH","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmangroupid"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"],"title":"Operators","generated":true,"anchor":"Operators"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"identifier"}]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"This wrapper enables different types of group identifiers to coexist in the same","type":"text"},{"text":" ","type":"text"},{"text":"collection while maintaining type safety for hashing and equality operations.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Type Erasure Benefits","anchor":"Type-Erasure-Benefits"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Allows "},{"type":"codeVoice","code":"Set<AnyLockmanGroupId>"},{"type":"text","text":" with mixed group ID types"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maintains value semantics and equality comparison"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Preserves hashing behavior from underlying types","type":"text"}]}]}]},{"level":2,"type":"heading","text":"Thread Safety","anchor":"Thread-Safety"},{"inlineContent":[{"type":"text","text":"Marked as "},{"type":"codeVoice","code":"@unchecked Sendable"},{"type":"text","text":" because "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" is thread-safe for"},{"type":"text","text":" "},{"type":"text","text":"hashing and equality operations, and the wrapper doesnâ€™t add mutable state."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Usage Example","anchor":"Usage-Example"},{"code":["enum FeatureGroup: String, LockmanGroupId {","  case navigation, dataSync, authentication","}","","struct ModuleGroup: LockmanGroupId {","  let module: String","  let submodule: String","}","","\/\/ Both can be used as group IDs in the same collection","let featureGroup = AnyLockmanGroupId(FeatureGroup.navigation)","let moduleGroup = AnyLockmanGroupId(ModuleGroup(module: \"user\", submodule: \"profile\"))","","\/\/ Can be stored in the same Set","let groupIds: Set<AnyLockmanGroupId> = [featureGroup, moduleGroup]"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"title":"AnyLockmanGroupId","modules":[{"name":"Lockman"}],"roleHeading":"Structure","externalID":"s:7Lockman03AnyA7GroupIdV","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}]},"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanGroupId","type":"codeVoice"},{"type":"text","text":", allowing heterogeneous group IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/Lockman\/SH"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/Equatable-Implementations":{"type":"topic","abstract":[],"kind":"article","role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/lockman\/anylockmangroupid\/equatable-implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"type":"topic","title":"AnyLockmanGroupId","kind":"symbol","url":"\/documentation\/lockman\/anylockmangroupid","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanGroupId","type":"codeVoice"},{"type":"text","text":", allowing heterogeneous group IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}]},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/CustomDebugStringConvertible-Implementations":{"abstract":[],"kind":"article","title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/lockman\/anylockmangroupid\/customdebugstringconvertible-implementations","type":"topic","role":"collectionGroup"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","role":"symbol","type":"topic","title":"init(_:)","abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"LockmanGroupId","preciseIdentifier":"s:7Lockman0A7GroupIda"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/==(_:_:)":{"abstract":[{"type":"text","text":"Compares two "},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"type":"text","text":" instances for equality."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)","url":"\/documentation\/lockman\/anylockmangroupid\/==(_:_:)","title":"==(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol"},"doc://Lockman/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/Lockman\/s28CustomDebugStringConvertibleP"},"doc://Lockman/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Lockman\/SQ"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/hash(into:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"url":"\/documentation\/lockman\/anylockmangroupid\/hash(into:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)","type":"topic","role":"symbol","title":"hash(into:)","kind":"symbol","abstract":[{"type":"text","text":"Generates a hash value for this group ID."}]},"doc://Lockman/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8CopyableP"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"}}}