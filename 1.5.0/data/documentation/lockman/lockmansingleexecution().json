{"metadata":{"title":"LockmanSingleExecution()","roleHeading":"Macro","role":"symbol","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A15SingleExecutionyycfm","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for single execution locking behavior."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecution()"]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","text":"LockmanSingleExecutionAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanSingleExecutionAction","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"actionName","type":"codeVoice"},{"text":" property that returns the enum case name as a String","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Important","type":"text"}]},{"text":": You must implement the ","type":"text"},{"code":"lockmanInfo","type":"codeVoice"},{"text":" property to specify the execution mode:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".none"},{"type":"text","text":": No exclusive execution (always allows locks)"}]}]},{"content":[{"inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Only one action per boundary at a time (default behavior)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".action"},{"type":"text","text":": Only one instance of the same actionId at a time"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Example usage with TCA:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .run { send in","          \/\/ async work","        }","        .lock(","          action: .login,","          boundaryId: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","sections":[],"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"abstract":[{"text":"A specialized ","type":"text"},{"code":"LockmanAction","type":"codeVoice"},{"text":" for single-execution locking semantics.","type":"text"}],"url":"\/documentation\/lockman\/lockmansingleexecutionaction","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionAction"}],"kind":"symbol","title":"LockmanSingleExecutionAction","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionAction"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction"},"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","kind":"symbol","abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"title":"LockmanSingleExecution()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecution()","type":"topic"}}}