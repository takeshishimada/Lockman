{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"},"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"anchor":"Type-Aliases","title":"Type Aliases","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"anchor":"Type-Properties","title":"Type Properties","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"anchor":"Type-Methods","title":"Type Methods","generated":true}],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"roleHeading":"Class","symbolKind":"class","externalID":"s:7Lockman0A21PriorityBasedStrategyC","title":"LockmanPriorityBasedStrategy","role":"symbol"},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This strategy implements a sophisticated priority system that allows higher-priority","type":"text"},{"text":" ","type":"text"},{"text":"actions to preempt lower-priority ones, while providing configurable concurrency","type":"text"},{"text":" ","type":"text"},{"text":"behavior for actions of the same priority level.","type":"text"}]},{"type":"heading","text":"Priority System Overview","anchor":"Priority-System-Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The strategy maintains a per-boundary collection of active "},{"type":"codeVoice","code":"LockmanPriorityBasedInfo"},{"type":"text","text":" "},{"type":"text","text":"instances and uses the priority hierarchy to determine execution precedence:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"High Priority","type":"text"}]},{"type":"text","text":" (.high): Can cancel low\/none priority actions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Low Priority","type":"text"}],"type":"strong"},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"No Priority","type":"text"}]},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}]}]}]},{"type":"heading","text":"Concurrency Behavior Logic","anchor":"Concurrency-Behavior-Logic","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"code":"canLock","type":"codeVoice"},{"type":"text","text":" is called for same-priority actions, the strategy evaluates conflicts"},{"type":"text","text":" "},{"type":"text","text":"using the existing action’s concurrency behavior:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"No Priority Actions","type":"text"}]},{"type":"text","text":": Always succeed (bypass priority system)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Priority vs Non-Priority","type":"text"}]},{"text":": Priority actions always win","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Different Priority Levels"}]},{"type":"text","text":": Higher priority wins"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Same Priority Level"}]},{"text":": Apply existing action’s ","type":"text"},{"code":"ConcurrencyBehavior","type":"codeVoice"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Exclusive"}]},{"type":"text","text":": Existing action continues, new action fails"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Replaceable"}],"type":"strong"},{"type":"text","text":": Existing action is canceled, new action succeeds"}]}]}]}]}]},{"type":"heading","text":"Thread Safety","anchor":"Thread-Safety","level":2},{"type":"paragraph","inlineContent":[{"text":"This strategy is thread-safe through the underlying ","type":"text"},{"type":"codeVoice","code":"LockmanState"},{"text":" which provides","type":"text"},{"text":" ","type":"text"},{"text":"synchronized access to the per-boundary lock collections.","type":"text"}]},{"type":"heading","text":"Usage Examples","anchor":"Usage-Examples","level":2},{"type":"codeListing","code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(boundaryId: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(boundaryId: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"syntax":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","role":"symbol","kind":"symbol","title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","type":"topic","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(boundaryId:)":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(boundaryid:)","title":"cleanUp(boundaryId:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary across all priority levels."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","role":"symbol","title":"LockmanPriorityBasedStrategy.I","abstract":[],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"I"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(boundaryId:info:)":{"title":"lock(boundaryId:info:)","abstract":[{"type":"text","text":"Registers a priority-based lock for the specified boundary and action."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(boundaryid:info:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(boundaryId:info:)":{"title":"canLock(boundaryId:info:)","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(boundaryid:info:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","abstract":[{"text":"Evaluates whether a priority-based lock can be acquired.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"title":"getCurrentLocks()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"kind":"symbol","type":"topic","role":"symbol","title":"LockmanPriorityBasedStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(boundaryId:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(boundaryid:info:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired priority-based lock."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)","title":"unlock(boundaryId:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","title":"shared","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","text":"LockmanPriorityBasedStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","abstract":[{"text":"Shared singleton instance for coordinating priority-based locks across the application.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new priority-based strategy instance."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","title":"init()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"type":"topic","title":"cleanUp()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","abstract":[{"text":"Removes all priority-based locks across all boundaries and priority levels.","type":"text"}],"role":"symbol"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","kind":"symbol","role":"symbol","title":"makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for the priority-based strategy."}]}}}