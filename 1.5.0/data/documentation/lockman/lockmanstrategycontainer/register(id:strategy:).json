{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"typeIdentifier","text":"LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP"}]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The unique identifier for this strategy configuration","type":"text"}]}]},{"name":"strategy","content":[{"inlineContent":[{"text":"A concrete strategy conforming to ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The strategy is wrapped in "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" for type-safe storage"},{"type":"text","text":" "},{"type":"text","text":"while allowing heterogeneous strategy types to coexist in the container."},{"type":"text","text":" "},{"type":"text","text":"Each strategy ID can only be registered once to prevent conflicts."}],"type":"paragraph"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"LockmanRegistrationError.strategyAlreadyRegistered","type":"codeVoice"},{"type":"text","text":" if this ID is already registered"}],"type":"paragraph"}],"type":"aside","style":"note"},{"level":2,"anchor":"Complexity","type":"heading","text":"Complexity"},{"inlineContent":[{"text":"O(1) - Direct hash map insertion with conflict detection","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Thread-Safety","type":"heading","text":"Thread Safety"},{"inlineContent":[{"type":"text","text":"Safe to call concurrently from multiple threads. Registration is atomic."}],"type":"paragraph"},{"level":2,"anchor":"Example","type":"heading","text":"Example"},{"code":["let container = LockmanStrategyContainer()","try container.register(id: .singleExecution, strategy: LockmanSingleExecutionStrategy.shared)","try container.register(id: \"MyApp.RateLimit:100\", strategy: RateLimitStrategy(limit: 100))"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"Registers a concrete strategy instance with a specific identifier.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(id:strategy:)"},"metadata":{"title":"register(id:strategy:)","externalID":"s:7Lockman0A17StrategyContainerC8register2id8strategyyAA0aB2IdV_xtKAA0aB0RzlF","symbolKind":"method","modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/register(id:strategy:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/register(id:strategy:)":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(id:strategy:)","title":"register(id:strategy:)","url":"\/documentation\/lockman\/lockmanstrategycontainer\/register(id:strategy:)","abstract":[{"text":"Registers a concrete strategy instance with a specific identifier.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"role":"symbol","title":"LockmanStrategyContainer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"kind":"symbol","navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"title":"LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategyid","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"}}}