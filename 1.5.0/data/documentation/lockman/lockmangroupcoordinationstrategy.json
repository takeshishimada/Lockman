{"topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()"],"title":"Initializers"},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"],"title":"Instance Properties"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)"],"title":"Instance Methods"},{"anchor":"Type-Aliases","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I"],"title":"Type Aliases"},{"anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared"],"title":"Type Properties"},{"anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()"],"title":"Type Methods"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"title":"Conforms To"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A25GroupCoordinationStrategyC","role":"symbol","title":"LockmanGroupCoordinationStrategy","roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy manages group-based locking where:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Leaders","type":"text"}]},{"text":" can execute based on their entry policy:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".emptyGroup","type":"codeVoice"},{"text":": Only when the group is completely empty","type":"text"}]}]},{"content":[{"inlineContent":[{"code":".withoutMembers","type":"codeVoice"},{"text":": When there are no members (other leaders allowed)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".withoutLeader","type":"codeVoice"},{"type":"text","text":": When there is no other leader (members allowed)"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Members"}],"type":"strong"},{"type":"text","text":" can only execute when their group has active participants"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This creates a coordination pattern where leaders start group activities"},{"type":"text","text":" "},{"type":"text","text":"and members can only join existing group activities."}]},{"type":"heading","level":2,"anchor":"Key-Features","text":"Key Features"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Groups are identified by string IDs and operate independently"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Multiple members can execute concurrently within the same group"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Prevents duplicate execution of the same action within a group"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Groups automatically dissolve when the last member completes","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"anchor":"Usage-Example","text":"Usage Example"},{"type":"codeListing","syntax":"swift","code":["let strategy = LockmanGroupCoordinationStrategy()","let boundaryId = \"mainScreen\"","","\/\/ Non-exclusive participant","let nonExclusiveInfo = LockmanGroupCoordinatedInfo(","  actionId: \"loadData\",","  groupId: \"dataLoading\",","  coordinationRole: .none",")","","\/\/ Leader that requires empty group","let emptyGroupLeader = LockmanGroupCoordinatedInfo(","  actionId: \"navigate\",","  groupId: \"navigation\",","  coordinationRole: .leader(.emptyGroup)",")","","\/\/ Members can join active group","let memberInfo = LockmanGroupCoordinatedInfo(","  actionId: \"showProgress\",","  groupId: \"dataLoading\",","  coordinationRole: .member",")","","\/\/ Leader that allows other leaders","let multiLeaderInfo = LockmanGroupCoordinatedInfo(","  actionId: \"secondaryLoad\",","  groupId: \"dataLoading\",","  coordinationRole: .leader(.withoutMembers)",")"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordinationstrategy"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/makeStrategyId()":{"kind":"symbol","title":"makeStrategyId()","role":"symbol","type":"topic","abstract":[{"text":"Creates a strategy identifier for the group coordination strategy.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/makestrategyid()"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/lock(boundaryId:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","text":"LockmanGroupCoordinatedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","abstract":[{"text":"Acquires locks by registering the action in all specified group coordination states.","type":"text"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/lock(boundaryid:info:)","kind":"symbol","type":"topic","title":"lock(boundaryId:info:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/I":{"title":"LockmanGroupCoordinationStrategy.I","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/i","navigatorTitle":[{"text":"I","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/canLock(boundaryId:info:)":{"kind":"symbol","role":"symbol","title":"canLock(boundaryId:info:)","type":"topic","abstract":[{"type":"text","text":"Checks if locks can be acquired for group coordination based on roles and policies."}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/canlock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","text":"LockmanGroupCoordinatedInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"kind":"symbol","type":"topic","role":"symbol","title":"LockmanGroupCoordinationStrategy"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/getCurrentLocks()":{"role":"symbol","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/getcurrentlocks()","type":"topic","title":"getCurrentLocks()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/strategyId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId","abstract":[{"type":"text","text":"The identifier for this strategy."}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"type":"topic","title":"strategyId","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/strategyid"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A25GroupCoordinationStrategyC","text":"LockmanGroupCoordinationStrategy","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared","abstract":[{"text":"The shared singleton instance.","type":"text"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/shared","kind":"symbol","type":"topic","title":"shared","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"title":"cleanUp()","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","abstract":[{"text":"Removes all active locks across all boundaries and groups.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/init()":{"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()","abstract":[{"type":"text","text":"Creates a new group coordination strategy instance."}],"title":"init()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/init()"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/unlock(boundaryId:info:)":{"title":"unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/unlock(boundaryid:info:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Releases locks by removing the action from all specified group coordination states."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp(boundaryId:)":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","role":"symbol","abstract":[{"type":"text","text":"Removes all active locks for the specified boundary across all groups."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup(boundaryid:)"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}