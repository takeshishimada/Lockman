{"metadata":{"role":"article","roleHeading":"Article","title":"Configuration","modules":[{"name":"Lockman"}]},"abstract":[{"text":"Configure Lockman for your application’s needs.","type":"text"}],"variants":[{"paths":["\/documentation\/lockman\/configuration"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"LockmanManager provides configuration functionality to set Lockman’s behavior throughout the application. These settings allow you to customize default lock release timing and error handling behavior.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Once configured, settings apply application-wide and can be overridden at various levels: in ","type":"text"},{"overridingTitle":"Effect.lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"Effect.lock"}]},{"text":" method chains or when configuring ","type":"text"},{"overridingTitle":"Reducer.lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference","isActive":true,"overridingTitleInlineContent":[{"code":"Reducer.lock","type":"codeVoice"}]},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"text":"Configuration Options","anchor":"Configuration-Options","type":"heading"},{"level":3,"text":"defaultUnlockOption","anchor":"defaultUnlockOption","type":"heading"},{"inlineContent":[{"text":"Sets the default timing for lock release.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Configure during application initialization","LockmanManager.config.defaultUnlockOption = .immediate"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Available values"}]},{"text":":","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":".immediate"}]},{"type":"text","text":": Release immediately upon completion (default)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"code":".mainRunLoop","type":"codeVoice"}]},{"text":": Release on the next main loop cycle","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":".transition"}]},{"text":": Release after platform-specific screen transition animation","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"code":".delayed(TimeInterval)","type":"codeVoice"}],"type":"strong"},{"text":": Release after the specified time interval","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"Priority order","type":"text"}],"type":"strong"},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Explicitly specified in method call ("},{"type":"codeVoice","code":"Effect.lock"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Reducer.lock"},{"type":"text","text":") (highest priority)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Action’s "},{"type":"codeVoice","code":"unlockOption"},{"type":"text","text":" property (if implementing "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"LockmanManager.config.defaultUnlockOption"},{"type":"text","text":" (lowest priority)"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Use cases","type":"text"}]},{"text":":","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Unified release timing considering UI transitions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Consistent behavior settings across the application"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adjustments for performance optimization","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"text":"handleCancellationErrors","anchor":"handleCancellationErrors","type":"heading"},{"inlineContent":[{"type":"text","text":"Sets how to handle cancellation errors."}],"type":"paragraph"},{"code":["\/\/ Ignore cancellation errors (default)","LockmanManager.config.handleCancellationErrors = false","","\/\/ Pass cancellation errors to error handler","LockmanManager.config.handleCancellationErrors = true"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Values"}],"type":"strong"},{"text":":","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"code":"false","type":"codeVoice"}],"type":"strong"},{"text":": Ignore cancellation errors and don’t pass to error handler (default)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":"true"}]},{"text":": Pass cancellation errors to error handler","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"Use cases","type":"text"}],"type":"strong"},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Logging cancellation operations"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Tracking cancellation situations during debugging","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Collecting statistical information","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"Configuration Examples","anchor":"Configuration-Examples","type":"heading"},{"level":3,"text":"Configuration during Application Initialization","anchor":"Configuration-during-Application-Initialization","type":"heading"},{"code":["\/\/ Configure in AppDelegate or App struct","func applicationDidFinishLaunching() {","    \/\/ Set release timing considering UI transitions","    LockmanManager.config.defaultUnlockOption = .transition","    ","    \/\/ Log cancellation errors during development","    #if DEBUG","    LockmanManager.config.handleCancellationErrors = true","    #endif","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Individual Override","anchor":"Individual-Override","type":"heading"},{"code":["\/\/ Override in Reducer.lock()",".lock(","    boundaryId: CancelID.feature,","    unlockOption: .immediate, \/\/ Override global setting","    lockFailure: { error, send in","        \/\/ Error handling","    }",")","","\/\/ Override in Effect.lock()",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .delayed(0.5) \/\/ Override for this effect",")","","\/\/ Override with manual unlock timing control",".run { send in","    \/\/ Operations that require transition timing","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition \/\/ Override for fine control",")"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Notes","anchor":"Notes","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since configuration changes affect the entire application, it’s recommended to configure during initialization"}]}]},{"content":[{"inlineContent":[{"text":"Runtime configuration changes are possible but should be done carefully to avoid unexpected behavior","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"During testing, it’s recommended to reset settings to avoid effects between tests"}]}]}],"type":"unorderedList"}],"kind":"content"}],"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"generated":true,"anchor":"Essentials"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","interfaceLanguage":"swift"},"sections":[],"references":{"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"title":"Choosing a Strategy","kind":"article","url":"\/documentation\/lockman\/choosingstrategy","type":"topic","abstract":[{"type":"text","text":"Learn how to select the right strategy for your use case."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","role":"article"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","type":"topic","kind":"article","title":"Boundary","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"role":"article","url":"\/documentation\/lockman\/boundaryoverview"},"doc://Lockman/documentation/Lockman/Unlock":{"role":"article","type":"topic","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","url":"\/documentation\/lockman\/unlock","title":"Unlock","abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}]},"doc://Lockman/documentation/Lockman/GettingStarted":{"role":"article","type":"topic","title":"Getting Started","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","url":"\/documentation\/lockman\/gettingstarted","abstract":[{"text":"Learn how to integrate Lockman into your TCA application.","type":"text"}]},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"role":"article","kind":"article","abstract":[{"text":"Learn how to debug Lockman-related issues in your application.","type":"text"}],"title":"Debugging Guide","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic","kind":"article","url":"\/documentation\/lockman\/errorhandling","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}],"role":"article","title":"Error Handling"},"doc://Lockman/documentation/Lockman/Lock":{"url":"\/documentation\/lockman\/lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","title":"Lock","kind":"article","abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}],"role":"article","type":"topic"}}}