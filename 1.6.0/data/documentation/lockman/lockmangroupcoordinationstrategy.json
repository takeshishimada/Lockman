{"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)"]},{"anchor":"Type-Aliases","generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I"]},{"anchor":"Type-Properties","generated":true,"title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared"]},{"anchor":"Type-Methods","generated":true,"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordinationstrategy"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This strategy manages group-based locking where:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Leaders","type":"text"}],"type":"strong"},{"type":"text","text":" can execute based on their entry policy:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".emptyGroup","type":"codeVoice"},{"text":": Only when the group is completely empty","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".withoutMembers","type":"codeVoice"},{"type":"text","text":": When there are no members (other leaders allowed)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".withoutLeader"},{"text":": When there is no other leader (members allowed)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Members"}],"type":"strong"},{"text":" can only execute when their group has active participants","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"This creates a coordination pattern where leaders start group activities","type":"text"},{"text":" ","type":"text"},{"text":"and members can only join existing group activities.","type":"text"}],"type":"paragraph"},{"text":"Key Features","anchor":"Key-Features","level":2,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Groups are identified by string IDs and operate independently","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Multiple members can execute concurrently within the same group","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Prevents duplicate execution of the same action within a group","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Groups automatically dissolve when the last member completes"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Usage Example","anchor":"Usage-Example","level":2,"type":"heading"},{"syntax":"swift","code":["let strategy = LockmanGroupCoordinationStrategy()","let boundaryId = \"mainScreen\"","","\/\/ Non-exclusive participant","let nonExclusiveInfo = LockmanGroupCoordinatedInfo(","  actionId: \"loadData\",","  groupId: \"dataLoading\",","  coordinationRole: .none",")","","\/\/ Leader that requires empty group","let emptyGroupLeader = LockmanGroupCoordinatedInfo(","  actionId: \"navigate\",","  groupId: \"navigation\",","  coordinationRole: .leader(.emptyGroup)",")","","\/\/ Members can join active group","let memberInfo = LockmanGroupCoordinatedInfo(","  actionId: \"showProgress\",","  groupId: \"dataLoading\",","  coordinationRole: .member",")","","\/\/ Leader that allows other leaders","let multiLeaderInfo = LockmanGroupCoordinatedInfo(","  actionId: \"secondaryLoad\",","  groupId: \"dataLoading\",","  coordinationRole: .leader(.withoutMembers)",")"],"type":"codeListing"}],"kind":"content"}],"metadata":{"modules":[{"name":"Lockman"}],"title":"LockmanGroupCoordinationStrategy","externalID":"s:7Lockman0A25GroupCoordinationStrategyC","symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}]},"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp(boundaryId:)":{"role":"symbol","title":"cleanUp(boundaryId:)","abstract":[{"text":"Removes all active locks for the specified boundary across all groups.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup(boundaryid:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"title":"LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","type":"topic","abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/lock(boundaryId:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanGroupCoordinatedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","role":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/lock(boundaryid:info:)","abstract":[{"text":"Acquires locks by registering the action in all specified group coordination states.","type":"text"}],"type":"topic","title":"lock(boundaryId:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp()":{"type":"topic","abstract":[{"type":"text","text":"Removes all active locks across all boundaries and groups."}],"kind":"symbol","role":"symbol","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/makeStrategyId()":{"type":"topic","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/makestrategyid()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for the group coordination strategy."}],"kind":"symbol","title":"makeStrategyId()"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/strategyId":{"type":"topic","abstract":[{"text":"The identifier for this strategy.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/strategyid","role":"symbol","title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/init()":{"type":"topic","abstract":[{"text":"Creates a new group coordination strategy instance.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/unlock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/unlock(boundaryid:info:)","abstract":[{"type":"text","text":"Releases locks by removing the action from all specified group coordination states."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","role":"symbol","title":"unlock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/getCurrentLocks()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","kind":"symbol","role":"symbol","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/getcurrentlocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"type":"topic","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/shared":{"abstract":[{"text":"The shared singleton instance.","type":"text"}],"title":"shared","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A25GroupCoordinationStrategyC"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/shared","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/canLock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","abstract":[{"text":"Checks if locks can be acquired for group coordination based on roles and policies.","type":"text"}],"type":"topic","title":"canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/canlock(boundaryid:info:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/I":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"I","kind":"identifier"}],"title":"LockmanGroupCoordinationStrategy.I","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/i","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I","type":"topic"}}}