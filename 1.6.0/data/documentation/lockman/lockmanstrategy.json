{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"title":"Associated Types","anchor":"Associated-Types"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"title":"Type Methods","anchor":"Type-Methods"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:7Lockman0A8StrategyP","modules":[{"name":"Lockman"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"roleHeading":"Protocol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Inherits From"},{"type":"conformingTypes","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"kind":"relationships","title":"Conforming Types"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}]},{"anchor":"Strategy-Types","type":"heading","text":"Strategy Types","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Single Execution"}],"type":"strong"},{"text":": Prevents concurrent execution of the same action","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Priority-Based","type":"text"}],"type":"strong"},{"text":": Allows higher priority actions to preempt lower priority ones","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Composite"}],"type":"strong"},{"text":": Combines multiple strategies for complex coordination","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Implementation-Guidelines","type":"heading","text":"Implementation Guidelines","level":2},{"type":"paragraph","inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}]},{"anchor":"Thread-Safety","type":"heading","text":"Thread Safety","level":2},{"type":"paragraph","inlineContent":[{"text":"All strategy implementations must be thread-safe as they may be called","type":"text"},{"text":" ","type":"text"},{"text":"concurrently from multiple contexts. Use appropriate synchronization","type":"text"},{"text":" ","type":"text"},{"text":"mechanisms in your implementation.","type":"text"}]},{"anchor":"Example-Implementation","type":"heading","text":"Example Implementation","level":2},{"type":"codeListing","syntax":"swift","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(boundaryId: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(boundaryId: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(boundaryId: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(boundaryId: B) {","    \/\/ Clean up state for specific boundary","  }","}"]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","title":"LockmanSingleExecutionStrategy","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"role":"symbol","title":"LockmanPriorityBasedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"kind":"symbol","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","title":"makeStrategyId()","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","title":"getCurrentLocks()","role":"symbol","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"type":"topic","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","title":"AnyLockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}],"url":"\/documentation\/lockman\/lockmanstrategy\/i","required":true,"title":"I","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(boundaryId:)":{"abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"title":"cleanUp(boundaryId:)","kind":"symbol","type":"topic","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(boundaryid:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","role":"symbol","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","title":"cleanUp()","kind":"symbol","type":"topic","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"title":"LockmanCompositeStrategy2","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","abstract":[{"text":"A composite strategy that coordinates locking between 2 different strategies.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmancompositestrategy2"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","type":"topic","title":"LockmanCompositeStrategy3","kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 3 different strategies.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy3","navigatorTitle":[{"text":"LockmanCompositeStrategy3","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 4 different strategies."}],"kind":"symbol","title":"LockmanCompositeStrategy4","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy4","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(boundaryId:info:)":{"abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"type":"topic","role":"symbol","required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)","title":"unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/unlock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(boundaryId:info:)":{"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","title":"lock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)","type":"topic","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","kind":"symbol","role":"symbol","required":true,"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"title":"strategyId"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"title":"LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","type":"topic","abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","title":"LockmanCompositeStrategy5","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmancompositestrategy5","role":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","kind":"symbol","type":"topic","abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","title":"LockmanConcurrencyLimitedStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(boundaryId:info:)":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","role":"symbol","abstract":[{"type":"text","text":"Checks if a lock can be acquired without actually acquiring it."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"}}}