{"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"boundaryId","content":[{"inlineContent":[{"text":"The boundary identifier for which the lock should be released","type":"text"}],"type":"paragraph"}]},{"name":"info","content":[{"inlineContent":[{"text":"The same lock information of type ","type":"text"},{"type":"codeVoice","code":"I"},{"text":" that was used when acquiring the lock","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method must be called with the exact same parameters that were used"},{"type":"text","text":" "},{"type":"text","text":"when acquiring the lock. The implementation delegates to the concrete strategy’s"},{"type":"text","text":" "},{"type":"text","text":"unlock logic, which typically uses the lock info’s "},{"code":"uniqueId","type":"codeVoice"},{"type":"text","text":" for precise identification."}]},{"level":2,"anchor":"Parameter-Matching-Requirements","text":"Parameter Matching Requirements","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Boundary ID"}]},{"type":"text","text":": Must match the ID used during lock acquisition"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Lock Info"}]},{"text":": Must be the same instance (same ","type":"text"},{"type":"codeVoice","code":"uniqueId"},{"text":") used during acquisition","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Strategy Consistency"}],"type":"strong"},{"type":"text","text":": Must be called on the same strategy instance that acquired the lock"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Error-Recovery","text":"Error Recovery","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If called with mismatched parameters, the concrete strategy may:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Silently ignore the unlock request (defensive programming)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Log a warning for debugging purposes","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Throw an error in debug builds","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior depends on the concrete strategy’s implementation."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)"]}],"metadata":{"modules":[{"name":"Lockman"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","title":"unlock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"externalID":"s:7Lockman03AnyA8StrategyV6unlock10boundaryId4infoyqd___xtSHRd__s8SendableRd__lF"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)"},"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","title":"AnyLockmanStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","type":"topic","title":"unlock(boundaryId:info:)","kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)"}}}