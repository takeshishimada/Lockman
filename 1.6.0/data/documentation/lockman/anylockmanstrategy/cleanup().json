{"sections":[],"kind":"symbol","metadata":{"externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF","role":"symbol","modules":[{"name":"Lockman"}],"title":"cleanUp()","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This method provides a global reset mechanism by clearing all internal lock state","type":"text"},{"text":" ","type":"text"},{"text":"from the underlying strategy. Itâ€™s typically used during:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown sequences"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite cleanup between test cases"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency reset scenarios during development"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Memory pressure response"}]}]}],"type":"unorderedList"},{"anchor":"Scope-of-Operation","level":2,"text":"Scope of Operation","type":"heading"},{"inlineContent":[{"text":"This method affects ","type":"text"},{"inlineContent":[{"type":"text","text":"all boundaries"}],"type":"strong"},{"text":" managed by the underlying strategy,","type":"text"},{"text":" ","type":"text"},{"text":"not just those accessed through this particular wrapper instance.","type":"text"}],"type":"paragraph"},{"anchor":"Thread-Safety","level":2,"text":"Thread Safety","type":"heading"},{"inlineContent":[{"text":"The operation is atomic with respect to other strategy operations, but","type":"text"},{"text":" ","type":"text"},{"text":"callers should be aware that concurrent operations may be affected.","type":"text"}],"type":"paragraph"},{"anchor":"Side-Effects","level":2,"text":"Side Effects","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All active locks are immediately released"}]}]},{"content":[{"inlineContent":[{"text":"Lock state tracking is reset to initial conditions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Pending operations may receive unexpected unlock notifications","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"title":"cleanUp()","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","title":"AnyLockmanStrategy","kind":"symbol"}}}