{"abstract":[{"type":"text","text":"Configure Lockman for your application’s needs."}],"metadata":{"modules":[{"name":"Lockman"}],"role":"article","roleHeading":"Article","title":"Configuration"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"anchor":"Essentials","title":"Essentials"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/configuration"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"LockmanManager provides configuration functionality to set Lockman’s behavior throughout the application. These settings allow you to customize default lock release timing and error handling behavior.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Once configured, settings apply application-wide and can be overridden at various levels: in ","type":"text"},{"overridingTitleInlineContent":[{"code":"Effect.lock","type":"codeVoice"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","isActive":true,"overridingTitle":"Effect.lock","type":"reference"},{"text":" method chains or when configuring ","type":"text"},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Reducer.lock"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","isActive":true,"overridingTitle":"Reducer.lock","type":"reference"},{"text":".","type":"text"}]},{"type":"heading","level":2,"text":"Configuration Options","anchor":"Configuration-Options"},{"type":"heading","level":3,"text":"defaultUnlockOption","anchor":"defaultUnlockOption"},{"type":"paragraph","inlineContent":[{"text":"Sets the default timing for lock release.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Configure during application initialization","LockmanManager.config.defaultUnlockOption = .immediate"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Available values","type":"text"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":".immediate"}]},{"type":"text","text":": Release immediately upon completion (default)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"code":".mainRunLoop","type":"codeVoice"}]},{"text":": Release on the next main loop cycle","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":".transition"}]},{"type":"text","text":": Release after platform-specific screen transition animation"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":".delayed(TimeInterval)"}]},{"type":"text","text":": Release after the specified time interval"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Priority order"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Explicitly specified in method call (","type":"text"},{"code":"Effect.lock","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"Reducer.lock","type":"codeVoice"},{"text":") (highest priority)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Action’s "},{"code":"unlockOption","type":"codeVoice"},{"type":"text","text":" property (if implementing "},{"code":"LockmanAction","type":"codeVoice"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"LockmanManager.config.defaultUnlockOption","type":"codeVoice"},{"type":"text","text":" (lowest priority)"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Use cases","type":"text"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Unified release timing considering UI transitions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Consistent behavior settings across the application"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjustments for performance optimization"}]}]}]},{"type":"heading","level":3,"text":"handleCancellationErrors","anchor":"handleCancellationErrors"},{"type":"paragraph","inlineContent":[{"text":"Sets how to handle cancellation errors.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Ignore cancellation errors (default)","LockmanManager.config.handleCancellationErrors = false","","\/\/ Pass cancellation errors to error handler","LockmanManager.config.handleCancellationErrors = true"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Values","type":"text"}]},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"codeVoice","code":"false"}],"type":"strong"},{"text":": Ignore cancellation errors and don’t pass to error handler (default)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"codeVoice","code":"true"}],"type":"strong"},{"type":"text","text":": Pass cancellation errors to error handler"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Use cases"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Logging cancellation operations","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tracking cancellation situations during debugging"}]}]},{"content":[{"inlineContent":[{"text":"Collecting statistical information","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Configuration Examples","anchor":"Configuration-Examples"},{"type":"heading","level":3,"text":"Configuration during Application Initialization","anchor":"Configuration-during-Application-Initialization"},{"syntax":"swift","type":"codeListing","code":["\/\/ Configure in AppDelegate or App struct","func applicationDidFinishLaunching() {","    \/\/ Set release timing considering UI transitions","    LockmanManager.config.defaultUnlockOption = .transition","    ","    \/\/ Log cancellation errors during development","    #if DEBUG","    LockmanManager.config.handleCancellationErrors = true","    #endif","}"]},{"type":"heading","level":3,"text":"Individual Override","anchor":"Individual-Override"},{"syntax":"swift","type":"codeListing","code":["\/\/ Override in Reducer.lock()",".lock(","    boundaryId: CancelID.feature,","    unlockOption: .immediate, \/\/ Override global setting","    lockFailure: { error, send in","        \/\/ Error handling","    }",")","","\/\/ Override in Effect.lock()",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .delayed(0.5) \/\/ Override for this effect",")","","\/\/ Override with manual unlock timing control",".run { send in","    \/\/ Operations that require transition timing","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition \/\/ Override for fine control",")"]},{"type":"heading","level":2,"text":"Notes","anchor":"Notes"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since configuration changes affect the entire application, it’s recommended to configure during initialization"}]}]},{"content":[{"inlineContent":[{"text":"Runtime configuration changes are possible but should be done carefully to avoid unexpected behavior","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"During testing, it’s recommended to reset settings to avoid effects between tests"}],"type":"paragraph"}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration"},"sections":[],"references":{"doc://Lockman/documentation/Lockman/Unlock":{"role":"article","url":"\/documentation\/lockman\/unlock","title":"Unlock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","kind":"article","type":"topic","abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"role":"article","url":"\/documentation\/lockman\/choosingstrategy","title":"Choosing a Strategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","type":"topic","kind":"article","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}]},"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","kind":"article","url":"\/documentation\/lockman\/errorhandling","role":"article","title":"Error Handling"},"doc://Lockman/documentation/Lockman/Lock":{"role":"article","url":"\/documentation\/lockman\/lock","title":"Lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","kind":"article","type":"topic","abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}]},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"role":"article","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","type":"topic","kind":"article","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}]},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"role":"article","url":"\/documentation\/lockman\/boundaryoverview","title":"Boundary","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","type":"topic","kind":"article","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}]},"doc://Lockman/documentation/Lockman/GettingStarted":{"title":"Getting Started","role":"article","kind":"article","url":"\/documentation\/lockman\/gettingstarted","type":"topic","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted"}}}