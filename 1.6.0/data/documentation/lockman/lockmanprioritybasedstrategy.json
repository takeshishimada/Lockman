{"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"symbolKind":"class","title":"LockmanPriorityBasedStrategy","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC","modules":[{"name":"Lockman"}],"role":"symbol"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy implements a sophisticated priority system that allows higher-priority"},{"type":"text","text":" "},{"type":"text","text":"actions to preempt lower-priority ones, while providing configurable concurrency"},{"type":"text","text":" "},{"type":"text","text":"behavior for actions of the same priority level."}]},{"text":"Priority System Overview","anchor":"Priority-System-Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The strategy maintains a per-boundary collection of active ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instances and uses the priority hierarchy to determine execution precedence:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"High Priority","type":"text"}]},{"type":"text","text":" (.high): Can cancel low\/none priority actions"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Low Priority"}],"type":"strong"},{"type":"text","text":" (.low): Can cancel none priority actions, yields to high priority"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"No Priority","type":"text"}],"type":"strong"},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}]}]}],"type":"unorderedList"},{"text":"Concurrency Behavior Logic","anchor":"Concurrency-Behavior-Logic","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" is called for same-priority actions, the strategy evaluates conflicts"},{"type":"text","text":" "},{"type":"text","text":"using the existing action’s concurrency behavior:"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"No Priority Actions"}],"type":"strong"},{"text":": Always succeed (bypass priority system)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}]},{"type":"text","text":": Priority actions always win"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Different Priority Levels","type":"text"}]},{"type":"text","text":": Higher priority wins"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Same Priority Level"}]},{"type":"text","text":": Apply existing action’s "},{"type":"codeVoice","code":"ConcurrencyBehavior"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Exclusive","type":"text"}]},{"type":"text","text":": Existing action continues, new action fails"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Replaceable","type":"text"}]},{"type":"text","text":": Existing action is canceled, new action succeeds"}]}]}]}]}],"type":"orderedList"},{"text":"Thread Safety","anchor":"Thread-Safety","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is thread-safe through the underlying "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" which provides"},{"type":"text","text":" "},{"type":"text","text":"synchronized access to the per-boundary lock collections."}]},{"text":"Usage Examples","anchor":"Usage-Examples","type":"heading","level":2},{"code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(boundaryId: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(boundaryId: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"},"sections":[],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)"],"anchor":"Instance-Methods"},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"anchor":"Type-Aliases"},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"anchor":"Type-Properties"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"anchor":"Type-Methods"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","type":"topic","title":"LockmanPriorityBasedStrategy.I","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","navigatorTitle":[{"kind":"identifier","text":"I"}],"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","type":"topic","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","role":"symbol"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","title":"init()","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","abstract":[{"text":"Creates a new priority-based strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(boundaryId:info:)":{"kind":"symbol","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(boundaryid:info:)","type":"topic","title":"lock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries and priority levels."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","title":"cleanUp()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"title":"makeStrategyId()","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for the priority-based strategy."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(boundaryId:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"title":"canLock(boundaryId:info:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(boundaryid:info:)","kind":"symbol","abstract":[{"type":"text","text":"Evaluates whether a priority-based lock can be acquired."}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(boundaryId:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"cleanUp(boundaryId:)","type":"topic","abstract":[{"text":"Removes all priority-based locks for the specified boundary across all priority levels.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(boundaryid:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","title":"strategyId","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"title":"shared","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","text":"LockmanPriorityBasedStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"role":"symbol","title":"LockmanPriorityBasedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(boundaryId:info:)":{"title":"unlock(boundaryId:info:)","type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(boundaryid:info:)","abstract":[{"type":"text","text":"Releases a previously acquired priority-based lock."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"kind":"text","text":")"}],"role":"symbol"}}}