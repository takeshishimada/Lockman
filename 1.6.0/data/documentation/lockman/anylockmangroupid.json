{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This wrapper enables different types of group identifiers to coexist in the same"},{"type":"text","text":" "},{"type":"text","text":"collection while maintaining type safety for hashing and equality operations."}]},{"text":"Type Erasure Benefits","level":2,"type":"heading","anchor":"Type-Erasure-Benefits"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows ","type":"text"},{"code":"Set<AnyLockmanGroupId>","type":"codeVoice"},{"text":" with mixed group ID types","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maintains value semantics and equality comparison"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Preserves hashing behavior from underlying types"}],"type":"paragraph"}]}]},{"text":"Thread Safety","level":2,"type":"heading","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Marked as "},{"type":"codeVoice","code":"@unchecked Sendable"},{"type":"text","text":" because "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" is thread-safe for"},{"type":"text","text":" "},{"type":"text","text":"hashing and equality operations, and the wrapper doesnâ€™t add mutable state."}]},{"text":"Usage Example","level":2,"type":"heading","anchor":"Usage-Example"},{"code":["enum FeatureGroup: String, LockmanGroupId {","  case navigation, dataSync, authentication","}","","struct ModuleGroup: LockmanGroupId {","  let module: String","  let submodule: String","}","","\/\/ Both can be used as group IDs in the same collection","let featureGroup = AnyLockmanGroupId(FeatureGroup.navigation)","let moduleGroup = AnyLockmanGroupId(ModuleGroup(module: \"user\", submodule: \"profile\"))","","\/\/ Can be stored in the same Set","let groupIds: Set<AnyLockmanGroupId> = [featureGroup, moduleGroup]"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"variants":[{"paths":["\/documentation\/lockman\/anylockmangroupid"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Lockman\/s8CopyableP","doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","doc:\/\/Lockman\/SQ","doc:\/\/Lockman\/SH","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"metadata":{"navigatorTitle":[{"text":"AnyLockmanGroupId","kind":"identifier"}],"role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Structure","externalID":"s:7Lockman03AnyA7GroupIdV","symbolKind":"struct","title":"AnyLockmanGroupId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"kind":"symbol","topicSections":[{"title":"Operators","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"],"generated":true,"anchor":"Operators"},{"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/==(_:_:)":{"url":"\/documentation\/lockman\/anylockmangroupid\/==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","text":"AnyLockmanGroupId","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","text":"AnyLockmanGroupId","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"==(_:_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)","role":"symbol","abstract":[{"text":"Compares two ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" instances for equality.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/hash(into:)":{"type":"topic","title":"hash(into:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/anylockmangroupid\/hash(into:)","abstract":[{"type":"text","text":"Generates a hash value for this group ID."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}]},"doc://Lockman/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://Lockman/SH":{"identifier":"doc:\/\/Lockman\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Lockman/s8CopyableP":{"identifier":"doc:\/\/Lockman\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanGroupId","type":"codeVoice"},{"type":"text","text":", allowing heterogeneous group IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}],"type":"topic","title":"AnyLockmanGroupId","url":"\/documentation\/lockman\/anylockmangroupid"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/CustomDebugStringConvertible-Implementations":{"type":"topic","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/lockman\/anylockmangroupid\/customdebugstringconvertible-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","kind":"article"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/Equatable-Implementations":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/lockman\/anylockmangroupid\/equatable-implementations"},"doc://Lockman/SQ":{"identifier":"doc:\/\/Lockman\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","title":"init(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A7GroupIda","text":"LockmanGroupId","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","role":"collection","title":"Lockman"}}}