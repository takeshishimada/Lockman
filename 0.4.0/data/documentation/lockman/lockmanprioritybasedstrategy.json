{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"This strategy implements a sophisticated priority system that allows higher-priority","type":"text"},{"text":" ","type":"text"},{"text":"actions to preempt lower-priority ones, while providing configurable concurrency","type":"text"},{"text":" ","type":"text"},{"text":"behavior for actions of the same priority level.","type":"text"}],"type":"paragraph"},{"text":"Priority System Overview","anchor":"Priority-System-Overview","type":"heading","level":2},{"inlineContent":[{"text":"The strategy maintains a per-boundary collection of active ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instances and uses the priority hierarchy to determine execution precedence:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"High Priority","type":"text"}],"type":"strong"},{"type":"text","text":" (.high): Can cancel low\/none priority actions"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Low Priority"}]},{"type":"text","text":" (.low): Can cancel none priority actions, yields to high priority"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"No Priority","type":"text"}],"type":"strong"},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Concurrency Behavior Logic","type":"heading","level":2,"anchor":"Concurrency-Behavior-Logic"},{"inlineContent":[{"text":"When ","type":"text"},{"code":"canLock","type":"codeVoice"},{"text":" is called for same-priority actions, the strategy evaluates conflicts","type":"text"},{"text":" ","type":"text"},{"text":"using the existing action’s concurrency behavior:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"No Priority Actions"}],"type":"strong"},{"text":": Always succeed (bypass priority system)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}]},{"text":": Priority actions always win","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Different Priority Levels","type":"text"}]},{"text":": Higher priority wins","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Same Priority Level"}]},{"text":": Apply existing action’s ","type":"text"},{"type":"codeVoice","code":"ConcurrencyBehavior"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Exclusive","type":"text"}],"type":"strong"},{"type":"text","text":": Existing action continues, new action fails"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Replaceable","type":"text"}]},{"type":"text","text":": Existing action is canceled, new action succeeds"}]}]}],"type":"unorderedList"}]}],"type":"orderedList"},{"text":"Thread Safety","type":"heading","level":2,"anchor":"Thread-Safety"},{"inlineContent":[{"text":"This strategy is thread-safe through the underlying ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" which provides","type":"text"},{"text":" ","type":"text"},{"text":"synchronized access to the per-boundary lock collections.","type":"text"}],"type":"paragraph"},{"text":"Usage Examples","type":"heading","level":2,"anchor":"Usage-Examples"},{"code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(id: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(id: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"metadata":{"externalID":"s:7Lockman0A21PriorityBasedStrategyC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"roleHeading":"Class","modules":[{"name":"Lockman"}],"title":"LockmanPriorityBasedStrategy","symbolKind":"class","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"generated":true,"title":"Type Methods","anchor":"Type-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","abstract":[{"text":"Creates a new priority-based strategy instance.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"role":"symbol","title":"strategyId","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"role":"symbol","abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","title":"cleanUp()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(id:info:)":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Evaluates whether a priority-based lock can be acquired.","type":"text"}],"title":"canLock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"role":"symbol","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","title":"cleanUp(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","role":"symbol","abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","text":"LockmanPriorityBasedStrategy"}],"title":"shared","kind":"symbol"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(id:info:)":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)","abstract":[{"type":"text","text":"Releases a previously acquired priority-based lock."}],"role":"symbol","kind":"symbol","title":"unlock(id:info:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","navigatorTitle":[{"kind":"identifier","text":"I"}],"title":"LockmanPriorityBasedStrategy.I","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(id:info:)","title":"lock(id:info:)","kind":"symbol","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","role":"symbol","abstract":[{"text":"Creates a strategy identifier for the priority-based strategy.","type":"text"}],"title":"makeStrategyId()","kind":"symbol"}}}