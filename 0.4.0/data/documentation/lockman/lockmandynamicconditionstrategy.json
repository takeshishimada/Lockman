{"kind":"symbol","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"],"title":"Initializers","generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"],"title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)"],"title":"Instance Methods","generated":true},{"anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"],"title":"Type Aliases","generated":true},{"anchor":"Type-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"],"title":"Type Properties","generated":true},{"anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"],"title":"Type Methods","generated":true}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"metadata":{"modules":[{"name":"Lockman"}],"title":"LockmanDynamicConditionStrategy","externalID":"s:7Lockman0A24DynamicConditionStrategyC","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"roleHeading":"Class","role":"symbol"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"code":"LockmanDynamicConditionStrategy","type":"codeVoice"},{"text":" allows you to define arbitrary locking conditions","type":"text"},{"text":" ","type":"text"},{"text":"using closures that are evaluated when the lock is requested. This provides maximum","type":"text"},{"text":" ","type":"text"},{"text":"flexibility for complex business logic scenarios.","type":"text"}],"type":"paragraph"},{"anchor":"Example","level":2,"text":"Example","type":"heading"},{"code":["\/\/ Business logic condition","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .failure(LockmanDynamicConditionError.conditionNotMet(","            actionId: \"fetchData\",","            hint: \"Priority too low\"","        ))","    }","    return .success","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Thread-Safety","level":2,"text":"Thread Safety","type":"heading"},{"inlineContent":[{"type":"text","text":"This strategy is thread-safe and uses "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" for managing concurrent access."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","kind":"symbol","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(id:info:)":{"title":"unlock(id:info:)","abstract":[{"type":"text","text":"Releases all locks with the same actionId."}],"kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(id:info:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(id:info:)":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Evaluates the dynamic condition to determine if a lock can be acquired."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(id:info:)","title":"canLock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC","kind":"typeIdentifier","text":"LockmanDynamicConditionStrategy"}],"kind":"symbol","title":"shared","abstract":[{"text":"Shared singleton instance.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}],"title":"makeStrategyId()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()","abstract":[{"type":"text","text":"Creates a strategy identifier for the dynamic condition strategy."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()","title":"cleanUp()","abstract":[{"type":"text","text":"Removes all active locks across all boundaries."}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()","title":"init()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Creates a new dynamic condition strategy instance.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","title":"getCurrentLocks()","kind":"symbol","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(id:info:)":{"role":"symbol","title":"lock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","title":"cleanUp(id:)","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"abstract":[{"text":"Removes all active locks for the specified boundary.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i","title":"LockmanDynamicConditionStrategy.I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","navigatorTitle":[{"text":"I","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","role":"symbol"},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]}}}