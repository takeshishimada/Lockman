{"variants":[{"paths":["\/documentation\/lockman\/anylockmangroupid\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"]]},"kind":"symbol","metadata":{"symbolKind":"init","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"LockmanGroupId","preciseIdentifier":"s:7Lockman0A7GroupIda"},{"kind":"text","text":")"}],"externalID":"s:7Lockman03AnyA7GroupIdVyACSH_s8Sendablepcfc","modules":[{"name":"Lockman"}],"roleHeading":"Initializer","title":"init(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"LockmanGroupId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","preciseIdentifier":"s:7Lockman0A7GroupIda","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An instance conforming to "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":" to be wrapped"}],"type":"paragraph"}],"name":"value"}]},{"kind":"content","content":[{"text":"Design Note","type":"heading","level":2,"anchor":"Design-Note"},{"type":"paragraph","inlineContent":[{"text":"The underlying value is stored as ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":", which preserves the original","type":"text"},{"text":" ","type":"text"},{"text":"typeâ€™s hashing and equality behavior while enabling uniform storage.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)"},"references":{"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"LockmanGroupId","preciseIdentifier":"s:7Lockman0A7GroupIda","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","title":"init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)","type":"topic","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":"."}]},"doc://Lockman/documentation/Lockman/LockmanGroupId":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"LockmanGroupId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupid","abstract":[{"text":"A group identifier used by Lockman strategies, combining ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" ","type":"text"},{"text":"to ensure unique and concurrent-safe keys.","type":"text"}],"title":"LockmanGroupId","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupId","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}],"url":"\/documentation\/lockman\/anylockmangroupid","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":", allowing heterogeneous group IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","kind":"symbol","title":"AnyLockmanGroupId"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"}}}