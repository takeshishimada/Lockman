{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()"},"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:7Lockman0A24DynamicConditionStrategyC15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF","title":"getCurrentLocks()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"Dictionary of boundary IDs to their active locks","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Provides a snapshot of all currently held locks across all boundaries.","type":"text"},{"text":" ","type":"text"},{"text":"The returned dictionary maps boundary identifiers to their active lock information.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"]]},"abstract":[{"type":"text","text":"Returns current locks information for debugging."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"type":"topic","navigatorTitle":[{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"title":"AnyLockmanBoundaryId"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"url":"\/documentation\/lockman\/lockmaninfo","kind":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"title":"LockmanInfo","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","kind":"symbol","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","title":"getCurrentLocks()","kind":"symbol","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"}}}