{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"cleanUp()","externalID":"s:7Lockman0A17StrategyContainerC7cleanUpyyF","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"text":" method to clear any internal state. Useful for application","type":"text"},{"text":" ","type":"text"},{"text":"shutdown or global reset scenarios.","type":"text"}]},{"anchor":"Error-Handling","text":"Error Handling","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If any strategyâ€™s cleanup operation fails, the error is logged but"},{"type":"text","text":" "},{"type":"text","text":"cleanup continues for remaining strategies to ensure best-effort cleanup."}]},{"anchor":"Complexity","text":"Complexity","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()"},"abstract":[{"type":"text","text":"Invokes "},{"code":"cleanUp()","type":"codeVoice"},{"type":"text","text":" on all registered strategies."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","title":"cleanUp()","url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()","role":"symbol","abstract":[{"text":"Invokes ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"text":" on all registered strategies.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}]}}}