{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method calls "},{"code":"cleanUp()","type":"codeVoice"},{"type":"text","text":" on all strategies before removing them,"},{"type":"text","text":" "},{"type":"text","text":"ensuring proper cleanup. The container returns to its initial empty state."}]},{"type":"heading","anchor":"Use-Cases","text":"Use Cases","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Application shutdown","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite reset","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory management","type":"text"}]}]}]},{"type":"heading","anchor":"Complexity","text":"Complexity","level":2},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}],"kind":"content"}],"metadata":{"title":"removeAllStrategies()","externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"role":"symbol"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"]}],"references":{"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"title":"removeAllStrategies()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"}}}