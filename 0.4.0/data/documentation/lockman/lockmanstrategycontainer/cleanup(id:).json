{"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"metadata":{"externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","title":"cleanUp(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method"},"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":" whose associated lock state should be cleared"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" method to clear state associated with the given boundary identifier.","type":"text"},{"text":" ","type":"text"},{"text":"Useful when a feature or component is being deallocated.","type":"text"}]},{"type":"heading","level":2,"text":"Error Handling","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":", errors in individual strategy cleanup are logged","type":"text"},{"text":" ","type":"text"},{"text":"but donâ€™t prevent cleanup of other strategies.","type":"text"}]},{"type":"heading","level":2,"text":"Complexity","anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}]}],"kind":"content"}],"abstract":[{"text":"Invokes ","type":"text"},{"type":"codeVoice","code":"cleanUp(id:)"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","role":"symbol","title":"cleanUp(id:)","kind":"symbol","abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}]},"Lockman.png":{"type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"}}}