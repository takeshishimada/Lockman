{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(id:strategy:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The unique identifier for this strategy configuration"}],"type":"paragraph"}],"name":"id"},{"content":[{"inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"type":"codeVoice","code":"LockmanStrategy<I>"}],"type":"paragraph"}],"name":"strategy"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The strategy is wrapped in ","type":"text"},{"code":"AnyLockmanStrategy<I>","type":"codeVoice"},{"text":" for type-safe storage","type":"text"},{"text":" ","type":"text"},{"text":"while allowing heterogeneous strategy types to coexist in the container.","type":"text"},{"text":" ","type":"text"},{"text":"Each strategy ID can only be registered once to prevent conflicts.","type":"text"}],"type":"paragraph"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"LockmanError.strategyAlreadyRegistered","type":"codeVoice"},{"text":" if this ID is already registered","type":"text"}]}],"type":"aside"},{"text":"Complexity","level":2,"type":"heading","anchor":"Complexity"},{"inlineContent":[{"type":"text","text":"O(1) - Direct hash map insertion with conflict detection"}],"type":"paragraph"},{"text":"Thread Safety","level":2,"type":"heading","anchor":"Thread-Safety"},{"inlineContent":[{"text":"Safe to call concurrently from multiple threads. Registration is atomic.","type":"text"}],"type":"paragraph"},{"text":"Example","level":2,"type":"heading","anchor":"Example"},{"syntax":"swift","code":["let container = LockmanStrategyContainer()","try container.register(id: .singleExecution, strategy: LockmanSingleExecutionStrategy.shared)","try container.register(id: \"MyApp.RateLimit:100\", strategy: RateLimitStrategy(limit: 100))"],"type":"codeListing"}]}],"abstract":[{"text":"Registers a concrete strategy instance with a specific identifier.","type":"text"}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"role":"symbol","symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC8register2id8strategyyAA0aB2IdV_xtKAA0aB0RzlF","title":"register(id:strategy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/register(id:strategy:)"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"LockmanStrategyId","navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategyid"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/register(id:strategy:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","title":"register(id:strategy:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(id:strategy:)","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer\/register(id:strategy:)","abstract":[{"type":"text","text":"Registers a concrete strategy instance with a specific identifier."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}]}}}