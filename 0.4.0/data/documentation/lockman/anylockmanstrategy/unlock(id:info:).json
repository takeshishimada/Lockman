{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","externalID":"s:7Lockman03AnyA8StrategyV6unlock2id4infoyqd___xtSHRd__s8SendableRd__lF","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","title":"unlock(id:info:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The boundary identifier for which the lock should be released","type":"text"}],"type":"paragraph"}],"name":"id"},{"content":[{"inlineContent":[{"text":"The same lock information of type ","type":"text"},{"code":"I","type":"codeVoice"},{"text":" that was used when acquiring the lock","type":"text"}],"type":"paragraph"}],"name":"info"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method must be called with the exact same parameters that were used","type":"text"},{"text":" ","type":"text"},{"text":"when acquiring the lock. The implementation delegates to the concrete strategy’s","type":"text"},{"text":" ","type":"text"},{"text":"unlock logic, which typically uses the lock info’s ","type":"text"},{"type":"codeVoice","code":"uniqueId"},{"text":" for precise identification.","type":"text"}]},{"anchor":"Parameter-Matching-Requirements","text":"Parameter Matching Requirements","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Boundary ID"}]},{"text":": Must match the ID used during lock acquisition","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lock Info"}],"type":"strong"},{"text":": Must be the same instance (same ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":") used during acquisition","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Strategy Consistency"}]},{"type":"text","text":": Must be called on the same strategy instance that acquired the lock"}],"type":"paragraph"}]}]},{"text":"Error Recovery","anchor":"Error-Recovery","type":"heading","level":2},{"inlineContent":[{"text":"If called with mismatched parameters, the concrete strategy may:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Silently ignore the unlock request (defensive programming)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Log a warning for debugging purposes","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Throw an error in debug builds","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"The behavior depends on the concrete strategy’s implementation."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(id:info:)":{"type":"topic","title":"unlock(id:info:)","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol"},"Lockman.png":{"alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"type":"topic","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy"}}}