{"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/shared","interfaceLanguage":"swift"},"metadata":{"title":"shared","symbolKind":"property","externalID":"s:7Lockman0A23SingleExecutionStrategyC6sharedACvpZ","modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","preciseIdentifier":"s:7Lockman0A23SingleExecutionStrategyC","kind":"typeIdentifier"}]},"abstract":[{"text":"Shared singleton instance.","type":"text"}],"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","kind":"typeIdentifier","text":"LockmanSingleExecutionStrategy","preciseIdentifier":"s:7Lockman0A23SingleExecutionStrategyC"}],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/shared":{"role":"symbol","title":"shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","preciseIdentifier":"s:7Lockman0A23SingleExecutionStrategyC","kind":"typeIdentifier"}],"abstract":[{"text":"Shared singleton instance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/shared","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/shared","type":"topic"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","alt":"Lockman logo"}}}