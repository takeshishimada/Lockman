{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/ExecutionMode\/Equatable-Implementations"},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/executionmode\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/ExecutionMode"]]},"metadata":{"role":"collectionGroup","modules":[{"name":"Lockman"}],"title":"Equatable Implementations","roleHeading":"API Collection"},"topicSections":[{"generated":true,"title":"Operators","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/ExecutionMode\/!=(_:_:)"],"anchor":"Operators"}],"references":{"Lockman.png":{"alt":"Lockman logo","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/ExecutionMode":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/executionmode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExecutionMode"}],"title":"LockmanSingleExecutionStrategy.ExecutionMode","navigatorTitle":[{"kind":"identifier","text":"ExecutionMode"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Execution mode for single execution strategy","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/ExecutionMode","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/ExecutionMode/!=(_:_:)":{"title":"!=(_:_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/ExecutionMode\/!=(_:_:)","type":"topic","abstract":[],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/executionmode\/!=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol"}}}