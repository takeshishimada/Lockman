{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)"},"sections":[],"metadata":{"role":"symbol","title":"canLock(id:info:)","symbolKind":"method","externalID":"s:7Lockman0A23SingleExecutionStrategyC7canLock2id4infoAA0A6ResultOx_AA0abC4InfoVtSHRzs8SendableRzlF","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)"]}],"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and action.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}],"type":"paragraph"}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"text":"The lock information containing the action ID and execution mode","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The behavior depends on the execution mode specified in the info:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".none"},{"text":": Always returns ","type":"text"},{"type":"codeVoice","code":".success"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Returns ","type":"text"},{"code":".failure","type":"codeVoice"},{"text":" if any lock exists in the boundary","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".action"},{"type":"text","text":": Returns "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" if a lock with the same action ID exists"}]}]}]},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"type":"codeListing","syntax":"swift","code":["let strategy = LockmanSingleExecutionStrategy()","let info1 = LockmanSingleExecutionInfo(mode: .boundary)","let info2 = LockmanSingleExecutionInfo(mode: .action)","","strategy.lock(id: boundary, info: info1)","strategy.canLock(id: boundary, info: info2) \/\/ Result depends on mode and actionId"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/canLock(id:info:)":{"title":"canLock(id:info:)","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)","role":"symbol","abstract":[{"text":"Checks if a lock can be acquired for the given boundary and action.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanResult":{"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"url":"\/documentation\/lockman\/lockmanresult","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","title":"LockmanResult","role":"symbol","kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutioninfo","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"title":"LockmanSingleExecutionInfo","kind":"symbol"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","alt":"Lockman logo"}}}