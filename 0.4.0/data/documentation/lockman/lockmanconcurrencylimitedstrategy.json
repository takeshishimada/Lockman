{"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods"},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I"],"anchor":"Type-Aliases"},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared"],"anchor":"Type-Properties"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()"],"anchor":"Type-Methods"}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Class","modules":[{"name":"Lockman"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"title":"LockmanConcurrencyLimitedStrategy","role":"symbol","symbolKind":"class","externalID":"s:7Lockman0A26ConcurrencyLimitedStrategyC"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/shared":{"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/shared","title":"shared","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared","abstract":[{"text":"Shared instance of the strategy.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A26ConcurrencyLimitedStrategyC","kind":"typeIdentifier","text":"LockmanConcurrencyLimitedStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(id:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Removes all locks for a specific boundary."}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup(id:)","title":"cleanUp(id:)"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/unlock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(id:info:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedInfo","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Removes the lock from the state.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/unlock(id:info:)","title":"unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/makeStrategyId()":{"kind":"symbol","title":"makeStrategyId()","abstract":[{"text":"Creates the strategy identifier.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/makestrategyid()","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()"},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp()":{"title":"cleanUp()","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","abstract":[{"text":"Removes all locks across all boundaries.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/I":{"title":"LockmanConcurrencyLimitedStrategy.I","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/i","abstract":[{"type":"text","text":"The type of lock info used by this strategy."}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"I"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/getCurrentLocks()":{"role":"symbol","title":"getCurrentLocks()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/getcurrentlocks()","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/strategyId":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"role":"symbol","abstract":[{"text":"The strategy identifier.","type":"text"}],"title":"strategyId","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/strategyid"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/canLock(id:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","text":"LockmanConcurrencyLimitedInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/canlock(id:info:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Checks if a lock can be acquired based on concurrency limits."}],"title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/lock(id:info:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","text":"LockmanConcurrencyLimitedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","title":"lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(id:info:)","abstract":[{"type":"text","text":"Adds the lock to the state."}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/lock(id:info:)"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","title":"LockmanConcurrencyLimitedStrategy","kind":"symbol","type":"topic","abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}]}}}