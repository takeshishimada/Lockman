{"kind":"symbol","sections":[],"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUpyyF","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"title":"cleanUp()","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Clears all internal lock state, effectively resetting the strategy to its","type":"text"},{"text":" ","type":"text"},{"text":"initial state. This operation affects all boundaries simultaneously.","type":"text"}]},{"level":2,"anchor":"Use-Cases","type":"heading","text":"Use Cases"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Application shutdown sequences","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Global system resets during development","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}]}]}]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"role":"symbol","abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","title":"cleanUp()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"Lockman.png":{"identifier":"Lockman.png","type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic"}}}