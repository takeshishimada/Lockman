{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanboundaryid\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Creates a new ","type":"text"},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": any "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","preciseIdentifier":"s:7Lockman0A10BoundaryIda","kind":"typeIdentifier","text":"LockmanBoundaryId"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":" to be wrapped"}]}]}],"kind":"parameters"},{"content":[{"text":"Design Note","anchor":"Design-Note","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The underlying value is stored as "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":", which preserves the original"},{"type":"text","text":" "},{"type":"text","text":"typeâ€™s hashing and equality behavior while enabling uniform storage."}]}],"kind":"content"}],"kind":"symbol","metadata":{"roleHeading":"Initializer","title":"init(_:)","modules":[{"name":"Lockman"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"LockmanBoundaryId","preciseIdentifier":"s:7Lockman0A10BoundaryIda","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init","role":"symbol","externalID":"s:7Lockman03AnyA10BoundaryIdVyACSH_s8Sendablepcfc"},"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanBoundaryId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","url":"\/documentation\/lockman\/lockmanboundaryid","title":"LockmanBoundaryId","navigatorTitle":[{"kind":"identifier","text":"LockmanBoundaryId"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A boundary identifier used by Lockman strategies, combining "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"text","text":"to ensure unique and concurrent-safe keys."}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanBoundaryId"}]},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/init(_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)","role":"symbol","title":"init(_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"LockmanBoundaryId","preciseIdentifier":"s:7Lockman0A10BoundaryIda","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanboundaryid\/init(_:)","abstract":[{"text":"Creates a new ","type":"text"},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":".","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"type":"topic","navigatorTitle":[{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"title":"AnyLockmanBoundaryId"},"Lockman.png":{"alt":"Lockman logo","type":"image","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]}}}