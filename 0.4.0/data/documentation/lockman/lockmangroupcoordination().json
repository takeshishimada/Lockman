{"kind":"symbol","metadata":{"title":"LockmanGroupCoordination()","symbolKind":"macro","role":"symbol","externalID":"s:7Lockman0A17GroupCoordinationyycfm","modules":[{"name":"Lockman"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordination","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Macro"},"variants":[{"paths":["\/documentation\/lockman\/lockmangroupcoordination()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"text":"A macro that generates protocol conformance and required members for group coordination locking behavior.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordination()"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"preciseIdentifier":"s:7Lockman0A22GroupCoordinatedActionP","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinatedAction","text":"LockmanGroupCoordinatedAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordination"},{"kind":"text","text":"()"}]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanGroupCoordinatedAction","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"actionName","type":"codeVoice"},{"type":"text","text":" property that returns the enum case name as a String"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default ","type":"text"},{"type":"codeVoice","code":"strategyId"},{"text":" implementation is provided by the protocol","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Important","type":"text"}],"type":"strong"},{"text":": You must implement the ","type":"text"},{"code":"lockmanInfo","type":"codeVoice"},{"text":" property to specify coordination details:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The group ID(s) this action belongs to","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The coordination role (.leader or .member)","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Example usage with TCA:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct NavigationFeature {","  @LockmanGroupCoordination","  enum Action {","    case navigate(to: String)","    case back","","    var lockmanInfo: LockmanGroupCoordinatedInfo {","      switch self {","      case .navigate:","        return LockmanGroupCoordinatedInfo(","          actionId: actionName,","          groupId: \"navigation\",","          coordinationRole: .leader","        )","      case .back:","        return LockmanGroupCoordinatedInfo(","          actionId: actionName,","          groupId: \"navigation\",","          coordinationRole: .member","        )","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .navigate:","        return .withLock(","          operation: { send in","            \/\/ navigation logic","          },","          action: .navigate(to: destination),","          cancelID: \"navigation\"","        )","      \/\/ ...","      }","    }","  }","}"]}],"kind":"content"}],"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinatedAction":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinatedAction","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanGroupCoordinatedAction","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinatedaction","title":"LockmanGroupCoordinatedAction","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinatedAction","abstract":[{"text":"Protocol for actions that use group coordination locking behavior.","type":"text"}],"type":"topic","role":"symbol"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordination()":{"role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmangroupcoordination()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordination","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordination()","abstract":[{"text":"A macro that generates protocol conformance and required members for group coordination locking behavior.","type":"text"}],"kind":"symbol","title":"LockmanGroupCoordination()"}}}