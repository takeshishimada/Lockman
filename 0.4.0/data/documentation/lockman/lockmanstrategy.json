{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol","symbolKind":"protocol","roleHeading":"Protocol","title":"LockmanStrategy","externalID":"s:7Lockman0A8StrategyP","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"title":"Associated Types","generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"],"title":"Instance Methods","generated":true},{"anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"title":"Type Methods","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","text":"I"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}],"type":"paragraph"},{"level":2,"text":"Strategy Types","anchor":"Strategy-Types","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Single Execution"}]},{"type":"text","text":": Prevents concurrent execution of the same action"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority-Based"}]},{"type":"text","text":": Allows higher priority actions to preempt lower priority ones"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Composite","type":"text"}]},{"text":": Combines multiple strategies for complex coordination","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"Implementation Guidelines","anchor":"Implementation-Guidelines","type":"heading"},{"inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"text":"Thread Safety","anchor":"Thread-Safety","type":"heading"},{"inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}],"type":"paragraph"},{"level":2,"text":"Example Implementation","anchor":"Example-Implementation","type":"heading"},{"code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"syntax":"swift","type":"codeListing"}]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Lockman\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From"},{"kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"type":"conformingTypes","title":"Conforming Types"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"title":"LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","role":"symbol","navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"abstract":[{"text":"A composite strategy that coordinates locking between 2 different strategies.","type":"text"}],"kind":"symbol","title":"LockmanCompositeStrategy2","type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy2"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy4","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}],"title":"LockmanCompositeStrategy4","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy4"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","required":true,"title":"strategyId","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"title":"unlock(id:info:)","kind":"symbol","required":true,"role":"symbol"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic"},"Lockman.png":{"type":"image","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","required":true,"title":"lock(id:info:)","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","kind":"symbol","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"url":"\/documentation\/lockman\/lockmancompositestrategy5","type":"topic","title":"LockmanCompositeStrategy5","kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","url":"\/documentation\/lockman\/lockmanstrategy\/i","role":"symbol","abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"kind":"symbol","title":"I","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"title":"cleanUp()","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","title":"LockmanConcurrencyLimitedStrategy","kind":"symbol","type":"topic","abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"kind":"symbol","abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}],"type":"topic","title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","required":true},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"title":"LockmanCompositeStrategy3","url":"\/documentation\/lockman\/lockmancompositestrategy3","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"required":true,"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","title":"cleanUp(id:)","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"title":"makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","kind":"symbol","required":true,"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"type":"topic","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"Lockman.png"}],"url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"title":"Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"type":"topic","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy"}}}