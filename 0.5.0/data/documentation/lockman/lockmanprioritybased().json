{"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for priority-based locking behavior."}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBased"},{"kind":"text","text":"()"}],"symbolKind":"macro","modules":[{"name":"Lockman"}],"title":"LockmanPriorityBased()","role":"symbol","roleHeading":"Macro","externalID":"s:7Lockman0A13PriorityBasedyycfm"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybased()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19PriorityBasedActionP","text":"LockmanPriorityBasedAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBased"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanPriorityBasedAction","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actionName"},{"type":"text","text":" property that returns the enum case name as a String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"lockmanInfo"},{"type":"text","text":" property that provides "},{"type":"codeVoice","code":"LockmanPriorityBasedInfo"},{"type":"text","text":" (must be implemented by user)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct MyFeature {","  @LockmanPriorityBased","  enum Action {","    case highPriorityTask","    case lowPriorityTask","","    var lockmanInfo: LockmanPriorityBasedInfo {","      switch self {","      case .highPriorityTask:","        return .init(priority: 100, perBoundary: false, blocksSameAction: true)","      case .lowPriorityTask:","        return .init(priority: 10, perBoundary: false, blocksSameAction: true)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .highPriorityTask:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .highPriorityTask,","          cancelID: \"priority-task\"","        )","      \/\/ ...","      }","    }","  }","}"]}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBased()","interfaceLanguage":"swift"},"references":{"Lockman.png":{"alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","type":"image"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedAction":{"kind":"symbol","type":"topic","title":"LockmanPriorityBasedAction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedAction"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedAction","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedaction","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedAction"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":" subtype that enforces priority-based locking semantics."}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBased()":{"role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybased()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBased"},{"kind":"text","text":"()"}],"type":"topic","kind":"symbol","title":"LockmanPriorityBased()","abstract":[{"text":"A macro that generates protocol conformance and required members for priority-based locking behavior.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBased()"},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"}}}