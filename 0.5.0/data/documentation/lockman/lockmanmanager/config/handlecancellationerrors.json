{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCancellationErrors","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" (default), CancellationError is passed to the catch handler if provided.","type":"text"},{"text":" ","type":"text"},{"text":"When ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", CancellationError is silently ignored and not passed to handlers.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Disable CancellationError handling globally","LockmanManager.config.handleCancellationErrors = false"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config"]]},"sections":[],"metadata":{"roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCancellationErrors"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"property","externalID":"s:7Lockman0A7ManagerO6configO24handleCancellationErrorsSbvpZ","role":"symbol","title":"handleCancellationErrors","modules":[{"name":"Lockman"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanmanager\/config\/handlecancellationerrors"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config\/handleCancellationErrors"},"abstract":[{"text":"Controls whether CancellationError should be passed to error handlers in withLock operations.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/LockmanManager/config/handleCancellationErrors":{"url":"\/documentation\/lockman\/lockmanmanager\/config\/handlecancellationerrors","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCancellationErrors","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"handleCancellationErrors","kind":"symbol","abstract":[{"text":"Controls whether CancellationError should be passed to error handlers in withLock operations.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config\/handleCancellationErrors","role":"symbol"},"Lockman.png":{"type":"image","identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanManager/config":{"navigatorTitle":[{"text":"config","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/config","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"config","kind":"identifier"}],"title":"LockmanManager.config","abstract":[{"text":"Configuration namespace for Lockman settings.","type":"text"}],"url":"\/documentation\/lockman\/lockmanmanager\/config","role":"symbol"},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanManager":{"url":"\/documentation\/lockman\/lockmanmanager","kind":"symbol","title":"LockmanManager","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanManager"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager","abstract":[{"text":"A facade providing static access to the shared ","type":"text"},{"type":"codeVoice","code":"LockmanStrategyContainer"},{"text":" and core framework functionality.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanManager"}]}}}