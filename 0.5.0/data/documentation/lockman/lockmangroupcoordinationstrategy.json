{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(id:info:)"]},{"title":"Type Aliases","generated":true,"anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I"]},{"title":"Type Properties","generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared"]},{"title":"Type Methods","generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordinationstrategy"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"externalID":"s:7Lockman0A25GroupCoordinationStrategyC","roleHeading":"Class","title":"LockmanGroupCoordinationStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"symbolKind":"class"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy"},"kind":"symbol","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"This strategy manages group-based locking where:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Leaders"}],"type":"strong"},{"text":" can execute based on their entry policy:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":".emptyGroup","type":"codeVoice"},{"text":": Only when the group is completely empty","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".withoutMembers","type":"codeVoice"},{"text":": When there are no members (other leaders allowed)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".withoutLeader"},{"text":": When there is no other leader (members allowed)","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Members","type":"text"}]},{"type":"text","text":" can only execute when their group has active participants"}]}]}]},{"inlineContent":[{"type":"text","text":"This creates a coordination pattern where leaders start group activities"},{"type":"text","text":" "},{"type":"text","text":"and members can only join existing group activities."}],"type":"paragraph"},{"text":"Key Features","type":"heading","level":2,"anchor":"Key-Features"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Groups are identified by string IDs and operate independently"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Multiple members can execute concurrently within the same group","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Prevents duplicate execution of the same action within a group"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Groups automatically dissolve when the last member completes"}]}]}]},{"text":"Usage Example","type":"heading","level":2,"anchor":"Usage-Example"},{"syntax":"swift","type":"codeListing","code":["let strategy = LockmanGroupCoordinationStrategy()","let boundaryId = \"mainScreen\"","","\/\/ Non-exclusive participant","let nonExclusiveInfo = LockmanGroupCoordinatedInfo(","  actionId: \"loadData\",","  groupId: \"dataLoading\",","  coordinationRole: .none",")","","\/\/ Leader that requires empty group","let emptyGroupLeader = LockmanGroupCoordinatedInfo(","  actionId: \"navigate\",","  groupId: \"navigation\",","  coordinationRole: .leader(.emptyGroup)",")","","\/\/ Members can join active group","let memberInfo = LockmanGroupCoordinatedInfo(","  actionId: \"showProgress\",","  groupId: \"dataLoading\",","  coordinationRole: .member",")","","\/\/ Leader that allows other leaders","let multiLeaderInfo = LockmanGroupCoordinatedInfo(","  actionId: \"secondaryLoad\",","  groupId: \"dataLoading\",","  coordinationRole: .leader(.withoutMembers)",")"]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/lock(id:info:)":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(id:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/lock(id:info:)","title":"lock(id:info:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/I":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/i","type":"topic","navigatorTitle":[{"kind":"identifier","text":"I"}],"title":"LockmanGroupCoordinationStrategy.I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I","kind":"symbol","abstract":[],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()","type":"topic","abstract":[{"text":"Creates a new group coordination strategy instance.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/init()","role":"symbol","title":"init()"},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/shared":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/shared","abstract":[{"text":"The shared singleton instance.","type":"text"}],"role":"symbol","type":"topic","title":"shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A25GroupCoordinationStrategyC","text":"LockmanGroupCoordinationStrategy","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/unlock(id:info:)":{"title":"unlock(id:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/unlock(id:info:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(id:info:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/strategyId":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/strategyid","abstract":[{"text":"The identifier for this strategy.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","title":"cleanUp()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"abstract":[],"role":"symbol","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/canLock(id:info:)":{"role":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/canlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(id:info:)","type":"topic","title":"canLock(id:info:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanGroupCoordinatedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"abstract":[]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/makeStrategyId()":{"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()","title":"makeStrategyId()","abstract":[{"text":"Creates a strategy identifier for the group coordination strategy.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp(id:)":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(id:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup(id:)","title":"cleanUp(id:)","type":"topic","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","type":"topic","kind":"symbol","role":"symbol","title":"LockmanGroupCoordinationStrategy","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/getCurrentLocks()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"type":"topic","title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/getcurrentlocks()","role":"symbol","abstract":[{"type":"text","text":"Returns current locks information for debugging."}]}}}