{"kind":"symbol","metadata":{"roleHeading":"Protocol","title":"LockmanStrategy","externalID":"s:7Lockman0A8StrategyP","symbolKind":"protocol","modules":[{"name":"Lockman"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This protocol provides a common interface for different locking strategies,","type":"text"},{"text":" ","type":"text"},{"text":"allowing them to be used interchangeably while maintaining type safety for","type":"text"},{"text":" ","type":"text"},{"text":"lock information. Each strategy implements specific logic for conflict detection,","type":"text"},{"text":" ","type":"text"},{"text":"lock management, and cleanup operations.","type":"text"}]},{"anchor":"Strategy-Types","level":2,"type":"heading","text":"Strategy Types"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Single Execution"}]},{"text":": Prevents concurrent execution of the same action","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority-Based"}]},{"text":": Allows higher priority actions to preempt lower priority ones","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composite"}]},{"text":": Combines multiple strategies for complex coordination","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Implementation-Guidelines","level":2,"type":"heading","text":"Implementation Guidelines"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Strategies can be implemented as either classes (for stateful strategies) or"},{"type":"text","text":" "},{"type":"text","text":"structs (for stateless strategies). Both can be type-erased using "},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"type":"text","text":"."}]},{"anchor":"Thread-Safety","level":2,"type":"heading","text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}]},{"anchor":"Example-Implementation","level":2,"type":"heading","text":"Example Implementation"},{"code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"syntax":"swift","type":"codeListing"}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"generated":true,"anchor":"Associated-Types","title":"Associated Types"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/s8SendableP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","type":"topic","kind":"symbol","role":"symbol","title":"LockmanGroupCoordinationStrategy","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/i","required":true,"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","title":"I","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"required":true,"kind":"symbol","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"title":"strategyId","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","url":"\/documentation\/lockman\/lockmanstrategy\/strategyid"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"role":"symbol","type":"topic","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"title":"cleanUp()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"role":"symbol","type":"topic","kind":"symbol","title":"unlock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)","required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"required":true,"title":"canLock(id:info:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","type":"topic","abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"title":"LockmanCompositeStrategy3","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"url":"\/documentation\/lockman\/lockmancompositestrategy3"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"required":true,"type":"topic","role":"symbol","title":"lock(id:info:)","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"kind":"symbol","type":"topic","title":"LockmanCompositeStrategy5","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","url":"\/documentation\/lockman\/lockmancompositestrategy5","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 5 different strategies."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy2","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy2"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy2"}],"abstract":[{"text":"A composite strategy that coordinates locking between 2 different strategies.","type":"text"}],"title":"LockmanCompositeStrategy2"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 4 different strategies."}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy4","role":"symbol","title":"LockmanCompositeStrategy4","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy4"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"LockmanSingleExecutionStrategy","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","title":"LockmanConcurrencyLimitedStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"required":true,"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","kind":"symbol","type":"topic","title":"makeStrategyId()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","title":"AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}],"type":"topic","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"title":"getCurrentLocks()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","required":true,"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"kind":"symbol","abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"}}}