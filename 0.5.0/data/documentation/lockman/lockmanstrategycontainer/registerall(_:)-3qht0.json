{"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","externalID":"s:7Lockman0A17StrategyContainerC11registerAllyySayAA0aB2IdV_xtGKAA0aB0RzlF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">([("},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")]) "},{"kind":"keyword","text":"throws"}],"role":"symbol","title":"registerAll(_:)"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-3qht0","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategies"},{"kind":"text","text":": [("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")]) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"strategies","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of (id, strategy) pairs to register"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method allows bulk registration of strategies while ensuring that"},{"type":"text","text":" "},{"type":"text","text":"either all strategies are registered successfully or none are registered"},{"type":"text","text":" "},{"type":"text","text":"(all-or-nothing semantics)."}]},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"LockmanError.strategyAlreadyRegistered","type":"codeVoice"},{"type":"text","text":" if any ID is already registered"}]}],"style":"note"},{"level":2,"type":"heading","anchor":"Error-Behavior","text":"Error Behavior"},{"type":"paragraph","inlineContent":[{"text":"If any strategy ID in the array conflicts with an existing registration,","type":"text"},{"text":" ","type":"text"},{"text":"the entire operation fails and no strategies are registered.","type":"text"}]},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"syntax":"swift","type":"codeListing","code":["try container.registerAll([","  (.singleExecution, LockmanSingleExecutionStrategy.shared),","  (.priorityBased, LockmanPriorityBasedStrategy.shared),","  (\"MyApp.Custom\", MyCustomStrategy())","])"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-3qht0"]}],"sections":[],"abstract":[{"type":"text","text":"Registers multiple strategies with their IDs in a single atomic operation."}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/registerAll(_:)-3qht0":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">([(","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Registers multiple strategies with their IDs in a single atomic operation."}],"title":"registerAll(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-3qht0","url":"\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-3qht0"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"url":"\/documentation\/lockman\/lockmanstrategyid","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","role":"symbol","title":"LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}]},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"}}}