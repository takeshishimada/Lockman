{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(id:strategy:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC8register2id8strategyyAA0aB2IdV_xtKAA0aB0RzlF","title":"register(id:strategy:)","modules":[{"name":"Lockman"}]},"abstract":[{"text":"Registers a concrete strategy instance with a specific identifier.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The unique identifier for this strategy configuration"}]}],"name":"id"},{"content":[{"inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"type":"codeVoice","code":"LockmanStrategy<I>"}],"type":"paragraph"}],"name":"strategy"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The strategy is wrapped in ","type":"text"},{"code":"AnyLockmanStrategy<I>","type":"codeVoice"},{"text":" for type-safe storage","type":"text"},{"text":" ","type":"text"},{"text":"while allowing heterogeneous strategy types to coexist in the container.","type":"text"},{"text":" ","type":"text"},{"text":"Each strategy ID can only be registered once to prevent conflicts.","type":"text"}]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LockmanRegistrationError.strategyAlreadyRegistered"},{"type":"text","text":" if this ID is already registered"}]}]},{"text":"Complexity","anchor":"Complexity","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"O(1) - Direct hash map insertion with conflict detection","type":"text"}]},{"text":"Thread Safety","anchor":"Thread-Safety","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Safe to call concurrently from multiple threads. Registration is atomic.","type":"text"}]},{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["let container = LockmanStrategyContainer()","try container.register(id: .singleExecution, strategy: LockmanSingleExecutionStrategy.shared)","try container.register(id: \"MyApp.RateLimit:100\", strategy: RateLimitStrategy(limit: 100))"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/register(id:strategy:)"]}],"references":{"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/register(id:strategy:)":{"abstract":[{"text":"Registers a concrete strategy instance with a specific identifier.","type":"text"}],"title":"register(id:strategy:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(id:strategy:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"strategy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer\/register(id:strategy:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"url":"\/documentation\/lockman\/lockmanstrategyid","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","role":"symbol","title":"LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}]}}}