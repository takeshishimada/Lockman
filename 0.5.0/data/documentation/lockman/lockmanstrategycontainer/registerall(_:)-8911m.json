{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategies","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Array of strategies to register"}],"type":"paragraph"}],"name":"strategies"}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Convenience method that uses each strategyâ€™s built-in ID property."},{"type":"text","text":" "},{"type":"text","text":"Either all strategies are registered successfully or none are registered."}]},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"LockmanError.strategyAlreadyRegistered","type":"codeVoice"},{"type":"text","text":" if any ID is already registered"}],"type":"paragraph"}],"type":"aside"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"code":["try container.registerAll([","  LockmanSingleExecutionStrategy.shared,","  LockmanPriorityBasedStrategy.shared,","  MyCustomStrategy()","])"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-8911m","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC11registerAllyySayxGKAA0aB0RzlF","role":"symbol","title":"registerAll(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Registers multiple strategies using their own strategyIds in a single atomic operation."}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-8911m"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/registerAll(_:)-8911m":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-8911m","title":"registerAll(_:)","abstract":[{"text":"Registers multiple strategies using their own strategyIds in a single atomic operation.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-8911m","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}]},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"title":"LockmanStrategyContainer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"Lockman.png":{"alt":"Lockman logo","type":"image","identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]}}}