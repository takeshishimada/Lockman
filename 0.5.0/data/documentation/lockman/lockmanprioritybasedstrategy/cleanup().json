{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"Lockman"}],"symbolKind":"method","title":"cleanUp()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUpyyF","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Clears all internal lock state, effectively resetting the strategy to its","type":"text"},{"text":" ","type":"text"},{"text":"initial state. This operation affects all boundaries simultaneously.","type":"text"}]},{"level":2,"text":"Use Cases","type":"heading","anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Application shutdown sequences","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Global system resets during development"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite cleanup between test cases"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}]}]}]}]}],"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"kind":"symbol","type":"topic"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","kind":"symbol"}}}