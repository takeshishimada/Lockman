{"abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","interfaceLanguage":"swift"},"metadata":{"title":"cleanUp(id:)","externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUp2idyx_tSHRzs8SendableRzlF","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier whose locks should be removed"}]}],"name":"id"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Provides targeted cleanup for specific boundaries while preserving"},{"type":"text","text":" "},{"type":"text","text":"lock state for other boundaries. This allows fine-grained control"},{"type":"text","text":" "},{"type":"text","text":"over which priority contexts to reset."}],"type":"paragraph"},{"level":2,"anchor":"Use-Cases","type":"heading","text":"Use Cases"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Feature-specific cleanup when components are deallocated"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"User session cleanup when users log out"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scoped cleanup for temporary contexts or workflows"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Partial system resets during development","type":"text"}]}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"}}}