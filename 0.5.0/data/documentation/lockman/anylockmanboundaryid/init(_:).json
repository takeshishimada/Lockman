{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"LockmanBoundaryId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10BoundaryIda"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"An instance conforming to ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":" to be wrapped","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Design Note","anchor":"Design-Note"},{"type":"paragraph","inlineContent":[{"text":"The underlying value is stored as ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":", which preserves the original","type":"text"},{"text":" ","type":"text"},{"text":"typeâ€™s hashing and equality behavior while enabling uniform storage.","type":"text"}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/anylockmanboundaryid\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"init","modules":[{"name":"Lockman"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10BoundaryIda","text":"LockmanBoundaryId","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","roleHeading":"Initializer","externalID":"s:7Lockman03AnyA10BoundaryIdVyACSH_s8Sendablepcfc","title":"init(_:)"},"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":"."}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10BoundaryIda","text":"LockmanBoundaryId"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Creates a new ","type":"text"},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":".","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)","url":"\/documentation\/lockman\/anylockmanboundaryid\/init(_:)","kind":"symbol","title":"init(_:)","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"title":"AnyLockmanBoundaryId","role":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid","kind":"symbol","navigatorTitle":[{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanBoundaryId","type":"codeVoice"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanBoundaryId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","url":"\/documentation\/lockman\/lockmanboundaryid","type":"topic","role":"symbol","title":"LockmanBoundaryId","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanBoundaryId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanBoundaryId","kind":"identifier"}],"abstract":[{"text":"A boundary identifier used by Lockman strategies, combining ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"to ensure unique and concurrent-safe keys.","type":"text"}]},"Lockman.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"}}}