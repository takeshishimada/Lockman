{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"? = nil)"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The strategy name"}]}]},{"name":"configuration","content":[{"inlineContent":[{"type":"text","text":"Optional configuration suffix"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer provides a structured way to create IDs with optional"},{"type":"text","text":" "},{"type":"text","text":"configuration suffixes."}]},{"type":"heading","anchor":"Format","text":"Format","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Without configuration: "},{"type":"codeVoice","code":"\"name\""}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"With configuration: ","type":"text"},{"type":"codeVoice","code":"\"name:configuration\""}]}]}]},{"type":"heading","anchor":"Examples","text":"Examples","level":2},{"type":"codeListing","code":["let id = LockmanStrategyId(","    name: \"RateLimitStrategy\",","    configuration: \"limit-100\"",")","\/\/ => \"RateLimitStrategy:limit-100\""],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId\/init(name:configuration:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a strategy ID with name and optional configuration."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?)"}],"role":"symbol","roleHeading":"Initializer","title":"init(name:configuration:)","modules":[{"name":"Lockman"}],"symbolKind":"init","externalID":"s:7Lockman0A10StrategyIdV4name13configurationACSS_SSSgtcfc"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategyid\/init(name:configuration:)"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId/init(name:configuration:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?)"}],"type":"topic","abstract":[{"type":"text","text":"Creates a strategy ID with name and optional configuration."}],"url":"\/documentation\/lockman\/lockmanstrategyid\/init(name:configuration:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId\/init(name:configuration:)","kind":"symbol","title":"init(name:configuration:)"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"url":"\/documentation\/lockman\/lockmanstrategyid","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","role":"symbol","title":"LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"Lockman.png":{"identifier":"Lockman.png","type":"image","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]}}}