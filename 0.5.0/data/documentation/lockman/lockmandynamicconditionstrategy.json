{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"]},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)"]},{"generated":true,"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"]},{"generated":true,"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"]},{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"externalID":"s:7Lockman0A24DynamicConditionStrategyC","title":"LockmanDynamicConditionStrategy","symbolKind":"class","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"roleHeading":"Class","modules":[{"name":"Lockman"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"code":"LockmanDynamicConditionStrategy","type":"codeVoice"},{"text":" allows you to define arbitrary locking conditions","type":"text"},{"text":" ","type":"text"},{"text":"using closures that are evaluated when the lock is requested. This provides maximum","type":"text"},{"text":" ","type":"text"},{"text":"flexibility for complex business logic scenarios.","type":"text"}],"type":"paragraph"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"code":["\/\/ Business logic condition with custom error","struct PriorityTooLowError: Error {","    let priority: Int","}","","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .failure(PriorityTooLowError(priority: priority))","    }","    return .success","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"inlineContent":[{"text":"This strategy is thread-safe and uses ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" for managing concurrent access.","type":"text"}],"type":"paragraph"}]}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"type":"topic","abstract":[{"text":"Removes all active locks across all boundaries.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"title":"cleanUp()","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()"},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"kind":"symbol","abstract":[{"text":"Creates a strategy identifier for the dynamic condition strategy.","type":"text"}],"title":"makeStrategyId()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()","role":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"abstract":[],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"title":"LockmanDynamicConditionStrategy.I","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","kind":"symbol","navigatorTitle":[{"text":"I","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"kind":"symbol","abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared","role":"symbol","abstract":[{"text":"Shared singleton instance.","type":"text"}],"title":"shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC","text":"LockmanDynamicConditionStrategy"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)","role":"symbol","kind":"symbol","title":"unlock(id:info:)","abstract":[{"text":"Releases all locks with the same actionId.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(id:info:)"},"Lockman.png":{"type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Creates a new dynamic condition strategy instance.","type":"text"}],"type":"topic","title":"init()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(id:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"title":"lock(id:info:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(id:info:)":{"title":"canLock(id:info:)","type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","abstract":[{"type":"text","text":"Evaluates the dynamic condition to determine if a lock can be acquired."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(id:)":{"abstract":[{"text":"Removes all active locks for the specified boundary.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","title":"cleanUp(id:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"title":"strategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}],"role":"symbol","kind":"symbol","title":"getCurrentLocks()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging."}]}}}