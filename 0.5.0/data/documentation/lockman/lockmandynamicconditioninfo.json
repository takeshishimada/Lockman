{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","doc:\/\/Lockman\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditioninfo"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","title":"LockmanDynamicConditionInfo","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionInfo"}],"role":"symbol","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A20DynamicConditionInfoV"},"abstract":[{"type":"text","text":"Lock information for dynamic condition-based execution control."}],"topicSections":[{"anchor":"Operators","title":"Operators","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/==(_:_:)"],"generated":true},{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/init(strategyId:actionId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/init(strategyId:actionId:condition:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/actionId","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/condition","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/debugAdditionalInfo","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/debugDescription","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/strategyId","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/uniqueId"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This structure allows you to define custom locking conditions using closures","type":"text"},{"text":" ","type":"text"},{"text":"that are evaluated at runtime.","type":"text"}]},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["\/\/ Define custom error for your business logic","struct UserLimitExceededError: Error {","    let currentUsers: Int","    let maxUsers: Int","}","","let info = LockmanDynamicConditionInfo(","    actionId: \"fetchData\",","    condition: {","        \/\/ Custom business logic to determine if lock can be acquired","        guard userCount < maxUsers else {","            return .failure(UserLimitExceededError(","                currentUsers: userCount,","                maxUsers: maxUsers","            ))","        }","        return .success","    }",")"]}]}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo":{"url":"\/documentation\/lockman\/lockmandynamicconditioninfo","abstract":[{"type":"text","text":"Lock information for dynamic condition-based execution control."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionInfo"}],"title":"LockmanDynamicConditionInfo","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionInfo"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/actionId":{"title":"actionId","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The action identifier for this lock."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/actionId","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/actionid","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actionId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8ActionIda","text":"LockmanActionId","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/debugAdditionalInfo":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debugAdditionalInfo","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"debugAdditionalInfo","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/debugAdditionalInfo","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/debugadditionalinfo","abstract":[],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"title":"LockmanInfo","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/==(_:_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/==(_:_:)","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/==(_:_:)","title":"==(_:_:)","type":"topic","abstract":[{"type":"text","text":"Compares two instances based on their unique identifiers."}],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/init(strategyId:actionId:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/init(strategyId:actionId:)","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/init(strategyid:actionid:)","title":"init(strategyId:actionId:)","type":"topic","abstract":[{"type":"text","text":"Creates a new dynamic condition lock info with default condition (always success)."}],"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"strategyId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"actionId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanActionId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8ActionIda"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/condition":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"condition","kind":"identifier"},{"text":": () -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/condition","kind":"symbol","type":"topic","title":"condition","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/condition","abstract":[{"type":"text","text":"The condition that determines whether this lock can be acquired."}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/init(strategyId:actionId:condition:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/init(strategyId:actionId:condition:)","title":"init(strategyId:actionId:condition:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"strategyId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"actionId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanActionId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8ActionIda"},{"text":", ","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new dynamic condition lock info with a custom condition."}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/init(strategyid:actionid:condition:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/uniqueId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/uniqueId","title":"uniqueId","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"uniqueId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID"}],"abstract":[{"text":"A unique identifier for this specific lock instance.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/uniqueid","role":"symbol"},"Lockman.png":{"alt":"Lockman logo","type":"image","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/debugDescription":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"debugDescription"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/debugdescription","type":"topic","kind":"symbol","title":"debugDescription","abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/debugDescription","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo/strategyId":{"abstract":[{"text":"The strategy identifier for this lock info.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo\/strategyId","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditioninfo\/strategyid","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"role":"symbol","title":"strategyId"}}}