{"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A23SingleExecutionStrategyC4lock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","title":"lock(id:info:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/lock(id:info:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/lock(id:info:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Acquires a single-execution lock for the specified boundary and action.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}],"type":"paragraph"}],"name":"id"},{"content":[{"inlineContent":[{"type":"text","text":"The lock information to register as active"}],"type":"paragraph"}],"name":"info"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adds the lock information to the internal state. This method should only be called"},{"type":"text","text":" "},{"type":"text","text":"after "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" returns "},{"type":"codeVoice","code":".success"},{"type":"text","text":" to ensure proper lock coordination."}]},{"type":"heading","anchor":"Instance-Tracking","level":2,"text":"Instance Tracking"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The exact "},{"type":"codeVoice","code":"info"},{"type":"text","text":" instance (with its "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":") is stored, allowing for"},{"type":"text","text":" "},{"type":"text","text":"precise removal during unlock operations."}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"syntax":"swift","code":["let info = LockmanSingleExecutionInfo(actionId: \"processPayment\")","","if strategy.canLock(id: boundary, info: info) == .success {","  strategy.lock(id: boundary, info: info)","  \/\/ info is now tracked with its specific uniqueId","}"],"type":"codeListing"}],"kind":"content"}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/lock(id:info:)":{"abstract":[{"type":"text","text":"Acquires a single-execution lock for the specified boundary and action."}],"title":"lock(id:info:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/lock(id:info:)","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"LockmanSingleExecutionStrategy","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","navigatorTitle":[{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"kind":"symbol","role":"symbol","title":"LockmanSingleExecutionInfo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","type":"topic"},"doc://Lockman/documentation/Lockman":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"role":"collection","url":"\/documentation\/lockman"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"}}}