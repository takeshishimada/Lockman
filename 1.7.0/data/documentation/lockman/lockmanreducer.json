{"metadata":{"modules":[{"name":"Lockman"}],"title":"LockmanReducer","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanReducer"}],"externalID":"s:7Lockman0A7ReducerV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"LockmanReducer"}],"symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"text":"A reducer wrapper that applies Lockman locking with true lock-first behavior.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanReducer"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Base"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"Lock-First-Behavior","text":"Lock-First Behavior","type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"This reducer implements true lock-first behavior"}]},{"text":": Lock acquisition feasibility is checked","type":"text"},{"text":" ","type":"text"},{"text":"BEFORE the base reducer executes, preventing state mutations when locks cannot be acquired.","type":"text"},{"text":" ","type":"text"},{"text":"This ensures complete exclusive control over both state changes and effects.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Lock-Execution-Flow--UniqueId-Consistency","text":"Lock Execution Flow & UniqueId Consistency","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"LockmanInfo Capture","type":"text"}]},{"type":"text","text":": Capture action’s lockmanInfo once to ensure consistent uniqueId"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lock Feasibility Check"}],"type":"strong"},{"type":"text","text":": Determine if lock can be acquired using strategy’s "},{"type":"codeVoice","code":"canLock"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Conditional State Mutation"}]},{"type":"text","text":": Base reducer executes ONLY if lock acquisition succeeded"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Effect Execution"}],"type":"strong"},{"type":"text","text":": Run effects with the already-acquired lock using same lockmanInfo"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Guaranteed Unlock"}],"type":"strong"},{"text":": Release lock when effects complete using matching uniqueId","type":"text"}]}]}],"type":"orderedList"},{"level":2,"anchor":"When-Lock-Fails","text":"When Lock Fails","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"No state mutations occur (true lock-first behavior)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Base reducer is never called","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lock failure handler is invoked if provided","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Effect returns ","type":"text"},{"code":".none","type":"codeVoice"},{"type":"text","text":" (operation is completely cancelled)"}]}]}],"type":"unorderedList"},{"anchor":"Strategy-Resolution","level":2,"text":"Strategy Resolution","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The reducer uses Effect-based strategy resolution to work around Swift’s existential type"},{"type":"text","text":" "},{"type":"text","text":"limitations, allowing type-safe strategy resolution before reducer execution."}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct Feature {","  struct State: Equatable {","    var counter = 0  \/\/ ✅ Only mutated when lock can be acquired","  }","","  enum Action: LockmanSingleExecutionAction {","    case increment","    case decrement","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .increment, .decrement:","        return LockmanSingleExecutionInfo(actionId: \"counter\", mode: .boundary)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .increment:","        state.counter += 1  \/\/ ✅ Executes ONLY after lock feasibility check","        return .run { send in","          \/\/ This effect executes with the acquired lock","          await performSideEffect()","        }","      case .decrement:","        state.counter -= 1  \/\/ ✅ Executes ONLY after lock feasibility check","        return .none","      }","    }","    .lock(boundaryId: CancelID.feature)","  }","}"]}]}],"variants":[{"paths":["\/documentation\/lockman\/lockmanreducer"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/body"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Action","doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/State"],"anchor":"Type-Aliases","title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Reducer-Implementations","doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Reducer-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Lockman\/22ComposableArchitecture7ReducerP"],"type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer"},"references":{"doc://Lockman/documentation/Lockman/LockmanReducer/State":{"role":"symbol","url":"\/documentation\/lockman\/lockmanreducer\/state","type":"topic","kind":"symbol","title":"LockmanReducer.State","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/State","navigatorTitle":[{"kind":"identifier","text":"State"}]},"doc://Lockman/documentation/Lockman/LockmanReducer":{"abstract":[{"type":"text","text":"A reducer wrapper that applies Lockman locking with true lock-first behavior."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer","title":"LockmanReducer","url":"\/documentation\/lockman\/lockmanreducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanReducer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanReducer"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanReducer/Reducer-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Reducer-Implementations","type":"topic","title":"Reducer Implementations","url":"\/documentation\/lockman\/lockmanreducer\/reducer-implementations","abstract":[]},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanReducer/Action":{"role":"symbol","url":"\/documentation\/lockman\/lockmanreducer\/action","type":"topic","title":"LockmanReducer.Action","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/Action","navigatorTitle":[{"kind":"identifier","text":"Action"}]},"doc://Lockman/documentation/Lockman/LockmanReducer/body":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP","text":"Reducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[],"role":"symbol","kind":"symbol","title":"body","url":"\/documentation\/lockman\/lockmanreducer\/body","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanReducer\/body","type":"topic"},"doc://Lockman/22ComposableArchitecture7ReducerP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/22ComposableArchitecture7ReducerP","title":"ComposableArchitecture.Reducer"}}}