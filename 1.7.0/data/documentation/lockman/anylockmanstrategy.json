{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"sections":[],"kind":"symbol","metadata":{"symbolKind":"struct","externalID":"s:7Lockman03AnyA8StrategyV","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"title":"AnyLockmanStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"modules":[{"name":"Lockman"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()"],"generated":true,"title":"Type Methods","anchor":"Type-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Purpose","anchor":"Purpose"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyLockmanStrategy"},{"text":" solves the fundamental problem of storing different concrete","type":"text"},{"text":" ","type":"text"},{"text":"strategy implementations in the same collection. Without type erasure, you cannot","type":"text"},{"text":" ","type":"text"},{"text":"store ","type":"text"},{"type":"codeVoice","code":"LockmanSingleExecutionStrategy"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"LockmanPriorityBasedStrategy"},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"same array, even though they both conform to ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy"},{"text":".","type":"text"}]},{"level":2,"type":"heading","text":"Key Benefits","anchor":"Key-Benefits"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Heterogeneous Collections"}]},{"type":"text","text":": Store different strategy implementations together"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Runtime Strategy Selection","type":"text"}]},{"type":"text","text":": Choose strategies dynamically based on conditions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"API Boundaries"}],"type":"strong"},{"type":"text","text":": Hide concrete strategy types from public interfaces"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dependency Injection"}]},{"text":": Enable flexible strategy registration and resolution","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Universal Compatibility","type":"text"}]},{"type":"text","text":": Support both class and struct strategy implementations"}]}]}]},{"level":2,"type":"heading","text":"Type Safety Guarantees","anchor":"Type-Safety-Guarantees"},{"type":"paragraph","inlineContent":[{"text":"While the concrete strategy type is erased, type safety for lock information ","type":"text"},{"type":"codeVoice","code":"I"},{"text":" ","type":"text"},{"text":"is preserved at the ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"text":" level. This means you cannot accidentally","type":"text"},{"text":" ","type":"text"},{"text":"use ","type":"text"},{"type":"codeVoice","code":"LockmanSingleExecutionInfo"},{"text":" with a priority-based strategy wrapper.","type":"text"}]},{"level":2,"type":"heading","text":"Performance Considerations","anchor":"Performance-Considerations"},{"type":"paragraph","inlineContent":[{"text":"Type erasure introduces a small runtime overhead due to function pointer indirection.","type":"text"},{"text":" ","type":"text"},{"text":"However, this cost is typically negligible compared to the actual locking operations","type":"text"},{"text":" ","type":"text"},{"text":"and is justified by the flexibility gained.","type":"text"}]}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"kind":"symbol","role":"symbol","title":"getCurrentLocks()","abstract":[{"type":"text","text":"Returns current lock information for debugging."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()"},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/strategyId":{"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/strategyid","type":"topic","abstract":[{"type":"text","text":"The identifier for this type-erased strategy."}],"title":"strategyId","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)","kind":"symbol","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"title":"unlock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(boundaryId:info:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(boundaryId:info:)","title":"lock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/lock(boundaryid:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(boundaryId:info:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"title":"canLock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:)","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"title":"cleanUp()","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/makeStrategyId()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()","type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/makestrategyid()","kind":"symbol","role":"symbol","title":"makeStrategyId()","abstract":[{"text":"Creates a generic strategy identifier for type-erased strategies.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}]},"doc://Lockman/documentation/Lockman/LockmanInfo":{"type":"topic","title":"LockmanInfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","title":"AnyLockmanStrategy","role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(boundaryId:)":{"kind":"symbol","title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(boundaryid:)","role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(boundaryId:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}]}}}