{"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"init","roleHeading":"Initializer","externalID":"s:7Lockman03AnyA8StrategyVyACyxGqd__c1IQyd__RszAA0aC0Rd__lufc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"role":"symbol","title":"init(_:)","modules":[{"name":"Lockman"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","text":"LockmanStrategy"}]}]},{"kind":"parameters","parameters":[{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"type":"codeVoice","code":"LockmanStrategy<I>"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer performs type erasure by capturing the concrete strategy’s methods"},{"type":"text","text":" "},{"type":"text","text":"as closures. The concrete strategy’s lifetime is preserved through these closures,"},{"type":"text","text":" "},{"type":"text","text":"ensuring that the strategy remains valid for the lifetime of this wrapper."}]},{"type":"heading","level":2,"text":"Type Safety","anchor":"Type-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"where S.I == I","type":"codeVoice"},{"type":"text","text":" constraint ensures that the concrete strategy’s lock information"},{"type":"text","text":" "},{"type":"text","text":"type matches this wrapper’s lock information type, maintaining type safety at compile time."}]},{"type":"heading","level":2,"text":"Memory Management","anchor":"Memory-Management"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For class-based strategies: The strategy instance is retained by the closures"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"For struct-based strategies: The strategy is copied into the closures"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Both approaches ensure proper lifetime management without memory leaks"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Performance Notes","anchor":"Performance-Notes"},{"type":"paragraph","inlineContent":[{"text":"The type erasure process happens once during initialization. Subsequent method calls","type":"text"},{"text":" ","type":"text"},{"text":"have minimal overhead (single function pointer indirection).","type":"text"}]}]}],"abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","title":"AnyLockmanStrategy","role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","url":"\/documentation\/lockman\/lockmanstrategy\/i","kind":"symbol","title":"I","role":"symbol","required":true,"abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:)","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}]},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"}}}