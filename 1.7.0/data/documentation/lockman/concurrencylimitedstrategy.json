{"kind":"article","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"seeAlsoSections":[{"generated":true,"anchor":"Strategies","title":"Strategies","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"]}],"metadata":{"title":"ConcurrencyLimitedStrategy","modules":[{"name":"Lockman"}],"role":"article","roleHeading":"Article"},"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"ConcurrencyLimitedStrategy is a strategy that limits the number of concurrent executions. It allows concurrent execution up to a specified number and rejects execution when the limit is exceeded, enabling resource usage control and performance optimization.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This strategy is used for controlling the concurrency of resource-intensive operations such as network requests and file operations.","type":"text"}],"type":"paragraph"},{"anchor":"Concurrency-Limitation-System","level":2,"text":"Concurrency Limitation System","type":"heading"},{"anchor":"Limit-Types","level":3,"text":"Limit Types","type":"heading"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"unlimited"}]},{"type":"text","text":" - No limit"}],"type":"paragraph"},{"code":["LockmanConcurrencyLimitedInfo(","    actionId: \"backgroundTask\",","    concurrencyId: \"background\",","    limit: .unlimited",")"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"No limit on the number of concurrent executions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Used when you want to temporarily disable limits","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Applied for behavior verification during debugging and testing","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"limited","type":"text"}]},{"text":" - Numeric limit","type":"text"}],"type":"paragraph"},{"code":["LockmanConcurrencyLimitedInfo(","    actionId: \"download\",","    concurrencyId: \"downloads\", ","    limit: .limited(3)",")"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows concurrent execution up to the specified number","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations exceeding the limit are rejected"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Resource protection and performance optimization","type":"text"}]}]}]},{"level":3,"anchor":"Concurrency-Groups","text":"Concurrency Groups","type":"heading"},{"inlineContent":[{"type":"text","text":"Operations with the same "},{"type":"codeVoice","code":"concurrencyId"},{"type":"text","text":" are managed as a single group, and the number of concurrent executions is limited on a per-group basis."}],"type":"paragraph"},{"code":["\/\/ Managed as the same group \"downloads\"","LockmanConcurrencyLimitedInfo(","    actionId: \"downloadImage\",","    concurrencyId: \"downloads\",","    limit: .limited(3)",")","","LockmanConcurrencyLimitedInfo(","    actionId: \"downloadVideo\", ","    concurrencyId: \"downloads\",","    limit: .limited(3)",")"],"type":"codeListing","syntax":"swift"},{"level":2,"anchor":"Usage","text":"Usage","type":"heading"},{"level":3,"anchor":"Basic-Usage-Example","text":"Basic Usage Example","type":"heading"},{"code":["@LockmanConcurrencyLimited","enum ViewAction {","    case downloadFile(URL)","    case uploadFile(URL)","    case processImage(UIImage)","    ","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","        switch self {","        case .downloadFile:","            return LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"network\",","                limit: .limited(3)","            )","        case .uploadFile:","            return LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"network\", ","                limit: .limited(3)","            )","        case .processImage:","            return LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"imageProcessing\",","                limit: .limited(2)","            )","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"level":3,"anchor":"Group-specific-Limit-Configuration","text":"Group-specific Limit Configuration","type":"heading"},{"code":["\/\/ Network-related: Maximum 3","LockmanConcurrencyLimitedInfo(","    actionId: \"apiCall\",","    concurrencyId: \"network\",","    limit: .limited(3)",")","","\/\/ Image operations: Maximum 2  ","LockmanConcurrencyLimitedInfo(","    actionId: \"imageResize\",","    concurrencyId: \"imageProcessing\", ","    limit: .limited(2)",")","","\/\/ Background tasks: No limit","LockmanConcurrencyLimitedInfo(","    actionId: \"logging\",","    concurrencyId: \"background\",","    limit: .unlimited",")"],"type":"codeListing","syntax":"swift"},{"level":2,"anchor":"Behavior-Examples","text":"Behavior Examples","type":"heading"},{"level":3,"anchor":"Execution-Control-by-Limits","text":"Execution Control by Limits","type":"heading"},{"code":["Limit: 3","Concurrency Group: \"downloads\"","","Time: 0s  - download1 request → ✅ Execute (1\/3)","Time: 1s  - download2 request → ✅ Execute (2\/3)  ","Time: 2s  - download3 request → ✅ Execute (3\/3)","Time: 3s  - download4 request → ❌ Reject (limit reached)","Time: 4s  - download1 complete → ✅ Complete (2\/3)","Time: 5s  - download5 request → ✅ Execute (3\/3)"],"type":"codeListing","syntax":null},{"level":3,"anchor":"Independent-Control-in-Different-Groups","text":"Independent Control in Different Groups","type":"heading"},{"code":["Network Group (Limit: 3)","Time: 0s  - api1 execute, api2 execute, api3 execute → ✅ (3\/3)","Time: 1s  - api4 request → ❌ Reject","","Image Processing Group (Limit: 2)  ","Time: 0s  - resize1 execute, resize2 execute → ✅ (2\/2)","Time: 1s  - resize3 request → ❌ Reject","","※ Different groups are controlled independently"],"type":"codeListing","syntax":null},{"level":2,"anchor":"Error-Handling","text":"Error Handling","type":"heading"},{"inlineContent":[{"type":"text","text":"For errors that may occur in ConcurrencyLimitedStrategy and how to handle them, also refer to the common patterns on the "},{"overridingTitleInlineContent":[{"text":"Error Handling","type":"text"}],"isActive":true,"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","overridingTitle":"Error Handling"},{"type":"text","text":" page."}],"type":"paragraph"},{"level":3,"anchor":"LockmanConcurrencyLimitedCancellationError","text":"LockmanConcurrencyLimitedCancellationError","type":"heading"},{"inlineContent":[{"type":"text","text":"This error conforms to "},{"code":"LockmanCancellationError","type":"codeVoice"},{"type":"text","text":" protocol and provides:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"cancelledInfo","type":"codeVoice"},{"text":": Information about the cancelled action","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"boundaryId"},{"type":"text","text":": Where the cancellation occurred"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"existingInfos","type":"codeVoice"},{"text":": Array of currently active infos","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"currentCount","type":"codeVoice"},{"type":"text","text":": Current number of active executions"}],"type":"paragraph"}]}]},{"code":["lockFailure: { error, send in","    if let concurrencyError = error as? LockmanConcurrencyLimitedCancellationError {","        let limit = concurrencyError.cancelledInfo.limit","        let current = concurrencyError.currentCount","        await send(.concurrencyLimitReached(","            \"Concurrency limit reached (\\(current)\/\\(limit))\"","        ))","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/concurrencylimitedstrategy"]}],"references":{"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"type":"topic","kind":"article","title":"SingleExecutionStrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}],"url":"\/documentation\/lockman\/singleexecutionstrategy"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"url":"\/documentation\/lockman\/groupcoordinationstrategy","title":"GroupCoordinationStrategy","type":"topic","abstract":[{"type":"text","text":"Coordinate actions through leader\/member group roles."}],"role":"article","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy"},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"url":"\/documentation\/lockman\/prioritybasedstrategy","role":"article","title":"PriorityBasedStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","abstract":[{"text":"Control action execution based on priority levels.","type":"text"}],"kind":"article"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"role":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","title":"CompositeStrategy","abstract":[{"text":"Combine multiple strategies for complex control scenarios.","type":"text"}],"url":"\/documentation\/lockman\/compositestrategy","kind":"article"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","url":"\/documentation\/lockman\/dynamicconditionstrategy","role":"article","title":"Dynamic Condition Evaluation","kind":"article","type":"topic","abstract":[{"type":"text","text":"Control actions based on runtime conditions with unified condition evaluation."}]},"doc://Lockman/documentation/Lockman/ErrorHandling":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","url":"\/documentation\/lockman\/errorhandling","type":"topic","title":"Error Handling","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}]}}}