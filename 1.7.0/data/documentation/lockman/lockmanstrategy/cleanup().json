{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method clears all internal lock state managed by the strategy,"},{"type":"text","text":" "},{"type":"text","text":"effectively resetting it to its initial state. Use this for:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Application shutdown sequences","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite cleanup between tests"}]}]},{"content":[{"inlineContent":[{"text":"Global system resets during development","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}]}]}],"type":"unorderedList"},{"anchor":"Implementation-Guidelines","type":"heading","level":2,"text":"Implementation Guidelines"},{"items":[{"content":[{"inlineContent":[{"text":"Should remove all tracked locks regardless of boundary","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should not fail even if no locks are currently held"}]}]},{"content":[{"inlineContent":[{"text":"Should be safe to call multiple times","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"kind":"symbol","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"metadata":{"required":true,"role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"title":"cleanUp()"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","kind":"symbol","type":"topic","title":"cleanUp()","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy"},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"}}}