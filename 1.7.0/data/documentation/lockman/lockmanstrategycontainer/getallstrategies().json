{"metadata":{"externalID":"s:7Lockman0A17StrategyContainerC16getAllStrategiesSayAA0aB2IdV_AA0aB0_ptGyF","roleHeading":"Instance Method","role":"symbol","title":"getAllStrategies()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAllStrategies"},{"kind":"text","text":"() -> [("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy"},{"kind":"text","text":")]"}],"modules":[{"name":"Lockman"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAllStrategies"},{"kind":"text","text":"() -> [("},{"kind":"typeIdentifier","text":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"LockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP"},{"kind":"text","text":")]"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"Dictionary mapping strategy IDs to their type-erased instances"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method provides access to all registered strategies as type-erased instances."},{"type":"text","text":" "},{"type":"text","text":"Since strategies can have different info types, they are returned as "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" type."},{"type":"text","text":" "},{"type":"text","text":"Use this method carefully and only for debugging\/inspection purposes."}]},{"type":"heading","level":2,"text":"Complexity","anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Returns all registered strategies for debugging purposes.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/getAllStrategies()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/getallstrategies()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","title":"LockmanStrategyId","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategyid"},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","kind":"symbol","title":"LockmanStrategyContainer","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/getAllStrategies()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/getAllStrategies()","role":"symbol","title":"getAllStrategies()","abstract":[{"type":"text","text":"Returns all registered strategies for debugging purposes."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAllStrategies","kind":"identifier"},{"text":"() -> [(","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","kind":"typeIdentifier"},{"text":")]","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer\/getallstrategies()"}}}