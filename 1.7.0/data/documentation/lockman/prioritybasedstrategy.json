{"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Article","role":"article","title":"PriorityBasedStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","variants":[{"paths":["\/documentation\/lockman\/prioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"anchor":"Strategies","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"],"generated":true,"title":"Strategies"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PriorityBasedStrategy is a strategy that performs execution control based on priority. High-priority operations can interrupt low-priority operations to execute, allowing important operations to be handled preferentially."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is used in situations where high-urgency operations or control based on importance is required."}]},{"type":"heading","level":2,"text":"Priority System","anchor":"Priority-System"},{"type":"heading","level":3,"text":"Priority Levels","anchor":"Priority-Levels"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"high"}],"type":"strong"},{"text":" - High Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Can interrupt all other priority operations","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System-level emergency operations or important user operations"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"low","type":"text"}],"type":"strong"},{"text":" - Low Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can interrupt none priority operations"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Interrupted by high priority","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Regular background operations","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"none","type":"text"}],"type":"strong"},{"text":" - No Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Bypasses priority system","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Not interrupted by other operations","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basic operations or temporary disabling","type":"text"}]}]}]},{"level":3,"text":"Exclusive Execution Control","type":"heading","anchor":"Exclusive-Execution-Control"},{"inlineContent":[{"type":"text","text":"Within the same priority level, control is based on the exclusive execution behavior setting of existing operations:"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"exclusive"}],"type":"strong"},{"text":" - Exclusive Execution","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["LockmanPriorityBasedInfo(","    actionId: \"payment\",","    priority: .high(.exclusive)",")"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rejects new operations of the same priority"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Protects important operations from interruption","type":"text"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"replaceable"}]},{"text":" - Replaceable Execution","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["LockmanPriorityBasedInfo(","    actionId: \"search\", ","    priority: .high(.replaceable)",")"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Can be interrupted by new operations of the same priority","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Applied to search or update operations"}],"type":"paragraph"}]}]},{"level":2,"text":"Usage","type":"heading","anchor":"Usage"},{"level":3,"text":"Basic Usage Example","type":"heading","anchor":"Basic-Usage-Example"},{"syntax":"swift","type":"codeListing","code":["@LockmanPriorityBased","enum ViewAction {","    case emergencySync","    case normalSync","    case backgroundTask","    ","    var lockmanInfo: LockmanPriorityBasedInfo {","        switch self {","        case .emergencySync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        case .backgroundTask:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .none","            )","        }","    }","}"]},{"level":2,"type":"heading","text":"Operation Examples","anchor":"Operation-Examples"},{"level":3,"type":"heading","text":"Interruption by Priority","anchor":"Interruption-by-Priority"},{"syntax":null,"type":"codeListing","code":["Time: 0s  - Low priority process starts    ‚Üí ‚úÖ Execute","Time: 2s  - High priority process request  ‚Üí ‚úÖ Execute (interrupts low process)","Time: 2s  - Low priority process           ‚Üí üõë Cancel","Time: 5s  - High priority process complete ‚Üí ‚úÖ Complete"]},{"level":3,"type":"heading","text":"Control at Same Priority","anchor":"Control-at-Same-Priority"},{"syntax":null,"type":"codeListing","code":["\/\/ Exclusive setting case","Time: 0s  - high(.exclusive) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.exclusive) request ‚Üí ‚ùå Reject","Time: 3s  - First process completes  ‚Üí ‚úÖ Complete","Time: 4s  - high(.exclusive) request ‚Üí ‚úÖ Execute","","\/\/ Replaceable setting case","Time: 0s  - high(.replaceable) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.replaceable) request ‚Üí ‚úÖ Execute (interrupts previous)","Time: 1s  - First process              ‚Üí üõë Cancel"]},{"level":2,"type":"heading","text":"Error Handling","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For errors that may occur with PriorityBasedStrategy and their solutions, please also refer to the common patterns on the "},{"type":"reference","isActive":true,"overridingTitle":"Error Handling","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","overridingTitleInlineContent":[{"type":"text","text":"Error Handling"}]},{"type":"text","text":" page."}]},{"level":3,"type":"heading","text":"Error Types","anchor":"Error-Types"},{"type":"paragraph","inlineContent":[{"text":"PriorityBasedStrategy uses two error types, both conforming to ","type":"text"},{"code":"LockmanCancellationError","type":"codeVoice"},{"text":" protocol:","type":"text"}]},{"level":4,"type":"heading","text":"LockmanPriorityBasedBlockedError","anchor":"LockmanPriorityBasedBlockedError"},{"type":"paragraph","inlineContent":[{"text":"Occurs when a new action is blocked due to priority conflicts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"BlockedReason cases:"}],"type":"strong"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"higherPriorityExists"}],"type":"strong"},{"type":"text","text":" - Higher priority is running"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"samePriorityConflict"}]},{"type":"text","text":" - Conflict at same priority"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["lockFailure: { error, send in","    if let blockedError = error as? LockmanPriorityBasedBlockedError {","        switch blockedError.reason {","        case .higherPriorityExists(let requested, let current):","            await send(.priorityConflict(\"Waiting due to high priority process running\"))","        case .samePriorityConflict(let priority):","            await send(.busyMessage(\"Process with same priority is running\"))","        }","    }","}"]},{"level":4,"type":"heading","text":"LockmanPriorityBasedCancellationError","anchor":"LockmanPriorityBasedCancellationError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Occurs when an existing action is cancelled by preemption."}]},{"syntax":"swift","type":"codeListing","code":["catch handler: { error, send in","    if let cancellationError = error as? LockmanPriorityBasedCancellationError {","        await send(.processCancelled(\"Interrupted by high priority process: \\(cancellationError.cancelledInfo.actionId)\"))","    }","}"]}]}],"abstract":[{"text":"Control action execution based on priority levels.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","url":"\/documentation\/lockman\/dynamicconditionstrategy","role":"article","title":"Dynamic Condition Evaluation","kind":"article","type":"topic","abstract":[{"type":"text","text":"Control actions based on runtime conditions with unified condition evaluation."}]},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"type":"topic","kind":"article","title":"SingleExecutionStrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}],"url":"\/documentation\/lockman\/singleexecutionstrategy"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"role":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","title":"CompositeStrategy","abstract":[{"text":"Combine multiple strategies for complex control scenarios.","type":"text"}],"url":"\/documentation\/lockman\/compositestrategy","kind":"article"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","url":"\/documentation\/lockman\/errorhandling","type":"topic","title":"Error Handling","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}]},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","role":"article","title":"ConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/concurrencylimitedstrategy","kind":"article","type":"topic"},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"url":"\/documentation\/lockman\/groupcoordinationstrategy","title":"GroupCoordinationStrategy","type":"topic","abstract":[{"type":"text","text":"Coordinate actions through leader\/member group roles."}],"role":"article","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy"}}}