{"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"title":"Essentials","anchor":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration"},"sections":[],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"LockmanManager provides configuration functionality to set Lockman’s behavior throughout the application. These settings allow you to customize default lock release timing and error handling behavior.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once configured, settings apply application-wide and can be overridden at various levels: in "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Effect.lock"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"Effect.lock","isActive":true},{"type":"text","text":" method chains or when configuring "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Reducer.lock"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"Reducer.lock","isActive":true},{"type":"text","text":"."}]},{"type":"heading","level":2,"text":"Configuration Options","anchor":"Configuration-Options"},{"type":"heading","level":3,"text":"defaultUnlockOption","anchor":"defaultUnlockOption"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sets the default timing for lock release."}]},{"type":"codeListing","code":["\/\/ Configure during application initialization","LockmanManager.config.defaultUnlockOption = .immediate"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Available values","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"code":".immediate","type":"codeVoice"}]},{"type":"text","text":": Release immediately upon completion (default)"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"codeVoice","code":".mainRunLoop"}],"type":"strong"},{"type":"text","text":": Release on the next main loop cycle"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"code":".transition","type":"codeVoice"}]},{"text":": Release after platform-specific screen transition animation","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"code":".delayed(TimeInterval)","type":"codeVoice"}]},{"type":"text","text":": Release after the specified time interval"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Priority order","type":"text"}]},{"type":"text","text":":"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Explicitly specified in method call (","type":"text"},{"type":"codeVoice","code":"Effect.lock"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"Reducer.lock"},{"text":") (highest priority)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Action’s ","type":"text"},{"code":"unlockOption","type":"codeVoice"},{"text":" property (if implementing ","type":"text"},{"code":"LockmanAction","type":"codeVoice"},{"text":")","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"LockmanManager.config.defaultUnlockOption","type":"codeVoice"},{"type":"text","text":" (lowest priority)"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Use cases","type":"text"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Unified release timing considering UI transitions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Consistent behavior settings across the application","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adjustments for performance optimization","type":"text"}]}]}]},{"type":"heading","level":3,"text":"handleCancellationErrors","anchor":"handleCancellationErrors"},{"type":"paragraph","inlineContent":[{"text":"Sets how to handle cancellation errors.","type":"text"}]},{"type":"codeListing","code":["\/\/ Ignore cancellation errors (default)","LockmanManager.config.handleCancellationErrors = false","","\/\/ Pass cancellation errors to error handler","LockmanManager.config.handleCancellationErrors = true"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Values"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":"false"}]},{"text":": Ignore cancellation errors and don’t pass to error handler (default)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":"true"}]},{"type":"text","text":": Pass cancellation errors to error handler"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Use cases"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Logging cancellation operations","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Tracking cancellation situations during debugging","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Collecting statistical information"}]}]}]},{"type":"heading","level":2,"text":"Configuration Examples","anchor":"Configuration-Examples"},{"type":"heading","level":3,"text":"Configuration during Application Initialization","anchor":"Configuration-during-Application-Initialization"},{"type":"codeListing","code":["\/\/ Configure in AppDelegate or App struct","func applicationDidFinishLaunching() {","    \/\/ Set release timing considering UI transitions","    LockmanManager.config.defaultUnlockOption = .transition","    ","    \/\/ Log cancellation errors during development","    #if DEBUG","    LockmanManager.config.handleCancellationErrors = true","    #endif","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"Individual Override","anchor":"Individual-Override"},{"type":"codeListing","code":["\/\/ Override in Reducer.lock()",".lock(","    boundaryId: CancelID.feature,","    unlockOption: .immediate, \/\/ Override global setting","    lockFailure: { error, send in","        \/\/ Error handling","    }",")","","\/\/ Override in Effect.lock()",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .delayed(0.5) \/\/ Override for this effect",")","","\/\/ Override with manual unlock timing control",".run { send in","    \/\/ Operations that require transition timing","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition \/\/ Override for fine control",")"],"syntax":"swift"},{"type":"heading","level":2,"text":"Notes","anchor":"Notes"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since configuration changes affect the entire application, it’s recommended to configure during initialization"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Runtime configuration changes are possible but should be done carefully to avoid unexpected behavior"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"During testing, it’s recommended to reset settings to avoid effects between tests"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"roleHeading":"Article","title":"Configuration","role":"article","modules":[{"name":"Lockman"}]},"kind":"article","abstract":[{"text":"Configure Lockman for your application’s needs.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/configuration"]}],"references":{"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/Lock":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","url":"\/documentation\/lockman\/lock","role":"article","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"type":"topic","kind":"article","title":"Lock"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"title":"Boundary","kind":"article","role":"article","url":"\/documentation\/lockman\/boundaryoverview","abstract":[{"text":"Understand the concept of boundaries in Lockman.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","abstract":[{"type":"text","text":"Learn how to select the right strategy for your use case."}],"kind":"article","url":"\/documentation\/lockman\/choosingstrategy","title":"Choosing a Strategy","role":"article","type":"topic"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","url":"\/documentation\/lockman\/errorhandling","type":"topic","title":"Error Handling","kind":"article","role":"article","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}]},"doc://Lockman/documentation/Lockman/Unlock":{"role":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","title":"Unlock","abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/unlock","kind":"article"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","role":"article","abstract":[{"text":"Learn how to debug Lockman-related issues in your application.","type":"text"}],"type":"topic","kind":"article","title":"Debugging Guide"},"doc://Lockman/documentation/Lockman/GettingStarted":{"abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}],"url":"\/documentation\/lockman\/gettingstarted","title":"Getting Started","type":"topic","kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted"}}}