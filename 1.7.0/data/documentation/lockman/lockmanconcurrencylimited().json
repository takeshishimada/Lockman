{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/lockman\/lockmanconcurrencylimited()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"metadata":{"title":"LockmanConcurrencyLimited()","externalID":"s:7Lockman0A18ConcurrencyLimitedyycfm","modules":[{"name":"Lockman"}],"roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","symbolKind":"macro"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"text":"LockmanConcurrencyLimitedAction","preciseIdentifier":"s:7Lockman0A24ConcurrencyLimitedActionP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanConcurrencyLimitedAction"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actionName"},{"type":"text","text":" property that returns the enum case name as a String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Important"}],"type":"strong"},{"text":": You must implement the ","type":"text"},{"code":"lockmanInfo","type":"codeVoice"},{"text":" property to specify concurrency limits:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Using a predefined concurrency group: ","type":"text"},{"type":"codeVoice","code":".init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using direct limit: ","type":"text"},{"code":".init(actionId: actionName, .limited(3))","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using unlimited: ","type":"text"},{"code":".init(actionId: actionName, .unlimited)","type":"codeVoice"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"syntax":"swift","code":["\/\/ Define your concurrency groups","enum MyConcurrencyGroup: LockmanConcurrencyGroup {","  case apiRequests","  case fileOperations","  case uiUpdates","","  var id: String {","    switch self {","    case .apiRequests: return \"api_requests\"","    case .fileOperations: return \"file_operations\"","    case .uiUpdates: return \"ui_updates\"","    }","  }","","  var limit: LockmanConcurrencyLimit {","    switch self {","    case .apiRequests: return .limited(3)","    case .fileOperations: return .limited(2)","    case .uiUpdates: return .unlimited","    }","  }","}","","@Reducer","struct MyFeature {","  @LockmanConcurrencyLimited","  enum Action {","    case fetchUserProfile(User.ID)","    case uploadFile(File)","    case refreshUI","","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","      switch self {","      case .fetchUserProfile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","      case .uploadFile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.fileOperations)","      case .refreshUI:","        \/\/ Direct unlimited","        return .init(actionId: actionName, .unlimited)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .fetchUserProfile(let userId):","        return .run { send in","          \/\/ Only 3 concurrent API requests allowed","          let profile = try await api.fetchProfile(userId)","          await send(.profileFetched(profile))","        }","        .lock(","          action: .fetchUserProfile(userId),","          boundaryId: \"fetch-profile-\\(userId)\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing"}]}],"abstract":[{"text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimited()":{"kind":"symbol","title":"LockmanConcurrencyLimited()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimited()"},"doc://Lockman/documentation/Lockman":{"abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol","type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedAction":{"type":"topic","abstract":[{"type":"text","text":"Protocol for actions that support concurrency limiting."}],"title":"LockmanConcurrencyLimitedAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedaction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}]}}}