{"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"symbolKind":"class","title":"LockmanDynamicConditionStrategy","navigatorTitle":[{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"role":"symbol","externalID":"s:7Lockman0A24DynamicConditionStrategyC","roleHeading":"Class"},"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"LockmanDynamicConditionStrategy"},{"type":"text","text":" allows you to define arbitrary locking conditions"},{"type":"text","text":" "},{"type":"text","text":"using closures that are evaluated when the lock is requested. This provides maximum"},{"type":"text","text":" "},{"type":"text","text":"flexibility for complex business logic scenarios."}],"type":"paragraph"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"code":["\/\/ Business logic condition","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .failure(LockmanDynamicConditionError.conditionNotMet(","            actionId: \"fetchData\",","            hint: \"Priority too low\"","        ))","    }","    return .success","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"inlineContent":[{"text":"This strategy is thread-safe and uses ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" for managing concurrent access.","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"],"generated":true,"anchor":"Type-Aliases","title":"Type Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"abstract":[{"type":"text","text":"Creates a strategy identifier for the dynamic condition strategy."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()","title":"makeStrategyId()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"title":"shared","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared","type":"topic","abstract":[{"type":"text","text":"Shared singleton instance."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Removes all active locks for the specified boundary.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(id:)","title":"cleanUp(id:)","type":"topic","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","type":"topic","title":"LockmanDynamicConditionStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}]},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic","role":"collection","kind":"symbol","abstract":[]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(id:info:)":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(id:info:)","abstract":[{"text":"Releases all locks with the same actionId.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)","title":"unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"title":"init()","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()","abstract":[{"text":"Creates a new dynamic condition strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(id:info:)":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(id:info:)","title":"canLock(id:info:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"role":"symbol","abstract":[{"text":"Evaluates the dynamic condition to determine if a lock can be acquired.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","type":"topic","title":"LockmanDynamicConditionStrategy.I","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"navigatorTitle":[{"text":"I","kind":"identifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(id:info:)":{"type":"topic","title":"lock(id:info:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"role":"symbol","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"kind":"symbol","title":"cleanUp()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Removes all active locks across all boundaries."}]}}}