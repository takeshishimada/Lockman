{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"inlineContent":[{"text":"The boundary identifier for which the lock should be released","type":"text"}],"type":"paragraph"}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The same lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" that was used when acquiring the lock"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method must be called with the exact same parameters that were used"},{"type":"text","text":" "},{"type":"text","text":"when acquiring the lock. The implementation delegates to the concrete strategy’s"},{"type":"text","text":" "},{"type":"text","text":"unlock logic, which typically uses the lock info’s "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":" for precise identification."}],"type":"paragraph"},{"level":2,"anchor":"Parameter-Matching-Requirements","type":"heading","text":"Parameter Matching Requirements"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Boundary ID","type":"text"}],"type":"strong"},{"text":": Must match the ID used during lock acquisition","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lock Info"}],"type":"strong"},{"text":": Must be the same instance (same ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":") used during acquisition","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Strategy Consistency","type":"text"}],"type":"strong"},{"type":"text","text":": Must be called on the same strategy instance that acquired the lock"}]}]}]},{"level":2,"anchor":"Error-Recovery","type":"heading","text":"Error Recovery"},{"inlineContent":[{"type":"text","text":"If called with mismatched parameters, the concrete strategy may:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Silently ignore the unlock request (defensive programming)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Log a warning for debugging purposes"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Throw an error in debug builds"}]}]}]},{"inlineContent":[{"text":"The behavior depends on the concrete strategy’s implementation.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:7Lockman03AnyA8StrategyV6unlock2id4infoyqd___xtSHRd__s8SendableRd__lF","title":"unlock(id:info:)","modules":[{"name":"Lockman"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)"},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"title":"AnyLockmanStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic","role":"collection","kind":"symbol","abstract":[]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(id:info:)":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)","title":"unlock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"kind":"symbol"}}}