{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A7GroupIda","text":"LockmanGroupId"},{"kind":"text","text":")"}],"symbolKind":"init","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman03AnyA7GroupIdVyACSH_s8Sendablepcfc","roleHeading":"Initializer"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"]]},"abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A7GroupIda","text":"LockmanGroupId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An instance conforming to "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":" to be wrapped"}],"type":"paragraph"}],"name":"value"}]},{"content":[{"anchor":"Design-Note","text":"Design Note","level":2,"type":"heading"},{"inlineContent":[{"text":"The underlying value is stored as ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":", which preserves the original","type":"text"},{"text":" ","type":"text"},{"text":"typeâ€™s hashing and equality behavior while enabling uniform storage.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmangroupid\/init(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)"},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"url":"\/documentation\/lockman\/anylockmangroupid","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","kind":"symbol","title":"AnyLockmanGroupId","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"identifier"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"navigatorTitle":[{"text":"AnyLockmanGroupId","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"title":"init(_:)","abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A7GroupIda","text":"LockmanGroupId","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic","role":"collection","kind":"symbol","abstract":[]},"doc://Lockman/documentation/Lockman/LockmanGroupId":{"url":"\/documentation\/lockman\/lockmangroupid","abstract":[{"text":"A group identifier used by Lockman strategies, combining ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" ","type":"text"},{"text":"to ensure unique and concurrent-safe keys.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupId"}],"title":"LockmanGroupId","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupId"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId"}}}