{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/Lockman\/s8SendableP"]},{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]}],"metadata":{"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A8StrategyP","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"symbolKind":"protocol","title":"LockmanStrategy","roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"sections":[],"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Associated Types","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"anchor":"Associated-Types"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"anchor":"Type-Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This protocol provides a common interface for different locking strategies,","type":"text"},{"text":" ","type":"text"},{"text":"allowing them to be used interchangeably while maintaining type safety for","type":"text"},{"text":" ","type":"text"},{"text":"lock information. Each strategy implements specific logic for conflict detection,","type":"text"},{"text":" ","type":"text"},{"text":"lock management, and cleanup operations.","type":"text"}]},{"type":"heading","anchor":"Strategy-Types","text":"Strategy Types","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Single Execution"}]},{"type":"text","text":": Prevents concurrent execution of the same action"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Priority-Based","type":"text"}]},{"type":"text","text":": Allows higher priority actions to preempt lower priority ones"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Composite"}],"type":"strong"},{"type":"text","text":": Combines multiple strategies for complex coordination"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Implementation-Guidelines","text":"Implementation Guidelines","level":2},{"type":"paragraph","inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"heading","anchor":"Thread-Safety","text":"Thread Safety","level":2},{"type":"paragraph","inlineContent":[{"text":"All strategy implementations must be thread-safe as they may be called","type":"text"},{"text":" ","type":"text"},{"text":"concurrently from multiple contexts. Use appropriate synchronization","type":"text"},{"text":" ","type":"text"},{"text":"mechanisms in your implementation.","type":"text"}]},{"type":"heading","anchor":"Example-Implementation","text":"Example Implementation","level":2},{"type":"codeListing","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"syntax":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"title":"I","required":true,"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","url":"\/documentation\/lockman\/lockmanstrategy\/i","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"url":"\/documentation\/lockman\/lockmancompositestrategy5","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"kind":"symbol","title":"LockmanCompositeStrategy5"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"role":"symbol","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"title":"getCurrentLocks()","required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":")","kind":"text"}],"abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"title":"unlock(id:info:)","type":"topic","required":true,"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"title":"LockmanCompositeStrategy3","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","url":"\/documentation\/lockman\/lockmancompositestrategy3","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"title":"cleanUp()","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","url":"\/documentation\/lockman\/lockmancompositestrategy2","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy2"}],"role":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy2"}],"title":"LockmanCompositeStrategy2"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"role":"symbol","kind":"symbol","title":"LockmanGroupCoordinationStrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","type":"topic","title":"LockmanDynamicConditionStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"kind":"symbol","title":"LockmanCompositeStrategy4","abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","url":"\/documentation\/lockman\/lockmancompositestrategy4","navigatorTitle":[{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy4","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"title":"AnyLockmanStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"kind":"symbol","title":"LockmanPriorityBasedStrategy","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"abstract":[{"type":"text","text":"Checks if a lock can be acquired without actually acquiring it."}],"role":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","type":"topic","role":"collection","kind":"symbol","abstract":[]},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"role":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","title":"lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"type":"topic","title":"cleanUp(id:)","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","required":true,"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","required":true,"role":"symbol","title":"makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","kind":"symbol","required":true,"role":"symbol","title":"strategyId","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","role":"symbol","title":"LockmanSingleExecutionStrategy","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}]}}}