{"metadata":{"symbolKind":"method","modules":[{"name":"Lockman"}],"title":"getCurrentLocks()","externalID":"s:7Lockman03AnyA8StrategyV15getCurrentLocksSDyAA0bA10BoundaryIdVSayAA0A4Info_pGGyF","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()"]}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"Dictionary mapping boundary IDs to their active lock information","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method provides a snapshot of all currently held locks managed by the"},{"type":"text","text":" "},{"type":"text","text":"underlying concrete strategy. The implementation delegates to the concrete"},{"type":"text","text":" "},{"type":"text","text":"strategy’s getCurrentLocks method through the type-erased closure."}],"type":"paragraph"},{"text":"Type Safety","anchor":"Type-Safety","level":2,"type":"heading"},{"inlineContent":[{"text":"While the strategy type is erased, the lock information types are preserved","type":"text"},{"text":" ","type":"text"},{"text":"through the protocol’s associated type requirement.","type":"text"}],"type":"paragraph"},{"text":"Thread Safety","anchor":"Thread-Safety","level":2,"type":"heading"},{"inlineContent":[{"text":"The operation provides a consistent snapshot at the time of the call,","type":"text"},{"text":" ","type":"text"},{"text":"but the actual lock state may change immediately after.","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanInfo":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"title":"LockmanInfo","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmaninfo"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","title":"getCurrentLocks()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"type":"topic","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"url":"\/documentation\/lockman\/anylockmanboundaryid","kind":"symbol","title":"AnyLockmanBoundaryId","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"title":"AnyLockmanStrategy"}}}