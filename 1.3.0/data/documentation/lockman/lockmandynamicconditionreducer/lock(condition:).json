{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/lock(condition:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/Reducer-Implementations"]]},"abstract":[{"text":"Applies dynamic lock management to this reducer with conditional evaluation.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","text":"LockmanResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A23DynamicConditionReducerV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer","text":"LockmanDynamicConditionReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function that evaluates the current state and action"},{"type":"text","text":" "},{"type":"text","text":"to determine if a lock should be acquired."}]}],"name":"condition"}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"LockmanDynamicConditionReducer","type":"codeVoice"},{"text":" reducer that evaluates conditions before acquiring locks","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This method enables dynamic lock condition evaluation based on the current state and action,","type":"text"},{"text":" ","type":"text"},{"text":"allowing for fine-grained control over when locks should be acquired.","type":"text"}],"type":"paragraph"},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"This method wraps the reducer with a "},{"type":"codeVoice","code":"LockmanDynamicConditionReducer"},{"type":"text","text":" that provides two levels of lock condition control:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Reducer-level","type":"text"}],"type":"strong"},{"type":"text","text":": Condition specified in this method that applies to all actions"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Action-level","type":"text"}]},{"text":": Condition specified per ","type":"text"},{"code":"lock","type":"codeVoice"},{"text":" call for specific actions within the reducer","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Example","level":2,"type":"heading","text":"Example"},{"code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    switch action {","    case .purchase(let amount):","      return self.lock(","        state: state,","        action: action,","        operation: { send in","          \/\/ Purchase operation","        },","        lockAction: PurchaseAction(),","        boundaryId: CancelID.payment,","        lockCondition: { state, _ in","          \/\/ Action-level condition","          guard state.balance >= amount else {","            return .cancel(InsufficientFundsError())","          }","          return .success","        }","      )","    }","  }","  .lock { state, _ in","    \/\/ Reducer-level condition","    guard state.isAuthenticated else {","      return .cancel(NotAuthenticatedError())","    }","    return .success","  }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionreducer\/lock(condition:)"]}],"sections":[],"metadata":{"extendedModule":"ComposableArchitecture","externalID":"s:22ComposableArchitecture7ReducerP7LockmanE4lock9conditionAD0d16DynamicConditionC0Vy5StateQz6ActionQzGAD0D6ResultOAJ_ALtYbc_ts8SendableALRQsApJRQrlF::SYNTHESIZED::s:7Lockman0A23DynamicConditionReducerV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionReducer","preciseIdentifier":"s:7Lockman0A23DynamicConditionReducerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","title":"lock(condition:)","modules":[{"name":"Lockman","relatedModules":["ComposableArchitecture"]}],"role":"symbol"},"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionReducer","kind":"identifier"}],"title":"LockmanDynamicConditionReducer","url":"\/documentation\/lockman\/lockmandynamicconditionreducer","role":"symbol","abstract":[{"text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"LockmanDynamicConditionReducer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer"},"doc://Lockman/documentation/Lockman/LockmanResult":{"title":"LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanresult","navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/lock(condition:)":{"title":"lock(condition:)","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/lock(condition:)","abstract":[{"type":"text","text":"Applies dynamic lock management to this reducer with conditional evaluation."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionReducer","preciseIdentifier":"s:7Lockman0A23DynamicConditionReducerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/lock(condition:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/Reducer-Implementations":{"kind":"article","role":"collectionGroup","title":"Reducer Implementations","url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/reducer-implementations","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/Reducer-Implementations","abstract":[]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman"}}}