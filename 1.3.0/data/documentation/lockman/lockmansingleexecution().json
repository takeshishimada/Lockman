{"abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"roleHeading":"Macro","title":"LockmanSingleExecution()","externalID":"s:7Lockman0A15SingleExecutionyycfm","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"text":"()","kind":"text"}],"modules":[{"name":"Lockman"}],"symbolKind":"macro","role":"symbol"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","text":"LockmanSingleExecutionAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}],"languages":["swift"]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol conformance to "},{"code":"LockmanSingleExecutionAction","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"actionName","type":"codeVoice"},{"text":" property that returns the enum case name as a String","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Important","type":"text"}]},{"type":"text","text":": You must implement the "},{"code":"lockmanInfo","type":"codeVoice"},{"type":"text","text":" property to specify the execution mode:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".none","type":"codeVoice"},{"text":": No exclusive execution (always allows locks)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".boundary"},{"type":"text","text":": Only one action per boundary at a time (default behavior)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".action","type":"codeVoice"},{"text":": Only one instance of the same actionId at a time","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .run { send in","          \/\/ async work","        }","        .lock(","          action: .login,","          boundaryId: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecution()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"url":"\/documentation\/lockman\/lockmansingleexecution()","title":"LockmanSingleExecution()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for single execution locking behavior."}],"type":"topic","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"navigatorTitle":[{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","abstract":[{"text":"A specialized ","type":"text"},{"code":"LockmanAction","type":"codeVoice"},{"text":" for single-execution locking semantics.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionaction","title":"LockmanSingleExecutionAction","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionAction","kind":"identifier"}]}}}