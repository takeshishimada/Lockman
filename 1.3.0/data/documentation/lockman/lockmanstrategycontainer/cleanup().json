{"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC7cleanUpyyF","modules":[{"name":"Lockman"}],"title":"cleanUp()"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method iterates through all registered strategies and calls their"},{"type":"text","text":" "},{"code":"cleanUp()","type":"codeVoice"},{"type":"text","text":" method to clear any internal state. Useful for application"},{"type":"text","text":" "},{"type":"text","text":"shutdown or global reset scenarios."}],"type":"paragraph"},{"type":"heading","text":"Error Handling","level":2,"anchor":"Error-Handling"},{"inlineContent":[{"type":"text","text":"If any strategyâ€™s cleanup operation fails, the error is logged but"},{"type":"text","text":" "},{"type":"text","text":"cleanup continues for remaining strategies to ensure best-effort cleanup."}],"type":"paragraph"},{"type":"heading","text":"Complexity","level":2,"anchor":"Complexity"},{"inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" on all registered strategies."}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp()":{"title":"cleanUp()","url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()","role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","abstract":[{"type":"text","text":"Invokes "},{"code":"cleanUp()","type":"codeVoice"},{"type":"text","text":" on all registered strategies."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","role":"symbol","title":"LockmanStrategyContainer","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}]}}}