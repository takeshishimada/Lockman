{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanconcurrencylimited()"]}],"metadata":{"title":"LockmanConcurrencyLimited()","externalID":"s:7Lockman0A18ConcurrencyLimitedyycfm","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimited"},{"kind":"text","text":"()"}],"roleHeading":"Macro","role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"macro"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()"},"sections":[],"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","text":"LockmanConcurrencyLimitedAction","preciseIdentifier":"s:7Lockman0A24ConcurrencyLimitedActionP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"type":"codeVoice","code":"LockmanConcurrencyLimitedAction"}]}]},{"content":[{"inlineContent":[{"code":"actionName","type":"codeVoice"},{"text":" property that returns the enum case name as a String","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"type":"codeVoice","code":"strategyId"},{"type":"text","text":" implementation is provided by the protocol"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important"}]},{"text":": You must implement the ","type":"text"},{"code":"lockmanInfo","type":"codeVoice"},{"text":" property to specify concurrency limits:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Using a predefined concurrency group: ","type":"text"},{"code":".init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Using direct limit: ","type":"text"},{"code":".init(actionId: actionName, .limited(3))","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using unlimited: ","type":"text"},{"code":".init(actionId: actionName, .unlimited)","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Define your concurrency groups","enum MyConcurrencyGroup: LockmanConcurrencyGroup {","  case apiRequests","  case fileOperations","  case uiUpdates","","  var id: String {","    switch self {","    case .apiRequests: return \"api_requests\"","    case .fileOperations: return \"file_operations\"","    case .uiUpdates: return \"ui_updates\"","    }","  }","","  var limit: LockmanConcurrencyLimit {","    switch self {","    case .apiRequests: return .limited(3)","    case .fileOperations: return .limited(2)","    case .uiUpdates: return .unlimited","    }","  }","}","","@Reducer","struct MyFeature {","  @LockmanConcurrencyLimited","  enum Action {","    case fetchUserProfile(User.ID)","    case uploadFile(File)","    case refreshUI","","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","      switch self {","      case .fetchUserProfile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","      case .uploadFile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.fileOperations)","      case .refreshUI:","        \/\/ Direct unlimited","        return .init(actionId: actionName, .unlimited)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .fetchUserProfile(let userId):","        return .run { send in","          \/\/ Only 3 concurrent API requests allowed","          let profile = try await api.fetchProfile(userId)","          await send(.profileFetched(profile))","        }","        .lock(","          action: .fetchUserProfile(userId),","          boundaryId: \"fetch-profile-\\(userId)\"","        )","      \/\/ ...","      }","    }","  }","}"]}]}],"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimited()":{"role":"symbol","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimited"},{"kind":"text","text":"()"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimited()","kind":"symbol","title":"LockmanConcurrencyLimited()","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedAction":{"abstract":[{"text":"Protocol for actions that support concurrency limiting.","type":"text"}],"kind":"symbol","title":"LockmanConcurrencyLimitedAction","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedaction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}]}}}