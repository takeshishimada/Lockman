{"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"]},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)"]},{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()"]}],"metadata":{"externalID":"s:7Lockman03AnyA8StrategyV","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"symbolKind":"struct","title":"AnyLockmanStrategy","modules":[{"name":"Lockman"}],"roleHeading":"Structure"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Purpose","type":"heading","level":2,"anchor":"Purpose"},{"inlineContent":[{"type":"codeVoice","code":"AnyLockmanStrategy"},{"type":"text","text":" solves the fundamental problem of storing different concrete"},{"type":"text","text":" "},{"type":"text","text":"strategy implementations in the same collection. Without type erasure, you cannot"},{"type":"text","text":" "},{"type":"text","text":"store "},{"type":"codeVoice","code":"LockmanSingleExecutionStrategy"},{"type":"text","text":" and "},{"type":"codeVoice","code":"LockmanPriorityBasedStrategy"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"text":"same array, even though they both conform to ","type":"text"},{"code":"LockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Key Benefits","type":"heading","level":2,"anchor":"Key-Benefits"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Heterogeneous Collections"}]},{"type":"text","text":": Store different strategy implementations together"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Runtime Strategy Selection","type":"text"}]},{"type":"text","text":": Choose strategies dynamically based on conditions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"API Boundaries"}],"type":"strong"},{"text":": Hide concrete strategy types from public interfaces","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Dependency Injection"}],"type":"strong"},{"type":"text","text":": Enable flexible strategy registration and resolution"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Universal Compatibility","type":"text"}],"type":"strong"},{"text":": Support both class and struct strategy implementations","type":"text"}],"type":"paragraph"}]}]},{"text":"Type Safety Guarantees","type":"heading","level":2,"anchor":"Type-Safety-Guarantees"},{"inlineContent":[{"text":"While the concrete strategy type is erased, type safety for lock information ","type":"text"},{"code":"I","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is preserved at the ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":" level. This means you cannot accidentally","type":"text"},{"text":" ","type":"text"},{"text":"use ","type":"text"},{"code":"LockmanSingleExecutionInfo","type":"codeVoice"},{"text":" with a priority-based strategy wrapper.","type":"text"}],"type":"paragraph"},{"text":"Performance Considerations","type":"heading","level":2,"anchor":"Performance-Considerations"},{"inlineContent":[{"type":"text","text":"Type erasure introduces a small runtime overhead due to function pointer indirection."},{"type":"text","text":" "},{"type":"text","text":"However, this cost is typically negligible compared to the actual locking operations"},{"type":"text","text":" "},{"type":"text","text":"and is justified by the flexibility gained."}],"type":"paragraph"}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(id:info:)":{"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"title":"unlock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","title":"cleanUp()","type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"role":"symbol"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"title":"init(_:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","abstract":[{"text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation.","type":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Returns current locks information for debugging."}],"url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(id:info:)":{"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","title":"lock(id:info:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"url":"\/documentation\/lockman\/lockmaninfo","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"type":"topic","kind":"symbol","title":"LockmanInfo"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/strategyId":{"abstract":[{"text":"The identifier for this type-erased strategy.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/strategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId","kind":"symbol","title":"strategyId","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/makeStrategyId()":{"title":"makeStrategyId()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/makestrategyid()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for the type-erased strategy."}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(id:info:)":{"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and information.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","kind":"symbol","title":"canLock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}]}}}