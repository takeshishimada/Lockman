{"variants":[{"paths":["\/documentation\/lockman\/boundaryoverview"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"article","metadata":{"roleHeading":"Article","title":"Boundary","role":"article","modules":[{"name":"Lockman"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"seeAlsoSections":[{"generated":true,"anchor":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"title":"Essentials"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A Boundary is the "},{"type":"strong","inlineContent":[{"type":"text","text":"exclusive control boundary"}]},{"type":"text","text":" in Lockman. Lockman uses TCA’s CancelID as this boundary to control action execution."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Specify CancelID as boundary with withLock","return .withLock(","    operation: { send in","        \/\/ Processing","    },","    lockFailure: { error, send in","        \/\/ Processing when already running within the same boundary","    },","    action: action,","    cancelID: CancelID.userAction  \/\/ This CancelID functions as a Boundary",")"],"type":"codeListing"},{"inlineContent":[{"text":"Using CancelID as a boundary provides the following benefits:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Natural integration with TCA","type":"text"}]},{"type":"text","text":" - Leverages existing TCA mechanisms"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Clear boundary definition"}]},{"type":"text","text":" - CancelID clearly defines the scope of exclusive control"}],"type":"paragraph"}]}],"type":"orderedList"},{"text":"Boundary Specifications","anchor":"Boundary-Specifications","level":2,"type":"heading"},{"text":"1. No exclusive control across boundaries","anchor":"1-No-exclusive-control-across-boundaries","level":3,"type":"heading"},{"inlineContent":[{"text":"Exclusive control between different Boundaries is not possible:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ ❌ Not possible: Control save and load simultaneously","case .saveButtonTapped:","    \/\/ Control only within CancelID.save boundary","    return .withLock(..., cancelID: CancelID.save)","    ","case .loadButtonTapped:","    \/\/ Control only within CancelID.load boundary (independent from save)","    return .withLock(..., cancelID: CancelID.load)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Since these are treated as separate boundaries, load can be executed even while save is running."}],"type":"paragraph"},{"text":"2. Only one Boundary per action","anchor":"2-Only-one-Boundary-per-action","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot specify multiple Boundaries for a single action:"}]},{"code":["\/\/ ❌ Not possible: Specify multiple Boundaries simultaneously","return .withLock(","    operation: { send in \/* ... *\/ },","    lockFailure: { error, send in \/* ... *\/ },","    action: action,","    cancelID: [CancelID.save, CancelID.validate]  \/\/ Multiple specification not allowed",")"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you want to control multiple processes simultaneously, you need to define a common Boundary:","type":"text"}]},{"code":["\/\/ ✅ Correct approach: Use a common boundary","enum CancelID {","    case fileOperation  \/\/ Common boundary including save, load, validate","}","","case .saveButtonTapped, .loadButtonTapped, .validateButtonTapped:","    return .withLock(..., cancelID: CancelID.fileOperation)"],"syntax":"swift","type":"codeListing"},{"text":"Summary","type":"heading","anchor":"Summary","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"By setting appropriate boundaries, you can achieve both application stability and responsiveness."}]}]}],"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/GettingStarted":{"title":"Getting Started","kind":"article","url":"\/documentation\/lockman\/gettingstarted","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","role":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}]},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"kind":"article","title":"Debugging Guide","url":"\/documentation\/lockman\/debuggingguide","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","role":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}]},"doc://Lockman/documentation/Lockman/Configuration":{"title":"Configuration","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","url":"\/documentation\/lockman\/configuration","role":"article","kind":"article","abstract":[{"text":"Configure Lockman for your application’s needs.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"url":"\/documentation\/lockman\/choosingstrategy","title":"Choosing a Strategy","role":"article","kind":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy"},"doc://Lockman/documentation/Lockman/Lock":{"type":"topic","title":"Lock","abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}],"url":"\/documentation\/lockman\/lock","role":"article","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"role":"article","kind":"article","type":"topic","url":"\/documentation\/lockman\/errorhandling","title":"Error Handling","abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling"},"doc://Lockman/documentation/Lockman/Unlock":{"url":"\/documentation\/lockman\/unlock","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"kind":"article","role":"article","title":"Unlock"}}}