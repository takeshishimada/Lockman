{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method clears all internal lock state managed by the strategy,"},{"type":"text","text":" "},{"type":"text","text":"effectively resetting it to its initial state. Use this for:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Application shutdown sequences","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite cleanup between tests"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Global system resets during development","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Emergency cleanup scenarios","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Implementation-Guidelines","type":"heading","text":"Implementation Guidelines","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should remove all tracked locks regardless of boundary"}]}]},{"content":[{"inlineContent":[{"text":"Should not fail even if no locks are currently held","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Should be safe to call multiple times","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"cleanUp()","modules":[{"name":"Lockman"}],"required":true,"role":"symbol","externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"symbolKind":"method"},"kind":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"required":true,"title":"cleanUp()","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic"}}}