{"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo"},{"kind":"text","text":"]]"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dictionary mapping boundary IDs to their active lock information"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method provides a snapshot of all currently held locks managed by this strategy."},{"type":"text","text":" "},{"type":"text","text":"The returned dictionary maps boundary identifiers to arrays of lock information,"},{"type":"text","text":" "},{"type":"text","text":"allowing debug tools to display the current lock state."}]},{"type":"heading","level":2,"text":"Implementation Guidelines","anchor":"Implementation-Guidelines"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should return a snapshot of current state (not a live reference)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should include all active locks across all boundaries"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The returned lock info should be the same instances passed to ","type":"text"},{"code":"lock","type":"codeVoice"}]}]}]},{"type":"heading","level":2,"text":"Thread Safety","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method may be called while locks are being acquired\/released,"},{"type":"text","text":" "},{"type":"text","text":"so implementations must handle concurrent access appropriately."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","interfaceLanguage":"swift"},"metadata":{"required":true,"role":"symbol","title":"getCurrentLocks()","modules":[{"name":"Lockman"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7Lockman0A8StrategyP15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"kind":"symbol","sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanInfo":{"url":"\/documentation\/lockman\/lockmaninfo","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"type":"topic","kind":"symbol","title":"LockmanInfo"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"type":"topic","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"url":"\/documentation\/lockman\/anylockmanboundaryid","role":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":", allowing heterogeneous boundary IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"title":"AnyLockmanBoundaryId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","kind":"symbol"}}}