{"kind":"symbol","metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"title":"hash(into:)","externalID":"s:7Lockman03AnyA10BoundaryIdV4hash4intoys6HasherVz_tF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"symbolKind":"method","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/hash(into:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"abstract":[{"type":"text","text":"Generates hash values that include type information to prevent"},{"type":"text","text":" "},{"type":"text","text":"different boundary ID types with identical values from colliding."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"hasher","content":[{"inlineContent":[{"type":"text","text":"The hasher to use when combining the components of this instance"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Hash Collision Prevention","type":"heading","level":2,"anchor":"Hash-Collision-Prevention"},{"type":"paragraph","inlineContent":[{"text":"Since ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":" includes type information in its hash, two different","type":"text"},{"text":" ","type":"text"},{"text":"types with the same value will produce different hash values, preventing","type":"text"},{"text":" ","type":"text"},{"text":"unintended collisions in hash-based collections.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/lockman\/anylockmanboundaryid\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"url":"\/documentation\/lockman\/anylockmanboundaryid","role":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":", allowing heterogeneous boundary IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"title":"AnyLockmanBoundaryId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyLockmanBoundaryId","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/hash(into:)":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/hash(into:)","type":"topic","abstract":[{"type":"text","text":"Generates hash values that include type information to prevent"},{"type":"text","text":" "},{"type":"text","text":"different boundary ID types with identical values from colliding."}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"title":"hash(into:)"}}}