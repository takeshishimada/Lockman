{"sections":[],"metadata":{"roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"title":"LockmanConcurrencyLimited()","role":"symbol","externalID":"s:7Lockman0A18ConcurrencyLimitedyycfm","symbolKind":"macro","modules":[{"name":"Lockman"}]},"abstract":[{"text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","text":"LockmanConcurrencyLimitedAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","preciseIdentifier":"s:7Lockman0A24ConcurrencyLimitedActionP"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimited"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanConcurrencyLimitedAction"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"actionName","type":"codeVoice"},{"text":" property that returns the enum case name as a String","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"code":"strategyId","type":"codeVoice"},{"type":"text","text":" implementation is provided by the protocol"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important"}]},{"text":": You must implement the ","type":"text"},{"type":"codeVoice","code":"lockmanInfo"},{"text":" property to specify concurrency limits:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Using a predefined concurrency group: "},{"type":"codeVoice","code":".init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using direct limit: ","type":"text"},{"code":".init(actionId: actionName, .limited(3))","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Using unlimited: ","type":"text"},{"code":".init(actionId: actionName, .unlimited)","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Example usage with TCA:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Define your concurrency groups","enum MyConcurrencyGroup: LockmanConcurrencyGroup {","  case apiRequests","  case fileOperations","  case uiUpdates","","  var id: String {","    switch self {","    case .apiRequests: return \"api_requests\"","    case .fileOperations: return \"file_operations\"","    case .uiUpdates: return \"ui_updates\"","    }","  }","","  var limit: LockmanConcurrencyLimit {","    switch self {","    case .apiRequests: return .limited(3)","    case .fileOperations: return .limited(2)","    case .uiUpdates: return .unlimited","    }","  }","}","","@Reducer","struct MyFeature {","  @LockmanConcurrencyLimited","  enum Action {","    case fetchUserProfile(User.ID)","    case uploadFile(File)","    case refreshUI","","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","      switch self {","      case .fetchUserProfile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","      case .uploadFile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.fileOperations)","      case .refreshUI:","        \/\/ Direct unlimited","        return .init(actionId: actionName, .unlimited)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .fetchUserProfile(let userId):","        return .withLock(","          operation: { send in","            \/\/ Only 3 concurrent API requests allowed","            let profile = try await api.fetchProfile(userId)","            await send(.profileFetched(profile))","          },","          action: .fetchUserProfile(userId),","          cancelID: \"fetch-profile-\\(userId)\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanconcurrencylimited()"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimited()":{"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior."}],"title":"LockmanConcurrencyLimited()","url":"\/documentation\/lockman\/lockmanconcurrencylimited()","role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimited"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedAction":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Protocol for actions that support concurrency limiting."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","role":"symbol","navigatorTitle":[{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"title":"LockmanConcurrencyLimitedAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedaction"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"}}}