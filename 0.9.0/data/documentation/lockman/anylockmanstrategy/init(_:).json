{"metadata":{"role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Initializer","externalID":"s:7Lockman03AnyA8StrategyVyACyxGqd__c1IQyd__RszAA0aC0Rd__lufc","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"symbolKind":"init"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"strategy","content":[{"inlineContent":[{"text":"A concrete strategy conforming to ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This initializer performs type erasure by capturing the concrete strategy’s methods"},{"type":"text","text":" "},{"type":"text","text":"as closures. The concrete strategy’s lifetime is preserved through these closures,"},{"type":"text","text":" "},{"type":"text","text":"ensuring that the strategy remains valid for the lifetime of this wrapper."}],"type":"paragraph"},{"text":"Type Safety","level":2,"anchor":"Type-Safety","type":"heading"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"where S.I == I","type":"codeVoice"},{"text":" constraint ensures that the concrete strategy’s lock information","type":"text"},{"text":" ","type":"text"},{"text":"type matches this wrapper’s lock information type, maintaining type safety at compile time.","type":"text"}],"type":"paragraph"},{"text":"Memory Management","level":2,"anchor":"Memory-Management","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For class-based strategies: The strategy instance is retained by the closures"}]}]},{"content":[{"inlineContent":[{"text":"For struct-based strategies: The strategy is copied into the closures","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Both approaches ensure proper lifetime management without memory leaks"}]}]}],"type":"unorderedList"},{"text":"Performance Notes","level":2,"anchor":"Performance-Notes","type":"heading"},{"inlineContent":[{"text":"The type erasure process happens once during initialization. Subsequent method calls","type":"text"},{"text":" ","type":"text"},{"text":"have minimal overhead (single function pointer indirection).","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"title":"init(_:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","abstract":[{"text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation.","type":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"kind":"symbol","title":"I","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}],"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/i"}}}