{"sections":[],"abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier for which the lock should be released"}]}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The same lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" that was used when acquiring the lock"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method must be called with the exact same parameters that were used","type":"text"},{"text":" ","type":"text"},{"text":"when acquiring the lock. The implementation delegates to the concrete strategy’s","type":"text"},{"text":" ","type":"text"},{"text":"unlock logic, which typically uses the lock info’s ","type":"text"},{"type":"codeVoice","code":"uniqueId"},{"text":" for precise identification.","type":"text"}]},{"type":"heading","text":"Parameter Matching Requirements","anchor":"Parameter-Matching-Requirements","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Boundary ID","type":"text"}]},{"type":"text","text":": Must match the ID used during lock acquisition"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Lock Info"}],"type":"strong"},{"type":"text","text":": Must be the same instance (same "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":") used during acquisition"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Strategy Consistency","type":"text"}],"type":"strong"},{"text":": Must be called on the same strategy instance that acquired the lock","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Error Recovery","anchor":"Error-Recovery","level":2},{"type":"paragraph","inlineContent":[{"text":"If called with mismatched parameters, the concrete strategy may:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Silently ignore the unlock request (defensive programming)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Log a warning for debugging purposes"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Throw an error in debug builds"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior depends on the concrete strategy’s implementation."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"metadata":{"externalID":"s:7Lockman03AnyA8StrategyV6unlock2id4infoyqd___xtSHRd__s8SendableRd__lF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Lockman"}],"title":"unlock(id:info:)"},"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(id:info:)":{"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"title":"unlock(id:info:)","kind":"symbol"}}}