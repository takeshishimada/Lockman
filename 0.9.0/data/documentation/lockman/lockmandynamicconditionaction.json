{"abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","preciseIdentifier":"s:7Lockman0A6ActionP","text":"LockmanAction"}]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming types can create lock info with custom conditions that are evaluated at runtime."}]},{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"codeListing","code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .failure(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"syntax":"swift"}]}],"metadata":{"roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"externalID":"s:7Lockman0A22DynamicConditionActionP","title":"LockmanDynamicConditionAction","role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}]},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"type":"inheritsFrom"}],"sections":[],"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"generated":true}],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanAction":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","type":"topic","url":"\/documentation\/lockman\/lockmanaction","abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanAction"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanAction"}],"title":"LockmanAction"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","url":"\/documentation\/lockman\/lockmandynamicconditionaction","title":"LockmanDynamicConditionAction","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","type":"topic","title":"actionName","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionName"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"required":true,"abstract":[{"text":"The name of the action, typically the enum case name.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"required":true,"defaultImplementations":1,"type":"topic","title":"with(condition:)","kind":"symbol","abstract":[{"text":"Creates lock info with a custom condition.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"}}}