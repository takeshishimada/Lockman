{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}]},{"type":"heading","level":2,"text":"Strategy Types","anchor":"Strategy-Types"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Single Execution"}],"type":"strong"},{"text":": Prevents concurrent execution of the same action","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Priority-Based"}],"type":"strong"},{"text":": Allows higher priority actions to preempt lower priority ones","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composite"}]},{"type":"text","text":": Combines multiple strategies for complex coordination"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Implementation Guidelines","anchor":"Implementation-Guidelines"},{"type":"paragraph","inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"heading","level":2,"text":"Thread Safety","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}]},{"type":"heading","level":2,"text":"Example Implementation","anchor":"Example-Implementation"},{"type":"codeListing","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"metadata":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol","externalID":"s:7Lockman0A8StrategyP","symbolKind":"protocol","modules":[{"name":"Lockman"}],"title":"LockmanStrategy","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}]},"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"generated":true,"anchor":"Associated-Types"},{"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods"}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Lockman\/s8SendableP"],"kind":"relationships"},{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"kind":"relationships"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"kind":"symbol","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","type":"topic","role":"symbol","title":"strategyId","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"kind":"symbol","required":true,"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","title":"lock(id:info:)"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"type":"topic","kind":"symbol","role":"symbol","title":"LockmanPriorityBasedStrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy2"}],"role":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}],"title":"LockmanCompositeStrategy2","url":"\/documentation\/lockman\/lockmancompositestrategy2","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy2"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"type":"topic","title":"LockmanConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","title":"makeStrategyId()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"required":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"title":"LockmanSingleExecutionStrategy","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy3","navigatorTitle":[{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"title":"LockmanCompositeStrategy3","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","title":"LockmanDynamicConditionStrategy","role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"kind":"symbol","title":"I","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}],"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/i"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"type":"topic","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)","role":"symbol","title":"unlock(id:info:)","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"required":true,"title":"cleanUp()","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","required":true,"type":"topic","role":"symbol","title":"canLock(id:info:)","kind":"symbol","abstract":[{"type":"text","text":"Checks if a lock can be acquired without actually acquiring it."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"title":"LockmanCompositeStrategy5","role":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy5"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","role":"symbol","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","title":"LockmanGroupCoordinationStrategy"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmancompositestrategy4","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","title":"LockmanCompositeStrategy4","kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}],"role":"symbol"}}}