{"metadata":{"externalID":"s:7Lockman0A24DynamicConditionStrategyC","modules":[{"name":"Lockman"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"roleHeading":"Class","title":"LockmanDynamicConditionStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"LockmanDynamicConditionStrategy"},{"type":"text","text":" allows you to define arbitrary locking conditions"},{"type":"text","text":" "},{"type":"text","text":"using closures that are evaluated when the lock is requested. This provides maximum"},{"type":"text","text":" "},{"type":"text","text":"flexibility for complex business logic scenarios."}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"syntax":"swift","type":"codeListing","code":["\/\/ Business logic condition with custom error","struct PriorityTooLowError: Error {","    let priority: Int","}","","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .failure(PriorityTooLowError(priority: priority))","    }","    return .success","}"]},{"type":"heading","anchor":"Thread-Safety","level":2,"text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"text":"This strategy is thread-safe and uses ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" for managing concurrent access.","type":"text"}]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods"},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"],"anchor":"Type-Aliases"},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"],"anchor":"Type-Properties"},{"title":"Type Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"],"anchor":"Type-Methods"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships"}],"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","abstract":[],"title":"LockmanDynamicConditionStrategy.I","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"navigatorTitle":[{"text":"I","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"role":"symbol","title":"makeStrategyId()","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for the dynamic condition strategy."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all active locks across all boundaries."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","title":"cleanUp()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","title":"LockmanDynamicConditionStrategy","role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(id:info:)":{"abstract":[{"text":"Releases all locks with the same actionId.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(id:info:)","type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(id:info:)","title":"unlock(id:info:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(id:info:)":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(id:info:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(id:info:)","abstract":[{"type":"text","text":"Evaluates the dynamic condition to determine if a lock can be acquired."}],"title":"canLock(id:info:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}]},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"title":"strategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Creates a new dynamic condition strategy instance."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()","title":"init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"role":"symbol","kind":"symbol","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Shared singleton instance.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC","text":"LockmanDynamicConditionStrategy"}],"title":"shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(id:info:)":{"type":"topic","abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"title":"lock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(id:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all active locks for the specified boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(id:)","title":"cleanUp(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(id:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"}}}