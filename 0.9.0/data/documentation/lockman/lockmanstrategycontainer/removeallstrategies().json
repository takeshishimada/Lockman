{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method calls "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" on all strategies before removing them,"},{"type":"text","text":" "},{"type":"text","text":"ensuring proper cleanup. The container returns to its initial empty state."}],"type":"paragraph"},{"type":"heading","text":"Use Cases","level":2,"anchor":"Use-Cases"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite reset"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory management","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"Complexity","level":2,"anchor":"Complexity"},{"inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"title":"removeAllStrategies()","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","symbolKind":"method","role":"symbol","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()","role":"symbol","title":"removeAllStrategies()"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","kind":"symbol","type":"topic","title":"Lockman","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","title":"LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol"}}}