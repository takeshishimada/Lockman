{"sections":[],"seeAlsoSections":[{"anchor":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"title":"Essentials","generated":true}],"abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Unlocking in Lockman is a mechanism for properly releasing acquired locks. It ensures resource release and maintains system consistency in all situations, including after processing completion, error occurrence, or cancellation."}],"type":"paragraph"},{"level":2,"anchor":"Specifications","text":"Specifications","type":"heading"},{"level":3,"anchor":"Automatic-Release","text":"Automatic Release","type":"heading"},{"inlineContent":[{"type":"text","text":"When using "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference","isActive":true,"overridingTitle":"Reducer.lock","overridingTitleInlineContent":[{"type":"text","text":"Reducer.lock"}]},{"type":"text","text":", "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference","isActive":true,"overridingTitle":"Effect.lock","overridingTitleInlineContent":[{"text":"Effect.lock","type":"text"}]},{"type":"text","text":", or the auto-release version of "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference","isActive":true,"overridingTitle":"withLock","overridingTitleInlineContent":[{"type":"text","text":"withLock"}]},{"type":"text","text":", locks are automatically released at the following timings:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"On normal completion","type":"text"}],"type":"strong"},{"type":"text","text":": When processing completes normally"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"On exception"}],"type":"strong"},{"text":": When an error occurs","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"On cancellation"}]},{"text":": When processing is cancelled","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"On early return","type":"text"}],"type":"strong"},{"text":": When processing ends prematurely","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Automatic release is implemented using defer blocks, ensuring that locks are reliably released regardless of the termination pattern.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Manual-Release","text":"Manual Release","type":"heading"},{"inlineContent":[{"type":"text","text":"Manual release is only available in the manual release version of "},{"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitleInlineContent":[{"type":"text","text":"withLock"}],"overridingTitle":"withLock","isActive":true},{"type":"text","text":". When using "},{"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitleInlineContent":[{"type":"text","text":"Reducer.lock"}],"overridingTitle":"Reducer.lock","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitleInlineContent":[{"text":"Effect.lock","type":"text"}],"overridingTitle":"Effect.lock","isActive":true},{"type":"text","text":", locks are always automatically managed."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Important constraints:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You must call unlock() in all code paths","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Forgetting to call unlock() causes permanent lock acquisition state"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Proper release is necessary even in conditional branches and error handling"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Unlock object characteristics:"}]}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforms to the Sendable protocol, allowing it to be passed when calling other actions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Designed for use across multiple screens and actions","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Enables shared lock state and coordinated release between actions"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Release-Options","text":"Release Options","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Unlock execution timing can be controlled with LockmanUnlockOption:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"immediate","type":"text"}],"type":"strong"},{"type":"text","text":": Release immediately upon processing completion"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"mainRunLoop"}]},{"type":"text","text":": Release in the next main run loop cycle"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"transition"}]},{"type":"text","text":": Release after platform-specific screen transition animation completion"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"iOS: 0.35 seconds (push\/pop animation)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"macOS: 0.25 seconds (window and view animation)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tvOS: 0.4 seconds (focus-driven transition)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"watchOS: 0.3 seconds (page-based navigation)","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"delayed(TimeInterval)","type":"text"}],"type":"strong"},{"text":": Release after specified time","type":"text"}]}]}]},{"type":"heading","text":"Methods","level":2,"anchor":"Methods"},{"type":"heading","text":"Auto-release with Reducer.lock (Recommended)","level":3,"anchor":"Auto-release-with-Reducerlock-Recommended"},{"type":"codeListing","code":["var body: some ReducerOf<Self> {","    Reduce { state, action in","        switch action {","        case .startWork:","            return .run { send in","                try await someAsyncWork()","                await send(.completed)","                \/\/ Lock is automatically released here","            }","            .catch { error, send in","                await send(.failed(error))","                \/\/ Automatically released after error handling","            }","        }","    }","    .lock(","        boundaryId: CancelID.feature,","        unlockOption: .immediate  \/\/ Configure unlock timing","    )","}"],"syntax":"swift"},{"type":"heading","text":"Auto-release with Effect.lock","level":3,"anchor":"Auto-release-with-Effectlock"},{"type":"codeListing","code":["return .run { send in","    try await someAsyncWork()","    await send(.completed)","    \/\/ Lock is automatically released here","}",".catch { error, send in","    await send(.failed(error))","    \/\/ Automatically released after error handling","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition  \/\/ Configure unlock timing",")"],"syntax":"swift"},{"level":3,"anchor":"Auto-release-with-withLock","type":"heading","text":"Auto-release with withLock"},{"syntax":"swift","type":"codeListing","code":[".withLock(","  operation: { send in","    \/\/ Execute processing","    try await someAsyncWork()","    await send(.completed)","    \/\/ Lock is automatically released here","  },","  catch handler: { error, send in","    \/\/ Automatically released after error handling","    await send(.failed(error))","  },","  action: action,","  boundaryId: CancelID.feature",")"]},{"level":3,"anchor":"Manual-Release-Usage-Example","type":"heading","text":"Manual Release Usage Example"},{"inlineContent":[{"type":"text","text":"Basic usage example:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":[".withLock(","  operation: { send, unlock in","    try await firstOperation()","    ","    if shouldEarlyReturn {","      unlock() \/\/ Early release","      return","    }","    ","    try await secondOperation()","    unlock() \/\/ Required: Final release","  },","  catch handler: { error, send, unlock in","    \/\/ Error handling","    unlock() \/\/ Release on error too","    send(.failed(error))","  },","  action: action,","  boundaryId: cancelID",")"]},{"inlineContent":[{"type":"text","text":"Example of release in another screenâ€™s delegate:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":[".withLock(","  operation: { send, unlock in","    \/\/ Pass unlock object to another screen and transition","    send(.delegate(unlock: unlock))","  },","  action: action,","  boundaryId: cancelID",")","","\/\/ Receive and release on the delegate side","case .modal(.delegate(let unlock)):","  return .run { send in","    \/\/ Release after modal processing completion","    unlock()","  }"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/unlock"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"Lockman"}],"title":"Unlock","roleHeading":"Article","role":"article"},"references":{"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","url":"\/documentation\/lockman\/choosingstrategy","title":"Choosing a Strategy","kind":"article","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"role":"article"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","title":"Boundary","type":"topic","url":"\/documentation\/lockman\/boundaryoverview","role":"article"},"doc://Lockman/documentation/Lockman/Lock":{"abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}],"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","title":"Lock","type":"topic","url":"\/documentation\/lockman\/lock","role":"article"},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","url":"\/documentation\/lockman\/errorhandling","title":"Error Handling","kind":"article","abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"role":"article"},"doc://Lockman/documentation/Lockman/Configuration":{"type":"topic","role":"article","url":"\/documentation\/lockman\/configuration","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","abstract":[{"text":"Configure Lockman for your applicationâ€™s needs.","type":"text"}],"kind":"article","title":"Configuration"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide","kind":"article","abstract":[{"text":"Learn how to debug Lockman-related issues in your application.","type":"text"}],"role":"article"},"doc://Lockman/documentation/Lockman/GettingStarted":{"role":"article","kind":"article","title":"Getting Started","url":"\/documentation\/lockman\/gettingstarted","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","abstract":[{"text":"Learn how to integrate Lockman into your TCA application.","type":"text"}],"type":"topic"}}}