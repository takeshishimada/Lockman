{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer","preciseIdentifier":"s:7Lockman0A23DynamicConditionReducerV","text":"LockmanDynamicConditionReducer","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier","text":"State"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"condition","content":[{"inlineContent":[{"text":"Function that evaluates the current state and action","type":"text"},{"text":" ","type":"text"},{"text":"to determine if a lock should be acquired.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LockmanDynamicConditionReducer"},{"type":"text","text":" reducer that evaluates conditions before acquiring locks"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method enables dynamic lock condition evaluation based on the current state and action,","type":"text"},{"text":" ","type":"text"},{"text":"allowing for fine-grained control over when locks should be acquired.","type":"text"}]},{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method wraps the reducer with a "},{"type":"codeVoice","code":"LockmanDynamicConditionReducer"},{"type":"text","text":" that provides two levels of lock condition control:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Reducer-level"}],"type":"strong"},{"type":"text","text":": Condition specified in this method that applies to all actions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Action-level","type":"text"}]},{"type":"text","text":": Condition specified per "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" call for specific actions within the reducer"}]}]}]},{"text":"Example","anchor":"Example","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    switch action {","    case .purchase(let amount):","      return self.lock(","        state: state,","        action: action,","        operation: { send in","          \/\/ Purchase operation","        },","        lockAction: PurchaseAction(),","        boundaryId: CancelID.payment,","        lockCondition: { state, _ in","          \/\/ Action-level condition","          guard state.balance >= amount else {","            return .cancel(InsufficientFundsError())","          }","          return .success","        }","      )","    }","  }","  .lock { state, _ in","    \/\/ Reducer-level condition","    guard state.isAuthenticated else {","      return .cancel(NotAuthenticatedError())","    }","    return .success","  }","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/Reducer-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionreducer\/lock(condition:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/lock(condition:)"},"abstract":[{"type":"text","text":"Applies dynamic lock management to this reducer with conditional evaluation."}],"metadata":{"title":"lock(condition:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionReducer","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A23DynamicConditionReducerV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":">","kind":"text"}],"extendedModule":"ComposableArchitecture","symbolKind":"method","modules":[{"name":"Lockman","relatedModules":["ComposableArchitecture"]}],"roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture7ReducerP7LockmanE4lock9conditionAD0d16DynamicConditionC0Vy5StateQz6ActionQzGAD0D6ResultOAJ_ALtYbc_ts8SendableALRQsApJRQrlF::SYNTHESIZED::s:7Lockman0A23DynamicConditionReducerV"},"kind":"symbol","sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer":{"abstract":[{"type":"text","text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities."}],"type":"topic","title":"LockmanDynamicConditionReducer","navigatorTitle":[{"text":"LockmanDynamicConditionReducer","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionreducer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionReducer","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanResult":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"title":"LockmanResult","url":"\/documentation\/lockman\/lockmanresult","role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/Reducer-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"Reducer Implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/Reducer-Implementations","url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/reducer-implementations"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/lock(condition:)":{"url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/lock(condition:)","role":"symbol","abstract":[{"text":"Applies dynamic lock management to this reducer with conditional evaluation.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/lock(condition:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionReducer","preciseIdentifier":"s:7Lockman0A23DynamicConditionReducerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"State","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Action","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"lock(condition:)"},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"}}}