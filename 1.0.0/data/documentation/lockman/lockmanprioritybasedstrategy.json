{"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"anchor":"Type-Aliases","generated":true,"title":"Type Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"anchor":"Type-Properties","generated":true,"title":"Type Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"anchor":"Type-Methods","generated":true,"title":"Type Methods"}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy implements a sophisticated priority system that allows higher-priority"},{"type":"text","text":" "},{"type":"text","text":"actions to preempt lower-priority ones, while providing configurable concurrency"},{"type":"text","text":" "},{"type":"text","text":"behavior for actions of the same priority level."}]},{"level":2,"text":"Priority System Overview","anchor":"Priority-System-Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The strategy maintains a per-boundary collection of active ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instances and uses the priority hierarchy to determine execution precedence:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"High Priority","type":"text"}]},{"text":" (.high): Can cancel low\/none priority actions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Low Priority"}],"type":"strong"},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"No Priority","type":"text"}]},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Concurrency Behavior Logic","anchor":"Concurrency-Behavior-Logic","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" is called for same-priority actions, the strategy evaluates conflicts"},{"type":"text","text":" "},{"type":"text","text":"using the existing action’s concurrency behavior:"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"No Priority Actions","type":"text"}],"type":"strong"},{"text":": Always succeed (bypass priority system)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Priority vs Non-Priority","type":"text"}],"type":"strong"},{"text":": Priority actions always win","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Different Priority Levels"}]},{"type":"text","text":": Higher priority wins"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Same Priority Level","type":"text"}]},{"type":"text","text":": Apply existing action’s "},{"type":"codeVoice","code":"ConcurrencyBehavior"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Exclusive","type":"text"}]},{"type":"text","text":": Existing action continues, new action fails"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Replaceable"}]},{"type":"text","text":": Existing action is canceled, new action succeeds"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"orderedList"},{"level":2,"text":"Thread Safety","anchor":"Thread-Safety","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is thread-safe through the underlying "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" which provides"},{"type":"text","text":" "},{"type":"text","text":"synchronized access to the per-boundary lock collections."}]},{"level":2,"text":"Usage Examples","anchor":"Usage-Examples","type":"heading"},{"code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(boundaryId: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(boundaryId: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"type":"codeListing","syntax":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"roleHeading":"Class","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC","symbolKind":"class","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(boundaryId:)":{"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(boundaryid:)","kind":"symbol","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"title":"cleanUp(boundaryId:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"kind":"symbol","abstract":[{"text":"Creates a strategy identifier for the priority-based strategy.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","title":"makeStrategyId()","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(boundaryId:info:)":{"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(boundaryid:info:)","kind":"symbol","title":"lock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","role":"symbol","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(boundaryId:info:)":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)","abstract":[{"text":"Releases a previously acquired priority-based lock.","type":"text"}],"role":"symbol","title":"unlock(boundaryId:info:)","type":"topic"},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Creates a new priority-based strategy instance."}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","type":"topic","role":"symbol","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"I"}],"title":"LockmanPriorityBasedStrategy.I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"abstract":[{"type":"text","text":"Returns current locks information for debugging."}],"title":"getCurrentLocks()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"title":"cleanUp()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","text":"LockmanPriorityBasedStrategy","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"title":"shared"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","role":"symbol","kind":"symbol","type":"topic","title":"strategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(boundaryId:info:)":{"role":"symbol","title":"canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(boundaryid:info:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"abstract":[{"type":"text","text":"Evaluates whether a priority-based lock can be acquired."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","kind":"symbol"}}}