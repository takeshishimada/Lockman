{"metadata":{"externalID":"s:7Lockman0A15SingleExecutionyycfm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"macro","title":"LockmanSingleExecution()","role":"symbol","roleHeading":"Macro","modules":[{"name":"Lockman"}]},"abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","text":"LockmanSingleExecutionAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanSingleExecutionAction"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"actionName","type":"codeVoice"},{"type":"text","text":" property that returns the enum case name as a String"}]}]},{"content":[{"inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important"}],"type":"strong"},{"text":": You must implement the ","type":"text"},{"type":"codeVoice","code":"lockmanInfo"},{"text":" property to specify the execution mode:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":".none","type":"codeVoice"},{"text":": No exclusive execution (always allows locks)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".boundary"},{"text":": Only one action per boundary at a time (default behavior)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":".action","type":"codeVoice"},{"type":"text","text":": Only one instance of the same actionId at a time"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Example usage with TCA:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .login,","          boundaryId: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"]}]}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecution()"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","title":"LockmanSingleExecution()","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecution()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionAction"}],"title":"LockmanSingleExecutionAction","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionaction","abstract":[{"type":"text","text":"A specialized "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":" for single-execution locking semantics."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionAction"}],"type":"topic"}}}