{"metadata":{"role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"method","roleHeading":"Instance Method","title":"cleanUp()","externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUpyyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Clears all internal lock state, effectively resetting the strategy to its"},{"type":"text","text":" "},{"type":"text","text":"initial state. This operation affects all boundaries simultaneously."}]},{"type":"heading","level":2,"anchor":"Use-Cases","text":"Use Cases"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Global system resets during development"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}]}]}],"type":"unorderedList"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"title":"cleanUp()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"type":"topic"},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"kind":"symbol"}}}