{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Lockman"}],"title":"resolve(id:expecting:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":" "},{"kind":"internalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type = I.self) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"The strategy identifier to look up"}],"type":"paragraph"}]},{"name":"expecting","content":[{"inlineContent":[{"text":"The expected ","type":"text"},{"code":"LockmanInfo","type":"codeVoice"},{"text":" type (for type inference)","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" wrapping the registered strategy instance"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Returns the type-erased strategy instance that was registered with the given ID.","type":"text"},{"text":" ","type":"text"},{"text":"The returned ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"text":" provides the same interface as the original","type":"text"},{"text":" ","type":"text"},{"text":"strategy but with erased concrete type information.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LockmanRegistrationError.strategyNotRegistered"},{"type":"text","text":" if no strategy with this ID is registered"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Throws"},{"anchor":"Complexity","text":"Complexity","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"O(1) - Direct hash map lookup by ID"}],"type":"paragraph"},{"anchor":"Thread-Safety","text":"Thread Safety","type":"heading","level":2},{"inlineContent":[{"text":"Safe to call concurrently from multiple threads. Resolution is atomic.","type":"text"}],"type":"paragraph"},{"anchor":"Example","text":"Example","type":"heading","level":2},{"syntax":"swift","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"kind":"symbol","title":"LockmanStrategyContainer","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","type":"topic","kind":"symbol","title":"LockmanStrategyId","abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}]},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","role":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA8StrategyV","text":"AnyLockmanStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"resolve(id:expecting:)","kind":"symbol","abstract":[{"type":"text","text":"Resolves a registered strategy by its identifier."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)","type":"topic"}}}