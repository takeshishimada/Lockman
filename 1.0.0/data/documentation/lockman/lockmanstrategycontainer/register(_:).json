{"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Registers a concrete strategy instance using its own strategyId.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"text":"A concrete strategy conforming to ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"}]}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Convenience method that uses the strategy’s built-in ID property."},{"type":"text","text":" "},{"type":"text","text":"This is the preferred method for registering strategies as it ensures"},{"type":"text","text":" "},{"type":"text","text":"consistency between the strategy’s identity and its registration."}]},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"LockmanRegistrationError.strategyAlreadyRegistered"},{"text":" if this ID is already registered","type":"text"}]}],"style":"note"},{"text":"Example","level":2,"type":"heading","anchor":"Example"},{"syntax":"swift","type":"codeListing","code":["try container.register(LockmanSingleExecutionStrategy.shared)","\/\/ Uses strategy.strategyId automatically"]}],"kind":"content"}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"externalID":"s:7Lockman0A17StrategyContainerC8registeryyxKAA0aB0RzlF","title":"register(_:)","modules":[{"name":"Lockman"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/register(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/register(_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","abstract":[{"type":"text","text":"Registers a concrete strategy instance using its own strategyId."}],"title":"register(_:)","url":"\/documentation\/lockman\/lockmanstrategycontainer\/register(_:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"kind":"symbol","title":"LockmanStrategyContainer","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]}}}