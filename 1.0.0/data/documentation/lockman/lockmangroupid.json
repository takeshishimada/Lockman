{"abstract":[{"type":"text","text":"A group identifier used by Lockman strategies, combining "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"text","text":"to ensure unique and concurrent-safe keys."}],"metadata":{"role":"symbol","symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupId","kind":"identifier"}],"modules":[{"name":"Lockman"}],"navigatorTitle":[{"text":"LockmanGroupId","kind":"identifier"}],"roleHeading":"Type Alias","externalID":"s:7Lockman0A7GroupIda","title":"LockmanGroupId"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupId"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This type alias enables any type that is both ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" to be used","type":"text"},{"text":" ","type":"text"},{"text":"as a group identifier in coordination strategies.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Usage-Examples","type":"heading","text":"Usage Examples"},{"syntax":"swift","type":"codeListing","code":["\/\/ Using String as group ID","let stringGroupId: any LockmanGroupId = \"navigation\"","","\/\/ Using custom enum as group ID","enum AppGroupId: String, LockmanGroupId {","    case navigation","    case dataLoading","    case authentication","}","let enumGroupId: any LockmanGroupId = AppGroupId.navigation","","\/\/ Using struct as group ID","struct FeatureGroupId: LockmanGroupId {","    let feature: String","    let version: Int","}","let structGroupId: any LockmanGroupId = FeatureGroupId(feature: \"search\", version: 2)"]}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/lockmangroupid"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupId":{"role":"symbol","navigatorTitle":[{"text":"LockmanGroupId","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupid","title":"LockmanGroupId","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupId","kind":"identifier"}],"abstract":[{"type":"text","text":"A group identifier used by Lockman strategies, combining "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"text","text":"to ensure unique and concurrent-safe keys."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","type":"topic"}}}