{"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/anylockmanboundaryid\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"hasher","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The hasher to use when combining the components of this instance"}]}]}]},{"content":[{"level":2,"text":"Hash Collision Prevention","anchor":"Hash-Collision-Prevention","type":"heading"},{"inlineContent":[{"text":"Since ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":" includes type information in its hash, two different","type":"text"},{"text":" ","type":"text"},{"text":"types with the same value will produce different hash values, preventing","type":"text"},{"text":" ","type":"text"},{"text":"unintended collisions in hash-based collections.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Generates hash values that include type information to prevent","type":"text"},{"text":" ","type":"text"},{"text":"different boundary ID types with identical values from colliding.","type":"text"}],"metadata":{"symbolKind":"method","title":"hash(into:)","roleHeading":"Instance Method","externalID":"s:7Lockman03AnyA10BoundaryIdV4hash4intoys6HasherVz_tF","modules":[{"name":"Lockman"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/hash(into:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/hash(into:)":{"abstract":[{"type":"text","text":"Generates hash values that include type information to prevent"},{"type":"text","text":" "},{"type":"text","text":"different boundary ID types with identical values from colliding."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/hash(into:)","type":"topic","role":"symbol","kind":"symbol","title":"hash(into:)","url":"\/documentation\/lockman\/anylockmanboundaryid\/hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"title":"AnyLockmanBoundaryId","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid","type":"topic","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":", allowing heterogeneous boundary IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}]}}}