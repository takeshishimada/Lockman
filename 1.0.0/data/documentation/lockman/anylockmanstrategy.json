{"metadata":{"externalID":"s:7Lockman03AnyA8StrategyV","title":"AnyLockmanStrategy","roleHeading":"Structure","symbolKind":"struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"sections":[],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"]},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)"]},{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Purpose","anchor":"Purpose","level":2},{"type":"paragraph","inlineContent":[{"code":"AnyLockmanStrategy","type":"codeVoice"},{"type":"text","text":" solves the fundamental problem of storing different concrete"},{"type":"text","text":" "},{"type":"text","text":"strategy implementations in the same collection. Without type erasure, you cannot"},{"type":"text","text":" "},{"type":"text","text":"store "},{"code":"LockmanSingleExecutionStrategy","type":"codeVoice"},{"type":"text","text":" and "},{"code":"LockmanPriorityBasedStrategy","type":"codeVoice"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"same array, even though they both conform to "},{"code":"LockmanStrategy","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","text":"Key Benefits","anchor":"Key-Benefits","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Heterogeneous Collections","type":"text"}],"type":"strong"},{"type":"text","text":": Store different strategy implementations together"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Runtime Strategy Selection","type":"text"}],"type":"strong"},{"type":"text","text":": Choose strategies dynamically based on conditions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"API Boundaries","type":"text"}],"type":"strong"},{"text":": Hide concrete strategy types from public interfaces","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dependency Injection"}]},{"type":"text","text":": Enable flexible strategy registration and resolution"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Universal Compatibility"}],"type":"strong"},{"text":": Support both class and struct strategy implementations","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Type Safety Guarantees","anchor":"Type-Safety-Guarantees","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the concrete strategy type is erased, type safety for lock information "},{"type":"codeVoice","code":"I"},{"type":"text","text":" "},{"type":"text","text":"is preserved at the "},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"type":"text","text":" level. This means you cannot accidentally"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"LockmanSingleExecutionInfo"},{"type":"text","text":" with a priority-based strategy wrapper."}]},{"type":"heading","text":"Performance Considerations","anchor":"Performance-Considerations","level":2},{"type":"paragraph","inlineContent":[{"text":"Type erasure introduces a small runtime overhead due to function pointer indirection.","type":"text"},{"text":" ","type":"text"},{"text":"However, this cost is typically negligible compared to the actual locking operations","type":"text"},{"text":" ","type":"text"},{"text":"and is justified by the flexibility gained.","type":"text"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(boundaryId:info:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(boundaryId:info:)","type":"topic","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/lock(boundaryid:info:)","kind":"symbol","title":"lock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(boundaryId:)":{"role":"symbol","title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(boundaryid:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(boundaryId:)","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/makeStrategyId()":{"title":"makeStrategyId()","url":"\/documentation\/lockman\/anylockmanstrategy\/makestrategyid()","abstract":[{"type":"text","text":"Creates a strategy identifier for the type-erased strategy."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","role":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(_:)","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"role":"symbol","type":"topic","title":"unlock(boundaryId:info:)","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"type":"topic","kind":"symbol","title":"cleanUp()","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(boundaryId:info:)":{"url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and information.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/strategyId":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"kind":"symbol","title":"strategyId","role":"symbol","abstract":[{"type":"text","text":"The identifier for this type-erased strategy."}],"url":"\/documentation\/lockman\/anylockmanstrategy\/strategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"}}}