{"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"Dictionary mapping boundary IDs to their active lock information","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method provides a snapshot of all currently held locks managed by this strategy."},{"type":"text","text":" "},{"type":"text","text":"The returned dictionary maps boundary identifiers to arrays of lock information,"},{"type":"text","text":" "},{"type":"text","text":"allowing debug tools to display the current lock state."}],"type":"paragraph"},{"type":"heading","text":"Implementation Guidelines","level":2,"anchor":"Implementation-Guidelines"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should return a snapshot of current state (not a live reference)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should include all active locks across all boundaries"}]}]},{"content":[{"inlineContent":[{"text":"The returned lock info should be the same instances passed to ","type":"text"},{"type":"codeVoice","code":"lock"}],"type":"paragraph"}]}]},{"type":"heading","text":"Thread Safety","level":2,"anchor":"Thread-Safety"},{"inlineContent":[{"type":"text","text":"This method may be called while locks are being acquired\/released,"},{"type":"text","text":" "},{"type":"text","text":"so implementations must handle concurrent access appropriately."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()"]}],"metadata":{"required":true,"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"externalID":"s:7Lockman0A8StrategyP15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF","symbolKind":"method","title":"getCurrentLocks()","role":"symbol"},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"type":"topic","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","kind":"symbol","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"title":"AnyLockmanBoundaryId","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid","type":"topic","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":", allowing heterogeneous boundary IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}]},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","role":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo"},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"}}}