{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Lockman0A6ActionP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","kind":"typeIdentifier","text":"LockmanAction"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Conforming types can create lock info with custom conditions that are evaluated at runtime.","type":"text"}]},{"type":"heading","text":"Example","anchor":"Example","level":2},{"code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .cancel(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction"},"metadata":{"title":"LockmanDynamicConditionAction","externalID":"s:7Lockman0A22DynamicConditionActionP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"symbolKind":"protocol","role":"symbol","modules":[{"name":"Lockman"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","type":"topic","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo","kind":"typeIdentifier"}],"defaultImplementations":1,"title":"with(condition:)","abstract":[{"text":"Creates lock info with a custom condition.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"abstract":[{"type":"text","text":"The name of the action, typically the enum case name."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"actionName","type":"topic","required":true,"url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname"},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","url":"\/documentation\/lockman\/lockmandynamicconditionaction","kind":"symbol","abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"title":"LockmanDynamicConditionAction","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}]},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanAction":{"abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","navigatorTitle":[{"text":"LockmanAction","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanaction","type":"topic","role":"symbol","kind":"symbol","title":"LockmanAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanAction","kind":"identifier"}]}}}