{"metadata":{"externalID":"s:7Lockman03AnyA8StrategyV6unlock10boundaryId4infoyqd___xtSHRd__s8SendableRd__lF","title":"unlock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"parameters":[{"name":"boundaryId","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier for which the lock should be released"}]}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The same lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" that was used when acquiring the lock"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This method must be called with the exact same parameters that were used","type":"text"},{"text":" ","type":"text"},{"text":"when acquiring the lock. The implementation delegates to the concrete strategy’s","type":"text"},{"text":" ","type":"text"},{"text":"unlock logic, which typically uses the lock info’s ","type":"text"},{"type":"codeVoice","code":"uniqueId"},{"text":" for precise identification.","type":"text"}],"type":"paragraph"},{"text":"Parameter Matching Requirements","anchor":"Parameter-Matching-Requirements","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Boundary ID","type":"text"}],"type":"strong"},{"text":": Must match the ID used during lock acquisition","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Lock Info"}]},{"type":"text","text":": Must be the same instance (same "},{"code":"uniqueId","type":"codeVoice"},{"type":"text","text":") used during acquisition"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Strategy Consistency","type":"text"}],"type":"strong"},{"text":": Must be called on the same strategy instance that acquired the lock","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Error Recovery","anchor":"Error-Recovery","type":"heading","level":2},{"inlineContent":[{"text":"If called with mismatched parameters, the concrete strategy may:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Silently ignore the unlock request (defensive programming)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Log a warning for debugging purposes"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Throw an error in debug builds"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"The behavior depends on the concrete strategy’s implementation.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"role":"symbol","type":"topic","title":"unlock(boundaryId:info:)","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"}}}