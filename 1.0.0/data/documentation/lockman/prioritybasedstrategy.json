{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"variants":[{"paths":["\/documentation\/lockman\/prioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","interfaceLanguage":"swift"},"sections":[],"kind":"article","seeAlsoSections":[{"anchor":"Strategies","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"],"title":"Strategies"}],"abstract":[{"type":"text","text":"Control action execution based on priority levels."}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"PriorityBasedStrategy is a strategy that performs execution control based on priority. High-priority processing can interrupt low-priority processing to execute, allowing important processing to be handled preferentially.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is used in situations where high-urgency processing or control based on importance is required."}]},{"type":"heading","text":"Priority System","level":2,"anchor":"Priority-System"},{"type":"heading","text":"Priority Levels","level":3,"anchor":"Priority-Levels"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"high"}]},{"type":"text","text":" - High Priority"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Can interrupt all other priority processing","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"System-level emergency processing or important user operations","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"low","type":"text"}]},{"type":"text","text":" - Low Priority"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Can interrupt none priority processing","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Interrupted by high priority"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Regular background processing"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"none","type":"text"}]},{"text":" - No Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Bypasses priority system"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Not interrupted by other processing"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic processing or temporary disabling"}]}]}]},{"type":"heading","text":"Exclusive Execution Control","level":3,"anchor":"Exclusive-Execution-Control"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Within the same priority level, control is based on the exclusive execution behavior setting of existing processing:"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"exclusive","type":"text"}]},{"type":"text","text":" - Exclusive Execution"}]},{"code":["LockmanPriorityBasedInfo(","    actionId: \"payment\",","    priority: .high(.exclusive)",")"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rejects new processing of the same priority"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Protects important processing from interruption","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"replaceable","type":"text"}]},{"text":" - Replaceable Execution","type":"text"}]},{"code":["LockmanPriorityBasedInfo(","    actionId: \"search\", ","    priority: .high(.replaceable)",")"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can be interrupted by new processing of the same priority"}]}]},{"content":[{"inlineContent":[{"text":"Applied to search or update processing","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Usage","level":2,"anchor":"Usage"},{"type":"heading","text":"Basic Usage Example","level":3,"anchor":"Basic-Usage-Example"},{"code":["@LockmanPriorityBased","enum ViewAction {","    case emergencySync","    case normalSync","    case backgroundTask","    ","    var lockmanInfo: LockmanPriorityBasedInfo {","        switch self {","        case .emergencySync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        case .backgroundTask:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .none","            )","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Operation Examples","level":2,"anchor":"Operation-Examples"},{"type":"heading","text":"Interruption by Priority","level":3,"anchor":"Interruption-by-Priority"},{"code":["Time: 0s  - Low priority process starts    ‚Üí ‚úÖ Execute","Time: 2s  - High priority process request  ‚Üí ‚úÖ Execute (interrupts low process)","Time: 2s  - Low priority process           ‚Üí üõë Cancel","Time: 5s  - High priority process complete ‚Üí ‚úÖ Complete"],"type":"codeListing","syntax":null},{"type":"heading","text":"Control at Same Priority","level":3,"anchor":"Control-at-Same-Priority"},{"code":["\/\/ Exclusive setting case","Time: 0s  - high(.exclusive) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.exclusive) request ‚Üí ‚ùå Reject","Time: 3s  - First process completes  ‚Üí ‚úÖ Complete","Time: 4s  - high(.exclusive) request ‚Üí ‚úÖ Execute","","\/\/ Replaceable setting case","Time: 0s  - high(.replaceable) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.replaceable) request ‚Üí ‚úÖ Execute (interrupts previous)","Time: 1s  - First process              ‚Üí üõë Cancel"],"type":"codeListing","syntax":null},{"type":"heading","text":"Error Handling","level":2,"anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"text":"For errors that may occur with PriorityBasedStrategy and their solutions, please also refer to the common patterns on the ","type":"text"},{"overridingTitleInlineContent":[{"text":"Error Handling","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"reference","overridingTitle":"Error Handling","isActive":true},{"text":" page.","type":"text"}]},{"type":"heading","text":"Error Types","level":3,"anchor":"Error-Types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PriorityBasedStrategy uses two error types, both conforming to "},{"type":"codeVoice","code":"LockmanCancellationError"},{"type":"text","text":" protocol:"}]},{"type":"heading","text":"LockmanPriorityBasedBlockedError","level":4,"anchor":"LockmanPriorityBasedBlockedError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Occurs when a new action is blocked due to priority conflicts."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"BlockedReason cases:"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"higherPriorityExists","type":"text"}]},{"type":"text","text":" - Higher priority is running"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"samePriorityConflict","type":"text"}]},{"type":"text","text":" - Conflict at same priority"}],"type":"paragraph"}]}]},{"code":["lockFailure: { error, send in","    if let blockedError = error as? LockmanPriorityBasedBlockedError {","        switch blockedError.reason {","        case .higherPriorityExists(let requested, let current):","            await send(.priorityConflict(\"Waiting due to high priority process running\"))","        case .samePriorityConflict(let priority):","            await send(.busyMessage(\"Process with same priority is running\"))","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"LockmanPriorityBasedCancellationError","level":4,"anchor":"LockmanPriorityBasedCancellationError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Occurs when an existing action is cancelled by preemption."}]},{"code":["catch handler: { error, send in","    if let cancellationError = error as? LockmanPriorityBasedCancellationError {","        await send(.processCancelled(\"Interrupted by high priority process: \\(cancellationError.cancelledInfo.actionId)\"))","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"role":"article","roleHeading":"Article","title":"PriorityBasedStrategy","modules":[{"name":"Lockman"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Lockman/documentation/Lockman":{"role":"collection","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"url":"\/documentation\/lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","url":"\/documentation\/lockman\/errorhandling","title":"Error Handling","kind":"article","abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"role":"article"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"role":"article","type":"topic","url":"\/documentation\/lockman\/singleexecutionstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","kind":"article","title":"SingleExecutionStrategy","abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}]},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","title":"GroupCoordinationStrategy","role":"article","url":"\/documentation\/lockman\/groupcoordinationstrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","kind":"article","role":"article","url":"\/documentation\/lockman\/compositestrategy","title":"CompositeStrategy","type":"topic"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"abstract":[{"text":"Control actions based on runtime conditions.","type":"text"}],"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","title":"DynamicConditionStrategy","kind":"article","url":"\/documentation\/lockman\/dynamicconditionstrategy","type":"topic"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"type":"topic","url":"\/documentation\/lockman\/concurrencylimitedstrategy","title":"ConcurrencyLimitedStrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"kind":"article"}}}