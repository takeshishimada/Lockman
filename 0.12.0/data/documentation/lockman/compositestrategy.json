{"seeAlsoSections":[{"title":"Strategies","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy"],"anchor":"Strategies"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/compositestrategy"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"CompositeStrategy is a strategy that combines multiple strategies to achieve more complex and advanced exclusive control. For complex requirements that cannot be addressed by a single strategy, you can build flexible and powerful control logic by combining 2 to 5 strategies."}],"type":"paragraph"},{"inlineContent":[{"text":"This strategy is used in advanced use cases that require satisfying multiple control conditions simultaneously.","type":"text"}],"type":"paragraph"},{"anchor":"Combination-System","text":"Combination System","type":"heading","level":2},{"anchor":"Number-of-Strategy-Combinations","text":"Number of Strategy Combinations","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Lockman supports combinations of 2 to 5 strategies:"}],"type":"paragraph"},{"anchor":"Combination-Control-Logic","text":"Combination Control Logic","type":"heading","level":3},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Success required in all strategies"}],"type":"strong"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Success only when lock acquisition is possible in all component strategies"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If even one fails, the entire operation fails"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Coordination of preceding cancellation"}]},{"type":"text","text":":"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"When any strategy requires preceding cancellation, execute preceding cancellation for all","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use the first cancellation error found"}],"type":"paragraph"}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"LIFO (Last In, First Out) release"}],"type":"strong"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Lock release is executed in reverse order of acquisition"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Release from the last acquired lock in order","type":"text"}]}]}]},{"anchor":"Usage","text":"Usage","type":"heading","level":2},{"anchor":"Basic-Usage-Example","text":"Basic Usage Example","type":"heading","level":3},{"syntax":"swift","code":["@LockmanCompositeStrategy(","    LockmanSingleExecutionStrategy.self,","    LockmanPriorityBasedStrategy.self",")","enum ViewAction {","    case criticalSave","    case normalSave","    ","    var lockmanInfo: LockmanCompositeInfo2<LockmanSingleExecutionInfo, LockmanPriorityBasedInfo> {","        LockmanCompositeInfo2(","            actionId: actionName,","            lockmanInfoForStrategy1: LockmanSingleExecutionInfo(","                actionId: actionName,","                mode: .action","            ),","            lockmanInfoForStrategy2: LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: switch self {","                    case .criticalSave: .high(.exclusive)","                    case .normalSave: .low(.replaceable)","                }","            )","        )","    }","}"],"type":"codeListing"},{"anchor":"Combining-3-Strategies","text":"Combining 3 Strategies","type":"heading","level":3},{"syntax":"swift","code":["@LockmanCompositeStrategy(","    LockmanSingleExecutionStrategy.self,","    LockmanPriorityBasedStrategy.self,","    LockmanConcurrencyLimitedStrategy.self",")","enum Action {","    case downloadFile","    ","    var lockmanInfo: LockmanCompositeInfo3<LockmanSingleExecutionInfo, LockmanPriorityBasedInfo, LockmanConcurrencyLimitedInfo> {","        LockmanCompositeInfo3(","            actionId: actionName,","            lockmanInfoForStrategy1: LockmanSingleExecutionInfo(","                actionId: actionName,","                mode: .action \/\/ Prevent duplication","            ),","            lockmanInfoForStrategy2: LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable) \/\/ Priority control","            ),","            lockmanInfoForStrategy3: LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"downloads\",","                limit: .limited(3) \/\/ Concurrent execution limit","            )","        )","    }","}"],"type":"codeListing"},{"anchor":"Operation-Examples","text":"Operation Examples","type":"heading","level":2},{"anchor":"Operation-with-2-Strategy-Combination","text":"Operation with 2 Strategy Combination","type":"heading","level":3},{"syntax":null,"code":["Strategy 1: SingleExecution(.action)","Strategy 2: PriorityBased(varies by action)","","Time: 0s  - normalSave request (.low(.replaceable))","  Strategy 1: ✅ Success (no duplication)","  Strategy 2: ✅ Success (no priority issue)","  Result: ✅ Start execution","","Time: 1s  - normalSave request (duplicate)","  Strategy 1: ❌ Fail (same action running)","  Strategy 2: No check (failed at strategy 1)","  Result: ❌ Overall failure","","Time: 2s  - criticalSave request (.high(.exclusive))","  Strategy 1: ✅ Success (different action)","  Strategy 2: ✅ Success (with preceding cancellation)","  Result: ✅ Start execution (cancel normalSave)"],"type":"codeListing"},{"anchor":"Operation-with-3-Strategy-Combination","text":"Operation with 3 Strategy Combination","type":"heading","level":3},{"syntax":null,"code":["Strategy 1: SingleExecution(.action)","Strategy 2: PriorityBased(.low(.replaceable))  ","Strategy 3: ConcurrencyLimited(.limited(3))","","Current situation: 3 download processes running","","Time: 0s  - New downloadFile request","  Strategy 1: ✅ Success (no duplication)","  Strategy 2: ✅ Success (no priority issue)","  Strategy 3: ❌ Fail (concurrent execution limit reached)","  Result: ❌ Overall failure"],"type":"codeListing"},{"anchor":"Error-Handling","text":"Error Handling","type":"heading","level":2},{"inlineContent":[{"text":"For errors that may occur with CompositeStrategy and their solutions, please also refer to the common patterns on the ","type":"text"},{"overridingTitle":"Error Handling","isActive":true,"type":"reference","overridingTitleInlineContent":[{"text":"Error Handling","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling"},{"text":" page.","type":"text"}],"type":"paragraph"},{"anchor":"Error-Handling-in-Composite-Strategy","text":"Error Handling in Composite Strategy","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"In composite strategies, errors from each component strategy are integrated and reported. Since the error from the first failed strategy is returned, check the error type and handle appropriately:"}],"type":"paragraph"},{"syntax":"swift","code":["lockFailure: { error, send in","    switch error {","    case let singleError as LockmanSingleExecutionError:","        send(.singleExecutionConflict(\"Duplicate execution detected\"))","        ","    case let priorityError as LockmanPriorityBasedError:","        send(.priorityConflict(\"Priority conflict occurred\"))","        ","    case let concurrencyError as LockmanConcurrencyLimitedError:","        send(.concurrencyLimitReached(\"Concurrent execution limit reached\"))","        ","    default:","        send(.unknownLockFailure(\"Failed to acquire lock\"))","    }","}"],"type":"codeListing"},{"anchor":"Design-Guidelines","text":"Design Guidelines","type":"heading","level":2},{"anchor":"Strategy-Selection-Order","text":"Strategy Selection Order","type":"heading","level":3},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Start with basic control"}],"type":"strong"},{"type":"text","text":": Begin with SingleExecution"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add if priority is needed"}]},{"type":"text","text":": Combine PriorityBased"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Add if resource control is needed","type":"text"}]},{"type":"text","text":": Combine ConcurrencyLimited"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add if coordination control is needed"}]},{"text":": Combine GroupCoordination","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add if custom logic is needed"}]},{"type":"text","text":": Combine DynamicCondition"}],"type":"paragraph"}]}]}]}],"abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","interfaceLanguage":"swift"},"metadata":{"title":"CompositeStrategy","roleHeading":"Article","modules":[{"name":"Lockman"}],"role":"article"},"references":{"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"url":"\/documentation\/lockman\/prioritybasedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","kind":"article","title":"PriorityBasedStrategy","role":"article","abstract":[{"text":"Control action execution based on priority levels.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"type":"topic","role":"article","title":"DynamicConditionStrategy","url":"\/documentation\/lockman\/dynamicconditionstrategy","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","abstract":[{"text":"Control actions based on runtime conditions.","type":"text"}]},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","type":"topic","title":"SingleExecutionStrategy","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","role":"article","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}]},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"url":"\/documentation\/lockman\/groupcoordinationstrategy","type":"topic","title":"GroupCoordinationStrategy","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","role":"article","abstract":[{"type":"text","text":"Coordinate actions through leader\/member group roles."}]},"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/lockman\/errorhandling","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic","title":"Error Handling"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"title":"ConcurrencyLimitedStrategy","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"type":"topic","url":"\/documentation\/lockman\/concurrencylimitedstrategy","role":"article","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy"}}}