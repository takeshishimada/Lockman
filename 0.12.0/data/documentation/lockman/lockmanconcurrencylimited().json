{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()"},"sections":[],"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior."}],"kind":"symbol","metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"macro","modules":[{"name":"Lockman"}],"title":"LockmanConcurrencyLimited()","externalID":"s:7Lockman0A18ConcurrencyLimitedyycfm","roleHeading":"Macro","role":"symbol"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","text":"LockmanConcurrencyLimitedAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A24ConcurrencyLimitedActionP"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanConcurrencyLimitedAction","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actionName"},{"text":" property that returns the enum case name as a String","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"code":"strategyId","type":"codeVoice"},{"type":"text","text":" implementation is provided by the protocol"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important"}],"type":"strong"},{"type":"text","text":": You must implement the "},{"code":"lockmanInfo","type":"codeVoice"},{"type":"text","text":" property to specify concurrency limits:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Using a predefined concurrency group: ","type":"text"},{"code":".init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Using direct limit: "},{"type":"codeVoice","code":".init(actionId: actionName, .limited(3))"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Using unlimited: "},{"code":".init(actionId: actionName, .unlimited)","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Example usage with TCA:"}],"type":"paragraph"},{"code":["\/\/ Define your concurrency groups","enum MyConcurrencyGroup: LockmanConcurrencyGroup {","  case apiRequests","  case fileOperations","  case uiUpdates","","  var id: String {","    switch self {","    case .apiRequests: return \"api_requests\"","    case .fileOperations: return \"file_operations\"","    case .uiUpdates: return \"ui_updates\"","    }","  }","","  var limit: LockmanConcurrencyLimit {","    switch self {","    case .apiRequests: return .limited(3)","    case .fileOperations: return .limited(2)","    case .uiUpdates: return .unlimited","    }","  }","}","","@Reducer","struct MyFeature {","  @LockmanConcurrencyLimited","  enum Action {","    case fetchUserProfile(User.ID)","    case uploadFile(File)","    case refreshUI","","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","      switch self {","      case .fetchUserProfile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","      case .uploadFile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.fileOperations)","      case .refreshUI:","        \/\/ Direct unlimited","        return .init(actionId: actionName, .unlimited)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .fetchUserProfile(let userId):","        return .withLock(","          operation: { send in","            \/\/ Only 3 concurrent API requests allowed","            let profile = try await api.fetchProfile(userId)","            await send(.profileFetched(profile))","          },","          action: .fetchUserProfile(userId),","          cancelID: \"fetch-profile-\\(userId)\"","        )","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanconcurrencylimited()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedAction":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","abstract":[{"text":"Protocol for actions that support concurrency limiting.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedaction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"title":"LockmanConcurrencyLimitedAction","navigatorTitle":[{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimited()":{"kind":"symbol","abstract":[{"text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"title":"LockmanConcurrencyLimited()","role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimited()"}}}