{"variants":[{"paths":["\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"role":"symbol","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"title":"LockmanConcurrencyLimitedStrategy","externalID":"s:7Lockman0A26ConcurrencyLimitedStrategyC","modules":[{"name":"Lockman"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"roleHeading":"Class"},"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(id:info:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I"],"title":"Type Aliases","anchor":"Type-Aliases"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared"],"title":"Type Properties","anchor":"Type-Properties"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()"],"title":"Type Methods","anchor":"Type-Methods"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"kind":"symbol","abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","title":"LockmanConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/makeStrategyId()":{"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()","abstract":[{"type":"text","text":"Creates the strategy identifier."}],"type":"topic","title":"makeStrategyId()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp()":{"role":"symbol","title":"cleanUp()","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all locks across all boundaries."}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/unlock(id:info:)":{"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/unlock(id:info:)","abstract":[{"type":"text","text":"Removes the lock from the state."}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","text":"LockmanConcurrencyLimitedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(id:info:)","title":"unlock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/I":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"navigatorTitle":[{"text":"I","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/i","abstract":[{"type":"text","text":"The type of lock info used by this strategy."}],"title":"LockmanConcurrencyLimitedStrategy.I"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/lock(id:info:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedInfo","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"lock(id:info:)","abstract":[{"text":"Adds the lock to the state.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/canLock(id:info:)":{"role":"symbol","title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(id:info:)","type":"topic","kind":"symbol","abstract":[{"text":"Checks if a lock can be acquired based on concurrency limits.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/canlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}]},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/shared":{"title":"shared","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/shared","type":"topic","abstract":[{"text":"Shared instance of the strategy.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","preciseIdentifier":"s:7Lockman0A26ConcurrencyLimitedStrategyC","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp(id:)":{"type":"topic","title":"cleanUp(id:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(id:)","abstract":[{"type":"text","text":"Removes all locks for a specific boundary."}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/strategyId":{"role":"symbol","title":"strategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId","type":"topic","kind":"symbol","abstract":[{"text":"The strategy identifier.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/strategyid","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/getcurrentlocks()","type":"topic","title":"getCurrentLocks()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"kind":"symbol"}}}