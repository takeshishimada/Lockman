{"sections":[],"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","roleHeading":"Instance Method","title":"cleanUp()","required":true,"modules":[{"name":"Lockman"}],"role":"symbol"},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This method clears all internal lock state managed by the strategy,","type":"text"},{"text":" ","type":"text"},{"text":"effectively resetting it to its initial state. Use this for:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown sequences"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite cleanup between tests"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Global system resets during development"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Emergency cleanup scenarios","type":"text"}]}]}]},{"anchor":"Implementation-Guidelines","text":"Implementation Guidelines","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Should remove all tracked locks regardless of boundary"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should not fail even if no locks are currently held","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be safe to call multiple times","type":"text"}]}]}]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"title":"LockmanStrategy","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"title":"cleanUp()","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]}}}