{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock"]]},"abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"reduce","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult"},{"text":")? = nil)","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"reduce","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The base reducer function to be executed."}]}]},{"name":"lockCondition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional function that evaluates the current state and action"},{"type":"text","text":" "},{"type":"text","text":"to determine if a lock should be acquired. If nil, no reducer-level"},{"type":"text","text":" "},{"type":"text","text":"condition is applied."}]}]}]}],"sections":[],"metadata":{"modules":[{"name":"Lockman"}],"symbolKind":"init","roleHeading":"Initializer","role":"symbol","externalID":"s:7Lockman14ReduceWithLockV_13lockConditionACyxq_G22ComposableArchitecture6EffectVyq_Gxz_q_tc_AA0A6ResultOx_q_tYbcSgtcfc","title":"init(_:lockCondition:)","fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/LockmanResult":{"type":"topic","url":"\/documentation\/lockman\/lockmanresult","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"title":"LockmanResult","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/ReduceWithLock/init(_:lockCondition:)":{"url":"\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}],"role":"symbol","title":"init(_:lockCondition:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"},{"kind":"text","text":")?)"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)"},"doc://Lockman/documentation/Lockman/ReduceWithLock":{"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReduceWithLock","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock","title":"ReduceWithLock","abstract":[{"text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities.","type":"text"}],"url":"\/documentation\/lockman\/reducewithlock","role":"symbol","navigatorTitle":[{"text":"ReduceWithLock","kind":"identifier"}]}}}