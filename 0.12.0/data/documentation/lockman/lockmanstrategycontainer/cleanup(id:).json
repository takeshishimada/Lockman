{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":" whose associated lock state should be cleared"}]}],"name":"id"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"cleanUp(id:)"},{"text":" method to clear state associated with the given boundary identifier.","type":"text"},{"text":" ","type":"text"},{"text":"Useful when a feature or component is being deallocated.","type":"text"}]},{"type":"heading","anchor":"Error-Handling","text":"Error Handling","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":", errors in individual strategy cleanup are logged"},{"type":"text","text":" "},{"type":"text","text":"but donâ€™t prevent cleanup of other strategies."}]},{"type":"heading","anchor":"Complexity","text":"Complexity","level":2},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"metadata":{"externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF","role":"symbol","modules":[{"name":"Lockman"}],"title":"cleanUp(id:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"abstract":[{"text":"Invokes ","type":"text"},{"type":"codeVoice","code":"cleanUp(id:)"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","title":"cleanUp(id:)","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"type":"topic","abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"title":"LockmanStrategyContainer","role":"symbol"}}}