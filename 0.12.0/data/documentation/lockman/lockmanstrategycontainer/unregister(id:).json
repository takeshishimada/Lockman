{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"symbolKind":"method","title":"unregister(id:)","externalID":"s:7Lockman0A17StrategyContainerC10unregister2idSbAA0aB2IdV_tF","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unregister"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The strategy ID to unregister","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the strategy was found and removed, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it wasn’t registered"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This method allows unregistering a strategy that is no longer needed.","type":"text"},{"text":" ","type":"text"},{"text":"The strategy’s cleanup method is called before removal.","type":"text"}],"type":"paragraph"},{"type":"heading","level":2,"text":"Use Cases","anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Dynamic strategy replacement"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management in long-running applications"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test cleanup"}]}]}]},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["let wasRemoved = container.unregister(id: \"MyApp.Custom:v1\")","if wasRemoved {","  print(\"Strategy successfully unregistered\")","}"]}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)"]}],"abstract":[{"type":"text","text":"Removes a specific strategy from the container by its ID."}],"references":{"doc://Lockman/documentation/Lockman":{"title":"Lockman","kind":"symbol","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/unregister(id:)":{"type":"topic","kind":"symbol","title":"unregister(id:)","role":"symbol","abstract":[{"type":"text","text":"Removes a specific strategy from the container by its ID."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"type":"topic","abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"title":"LockmanStrategyContainer","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"type":"topic","title":"LockmanStrategyId","url":"\/documentation\/lockman\/lockmanstrategyid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","kind":"symbol"}}}