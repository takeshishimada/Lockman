{"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(boundaryId:info:)"],"generated":true},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"],"generated":true},{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"],"generated":true},{"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"code":"LockmanDynamicConditionStrategy","type":"codeVoice"},{"type":"text","text":" allows you to define arbitrary locking conditions"},{"type":"text","text":" "},{"type":"text","text":"using closures that are evaluated when the lock is requested. This provides maximum"},{"type":"text","text":" "},{"type":"text","text":"flexibility for complex business logic scenarios."}]},{"text":"Example","type":"heading","anchor":"Example","level":2},{"type":"codeListing","syntax":"swift","code":["\/\/ Business logic condition with custom error","struct PriorityTooLowError: Error {","    let priority: Int","}","","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .cancel(PriorityTooLowError(priority: priority))","    }","    return .success","}"]},{"text":"Thread Safety","type":"heading","anchor":"Thread-Safety","level":2},{"type":"paragraph","inlineContent":[{"text":"This strategy is thread-safe and uses ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" for managing concurrent access.","type":"text"}]}]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","modules":[{"name":"Lockman"}],"symbolKind":"class","role":"symbol","externalID":"s:7Lockman0A24DynamicConditionStrategyC","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}]},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"title":"getCurrentLocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","title":"LockmanDynamicConditionStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"role":"symbol","abstract":[{"text":"Creates a new dynamic condition strategy instance.","type":"text"}],"kind":"symbol","title":"init()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(boundaryId:info:)":{"kind":"symbol","abstract":[{"text":"Releases all locks with the same actionId.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"unlock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(boundaryId:info:)","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(boundaryid:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","role":"symbol","kind":"symbol","title":"strategyId","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(boundaryId:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(boundaryid:)","abstract":[{"type":"text","text":"Removes all active locks for the specified boundary across all action groups."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(boundaryId:)","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(boundaryid:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(boundaryId:info:)","type":"topic","kind":"symbol","title":"lock(boundaryId:info:)","abstract":[{"type":"text","text":"Acquires a lock by registering it in the dynamic condition tracking state."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"kind":"symbol","title":"cleanUp()","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()","abstract":[{"text":"Removes all active locks across all boundaries and action groups.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC"}],"abstract":[{"type":"text","text":"Shared singleton instance."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared","title":"shared","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()","title":"makeStrategyId()","abstract":[{"text":"Creates a strategy identifier for the dynamic condition strategy.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(boundaryId:info:)":{"abstract":[{"text":"Evaluates the dynamic condition to determine if a lock can be acquired.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(boundaryid:info:)","kind":"symbol","role":"symbol","title":"canLock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"title":"LockmanDynamicConditionStrategy.I","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"I"}],"type":"topic","abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i","kind":"symbol"}}}