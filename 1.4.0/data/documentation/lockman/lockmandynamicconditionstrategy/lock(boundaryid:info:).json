{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(boundaryId:info:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo","text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}]}],"name":"boundaryId"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Dynamic condition lock information to register in the tracking state"}]}],"name":"info"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method should only be called after "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" returns a success result."},{"type":"text","text":" "},{"type":"text","text":"The lock will be tracked using the actionId as the key."}],"type":"paragraph"}]}],"metadata":{"title":"lock(boundaryId:info:)","modules":[{"name":"Lockman"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:7Lockman0A24DynamicConditionStrategyC4lock10boundaryId4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","roleHeading":"Instance Method"},"abstract":[{"text":"Acquires a lock by registering it in the dynamic condition tracking state.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(boundaryid:info:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(boundaryid:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(boundaryId:info:)","type":"topic","kind":"symbol","title":"lock(boundaryId:info:)","abstract":[{"type":"text","text":"Acquires a lock by registering it in the dynamic condition tracking state."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","title":"LockmanDynamicConditionStrategy","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo":{"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditioninfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo","role":"symbol","abstract":[{"type":"text","text":"Lock information for dynamic condition-based execution control."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionInfo"}],"title":"LockmanDynamicConditionInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionInfo"}]}}}