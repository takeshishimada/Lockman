{"kind":"symbol","abstract":[{"text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"code":"LockmanStrategy<I>","type":"codeVoice"}]}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This initializer performs type erasure by capturing the concrete strategy’s methods","type":"text"},{"text":" ","type":"text"},{"text":"as closures. The concrete strategy’s lifetime is preserved through these closures,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring that the strategy remains valid for the lifetime of this wrapper.","type":"text"}]},{"anchor":"Type-Safety","type":"heading","level":2,"text":"Type Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"where S.I == I"},{"type":"text","text":" constraint ensures that the concrete strategy’s lock information"},{"type":"text","text":" "},{"type":"text","text":"type matches this wrapper’s lock information type, maintaining type safety at compile time."}]},{"anchor":"Memory-Management","type":"heading","level":2,"text":"Memory Management"},{"items":[{"content":[{"inlineContent":[{"text":"For class-based strategies: The strategy instance is retained by the closures","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For struct-based strategies: The strategy is copied into the closures"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Both approaches ensure proper lifetime management without memory leaks","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Performance-Notes","type":"heading","level":2,"text":"Performance Notes"},{"type":"paragraph","inlineContent":[{"text":"The type erasure process happens once during initialization. Subsequent method calls","type":"text"},{"text":" ","type":"text"},{"text":"have minimal overhead (single function pointer indirection).","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:7Lockman03AnyA8StrategyVyACyxGqd__c1IQyd__RszAA0aC0Rd__lufc","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init","title":"init(_:)","role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Initializer"},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","title":"I","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"}],"required":true,"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"title":"init(_:)","abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}]}}}