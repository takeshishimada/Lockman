{"kind":"symbol","sections":[],"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method provides a global reset mechanism by clearing all internal lock state"},{"type":"text","text":" "},{"type":"text","text":"from the underlying strategy. Itâ€™s typically used during:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Emergency reset scenarios during development","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Memory pressure response"}]}]}],"type":"unorderedList"},{"anchor":"Scope-of-Operation","text":"Scope of Operation","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method affects ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"all boundaries"}]},{"text":" managed by the underlying strategy,","type":"text"},{"text":" ","type":"text"},{"text":"not just those accessed through this particular wrapper instance.","type":"text"}]},{"anchor":"Thread-Safety","text":"Thread Safety","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The operation is atomic with respect to other strategy operations, but"},{"type":"text","text":" "},{"type":"text","text":"callers should be aware that concurrent operations may be affected."}]},{"anchor":"Side-Effects","text":"Side Effects","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All active locks are immediately released"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock state tracking is reset to initial conditions"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Pending operations may receive unexpected unlock notifications"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF","symbolKind":"method","role":"symbol","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","kind":"symbol","role":"symbol","type":"topic","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}]}}}