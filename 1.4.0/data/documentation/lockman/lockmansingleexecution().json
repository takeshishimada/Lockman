{"kind":"symbol","abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecution()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP","text":"LockmanSingleExecutionAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanSingleExecutionAction","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actionName"},{"text":" property that returns the enum case name as a String","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Default ","type":"text"},{"type":"codeVoice","code":"strategyId"},{"text":" implementation is provided by the protocol","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Important","type":"text"}]},{"type":"text","text":": You must implement the "},{"type":"codeVoice","code":"lockmanInfo"},{"type":"text","text":" property to specify the execution mode:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".none","type":"codeVoice"},{"text":": No exclusive execution (always allows locks)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Only one action per boundary at a time (default behavior)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".action"},{"text":": Only one instance of the same actionId at a time","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Example usage with TCA:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .run { send in","          \/\/ async work","        }","        .lock(","          action: .login,","          boundaryId: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"title":"LockmanSingleExecution()","roleHeading":"Macro","symbolKind":"macro","role":"symbol","externalID":"s:7Lockman0A15SingleExecutionyycfm","modules":[{"name":"Lockman"}]},"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"abstract":[{"text":"A specialized ","type":"text"},{"code":"LockmanAction","type":"codeVoice"},{"text":" for single-execution locking semantics.","type":"text"}],"title":"LockmanSingleExecutionAction","url":"\/documentation\/lockman\/lockmansingleexecutionaction","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecution()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for single execution locking behavior."}],"kind":"symbol","title":"LockmanSingleExecution()"}}}