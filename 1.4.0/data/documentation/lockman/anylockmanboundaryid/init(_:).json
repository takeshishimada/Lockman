{"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": any ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","preciseIdentifier":"s:7Lockman0A10BoundaryIda","text":"LockmanBoundaryId","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":" to be wrapped"}]}]}]},{"kind":"content","content":[{"text":"Design Note","anchor":"Design-Note","type":"heading","level":2},{"inlineContent":[{"text":"The underlying value is stored as ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":", which preserves the original","type":"text"},{"text":" ","type":"text"},{"text":"typeâ€™s hashing and equality behavior while enabling uniform storage.","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)"},"sections":[],"kind":"symbol","metadata":{"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10BoundaryIda","text":"LockmanBoundaryId","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Lockman"}],"roleHeading":"Initializer","externalID":"s:7Lockman03AnyA10BoundaryIdVyACSH_s8Sendablepcfc","role":"symbol","title":"init(_:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanboundaryid\/init(_:)"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanBoundaryId":{"url":"\/documentation\/lockman\/lockmanboundaryid","title":"LockmanBoundaryId","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanBoundaryId"}],"type":"topic","abstract":[{"type":"text","text":"A protocol composition for boundary identifiers used by Lockman strategies."}]},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/init(_:)":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10BoundaryIda","text":"LockmanBoundaryId","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)","title":"init(_:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":".","type":"text"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"kind":"symbol","role":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"type":"topic","title":"AnyLockmanBoundaryId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid"}}}