{"metadata":{"title":"canLock(boundaryId:info:)","externalID":"s:7Lockman0A8StrategyP7canLock10boundaryId4infoAA0A6ResultOqd___1IQztSHRd__s8SendableRd__lF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}],"modules":[{"name":"Lockman"}],"role":"symbol","required":true},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","text":"LockmanResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}]}],"name":"boundaryId"},{"content":[{"inlineContent":[{"text":"Lock information of type ","type":"text"},{"code":"I","type":"codeVoice"},{"text":" containing action details","type":"text"}],"type":"paragraph"}],"name":"info"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LockmanResult"},{"type":"text","text":" indicating whether the lock can be acquired,"},{"type":"text","text":" "},{"type":"text","text":"any required actions (such as canceling existing operations), and"},{"type":"text","text":" "},{"type":"text","text":"detailed error information if the lock cannot be acquired"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This method allows the strategy to evaluate whether a lock acquisition"},{"type":"text","text":" "},{"type":"text","text":"would succeed without modifying the strategyâ€™s internal state. The actual"},{"type":"text","text":" "},{"type":"text","text":"lock acquisition happens in the subsequent "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" method call."}],"type":"paragraph"},{"type":"heading","anchor":"Implementation-Guidelines","text":"Implementation Guidelines","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Should not modify internal state"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should return quickly as this may be called frequently","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should consider all conflict conditions specific to the strategy","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Should return detailed error information when lock acquisition fails","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Error-Handling","text":"Error Handling","level":2},{"inlineContent":[{"text":"When returning ","type":"text"},{"type":"codeVoice","code":".failure"},{"text":", strategies should include a specific error","type":"text"},{"text":" ","type":"text"},{"text":"conforming to ","type":"text"},{"type":"codeVoice","code":"LockmanError"},{"text":" that explains why the lock cannot be acquired.","type":"text"},{"text":" ","type":"text"},{"text":"This helps with debugging and allows callers to handle different failure","type":"text"},{"text":" ","type":"text"},{"text":"scenarios appropriately.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanResult":{"role":"symbol","title":"LockmanResult","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanresult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","title":"I","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"}],"required":true,"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","required":true,"role":"symbol","abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}]}}}