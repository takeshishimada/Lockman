{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"boundaryId","content":[{"inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"code":"LockmanBoundaryId","type":"codeVoice"}],"type":"paragraph"}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"Lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" to be registered as active"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"When this method is called, the strategy should update its internal state","type":"text"},{"text":" ","type":"text"},{"text":"to reflect that the lock has been acquired. The strategy is responsible","type":"text"},{"text":" ","type":"text"},{"text":"for tracking this state until the corresponding ","type":"text"},{"code":"unlock","type":"codeVoice"},{"text":" call.","type":"text"}],"type":"paragraph"},{"text":"Implementation Guidelines","anchor":"Implementation-Guidelines","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should only be called after ","type":"text"},{"code":"canLock","type":"codeVoice"},{"text":" returns a success result","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Must update internal state to track the active lock"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be idempotent if called multiple times with the same parameters","type":"text"}]}]}],"type":"unorderedList"},{"text":"Thread Safety","anchor":"Thread-Safety","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method may be called concurrently and must handle concurrent"},{"type":"text","text":" "},{"type":"text","text":"access to internal state appropriately."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","externalID":"s:7Lockman0A8StrategyP4lock10boundaryId4infoyqd___1IQztSHRd__s8SendableRd__lF","required":true,"title":"lock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"method"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","title":"I","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"}],"required":true,"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(boundaryId:info:)":{"title":"lock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)","required":true,"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"}}}