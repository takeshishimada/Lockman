{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)"]},{"anchor":"Type-Aliases","generated":true,"title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"]},{"anchor":"Type-Properties","generated":true,"title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"]},{"anchor":"Type-Methods","generated":true,"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This strategy implements a sophisticated priority system that allows higher-priority","type":"text"},{"text":" ","type":"text"},{"text":"actions to preempt lower-priority ones, while providing configurable concurrency","type":"text"},{"text":" ","type":"text"},{"text":"behavior for actions of the same priority level.","type":"text"}]},{"type":"heading","text":"Priority System Overview","anchor":"Priority-System-Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The strategy maintains a per-boundary collection of active "},{"type":"codeVoice","code":"LockmanPriorityBasedInfo"},{"type":"text","text":" "},{"type":"text","text":"instances and uses the priority hierarchy to determine execution precedence:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"High Priority"}],"type":"strong"},{"text":" (.high): Can cancel low\/none priority actions","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Low Priority"}],"type":"strong"},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"No Priority"}],"type":"strong"},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Concurrency Behavior Logic","anchor":"Concurrency-Behavior-Logic","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" is called for same-priority actions, the strategy evaluates conflicts"},{"type":"text","text":" "},{"type":"text","text":"using the existing action’s concurrency behavior:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"No Priority Actions"}]},{"text":": Always succeed (bypass priority system)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}],"type":"strong"},{"type":"text","text":": Priority actions always win"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Different Priority Levels","type":"text"}]},{"type":"text","text":": Higher priority wins"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Same Priority Level","type":"text"}]},{"type":"text","text":": Apply existing action’s "},{"type":"codeVoice","code":"ConcurrencyBehavior"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Exclusive"}]},{"type":"text","text":": Existing action continues, new action fails"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Replaceable","type":"text"}],"type":"strong"},{"text":": Existing action is canceled, new action succeeds","type":"text"}]}]}]}]}]},{"type":"heading","text":"Thread Safety","anchor":"Thread-Safety","level":2},{"type":"paragraph","inlineContent":[{"text":"This strategy is thread-safe through the underlying ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" which provides","type":"text"},{"text":" ","type":"text"},{"text":"synchronized access to the per-boundary lock collections.","type":"text"}]},{"type":"heading","text":"Usage Examples","anchor":"Usage-Examples","level":2},{"syntax":"swift","code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(boundaryId: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(boundaryId: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"LockmanPriorityBasedStrategy","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"roleHeading":"Class","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC"},"references":{"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"kind":"symbol","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"title":"init()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Creates a new priority-based strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","type":"topic","abstract":[{"text":"Removes all priority-based locks across all boundaries and priority levels.","type":"text"}],"title":"cleanUp()","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(boundaryId:info:)":{"type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(boundaryid:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","title":"lock(boundaryId:info:)","kind":"symbol","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(boundaryId:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(boundaryid:)","role":"symbol","kind":"symbol","abstract":[{"text":"Removes all priority-based locks for the specified boundary across all priority levels.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"title":"getCurrentLocks()","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"kind":"symbol","abstract":[{"text":"Creates a strategy identifier for the priority-based strategy.","type":"text"}],"type":"topic","role":"symbol","title":"makeStrategyId()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(boundaryId:info:)":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)","title":"unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}],"abstract":[{"text":"Releases a previously acquired priority-based lock.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","role":"symbol","title":"canLock(boundaryId:info:)","abstract":[{"text":"Evaluates whether a priority-based lock can be acquired.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(boundaryid:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy.I","navigatorTitle":[{"text":"I","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","title":"LockmanPriorityBasedStrategy"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC"}],"type":"topic","role":"symbol","abstract":[{"text":"Shared singleton instance for coordinating priority-based locks across the application.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","title":"shared"}}}