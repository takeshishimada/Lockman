{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/configuration"]}],"abstract":[{"text":"Configure Lockman for your application’s needs.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"LockmanManager provides configuration functionality to set Lockman’s behavior throughout the application. These settings allow you to customize default lock release timing and error handling behavior."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once configured, settings apply application-wide and can be overridden at various levels: in "},{"overridingTitle":"Effect.lock","overridingTitleInlineContent":[{"code":"Effect.lock","type":"codeVoice"}],"type":"reference","isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},{"type":"text","text":" method chains or when configuring "},{"overridingTitle":"Reducer.lock","overridingTitleInlineContent":[{"code":"Reducer.lock","type":"codeVoice"}],"type":"reference","isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},{"type":"text","text":"."}]},{"type":"heading","level":2,"text":"Configuration Options","anchor":"Configuration-Options"},{"type":"heading","level":3,"text":"defaultUnlockOption","anchor":"defaultUnlockOption"},{"type":"paragraph","inlineContent":[{"text":"Sets the default timing for lock release.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Configure during application initialization","LockmanManager.config.defaultUnlockOption = .immediate"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Available values"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"code":".immediate","type":"codeVoice"}]},{"type":"text","text":": Release immediately upon completion (default)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"code":".mainRunLoop","type":"codeVoice"}],"type":"strong"},{"text":": Release on the next main loop cycle","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"code":".transition","type":"codeVoice"}],"type":"strong"},{"text":": Release after platform-specific screen transition animation","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":".delayed(TimeInterval)"}]},{"type":"text","text":": Release after the specified time interval"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Priority order","type":"text"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Explicitly specified in method call ("},{"type":"codeVoice","code":"Effect.lock"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Reducer.lock"},{"type":"text","text":") (highest priority)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Action’s "},{"type":"codeVoice","code":"unlockOption"},{"type":"text","text":" property (if implementing "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"LockmanManager.config.defaultUnlockOption"},{"type":"text","text":" (lowest priority)"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Use cases"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Unified release timing considering UI transitions"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Consistent behavior settings across the application","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adjustments for performance optimization","type":"text"}]}]}]},{"type":"heading","level":3,"text":"handleCancellationErrors","anchor":"handleCancellationErrors"},{"type":"paragraph","inlineContent":[{"text":"Sets how to handle cancellation errors.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Ignore cancellation errors (default)","LockmanManager.config.handleCancellationErrors = false","","\/\/ Pass cancellation errors to error handler","LockmanManager.config.handleCancellationErrors = true"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Values","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"code":"false","type":"codeVoice"}],"type":"strong"},{"text":": Ignore cancellation errors and don’t pass to error handler (default)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"codeVoice","code":"true"}],"type":"strong"},{"type":"text","text":": Pass cancellation errors to error handler"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Use cases"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Logging cancellation processing","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Tracking cancellation situations during debugging","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Collecting statistical information","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Configuration Examples","anchor":"Configuration-Examples"},{"type":"heading","level":3,"text":"Configuration during Application Initialization","anchor":"Configuration-during-Application-Initialization"},{"type":"codeListing","syntax":"swift","code":["\/\/ Configure in AppDelegate or App struct","func applicationDidFinishLaunching() {","    \/\/ Set release timing considering UI transitions","    LockmanManager.config.defaultUnlockOption = .transition","    ","    \/\/ Log cancellation errors during development","    #if DEBUG","    LockmanManager.config.handleCancellationErrors = true","    #endif","}"]},{"type":"heading","level":3,"text":"Individual Override","anchor":"Individual-Override"},{"type":"codeListing","syntax":"swift","code":["\/\/ Override in Reducer.lock()",".lock(","    boundaryId: CancelID.feature,","    unlockOption: .immediate, \/\/ Override global setting","    lockFailure: { error, send in","        \/\/ Error handling","    }",")","","\/\/ Override in Effect.lock()",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .delayed(0.5) \/\/ Override for this effect",")","","\/\/ Override with manual unlock timing control",".run { send in","    \/\/ Processing that requires transition timing","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition \/\/ Override for fine control",")"]},{"type":"heading","level":2,"text":"Notes","anchor":"Notes"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Since configuration changes affect the entire application, it’s recommended to configure during initialization"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Runtime configuration changes are possible but should be done carefully to avoid unexpected behavior","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"During testing, it’s recommended to reset settings to avoid effects between tests","type":"text"}]}]}]}]}],"seeAlsoSections":[{"anchor":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"generated":true,"title":"Essentials"}],"metadata":{"role":"article","title":"Configuration","roleHeading":"Article","modules":[{"name":"Lockman"}]},"kind":"article","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/DebuggingGuide":{"kind":"article","abstract":[{"text":"Learn how to debug Lockman-related issues in your application.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","role":"article","type":"topic","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide"},"doc://Lockman/documentation/Lockman/Lock":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","kind":"article","type":"topic","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"role":"article","title":"Lock","url":"\/documentation\/lockman\/lock"},"doc://Lockman/documentation/Lockman/GettingStarted":{"abstract":[{"text":"Learn how to integrate Lockman into your TCA application.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","url":"\/documentation\/lockman\/gettingstarted","type":"topic","kind":"article","title":"Getting Started","role":"article"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"role":"article","kind":"article","title":"Choosing a Strategy","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"url":"\/documentation\/lockman\/choosingstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","type":"topic"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"role":"article","kind":"article","title":"Boundary","abstract":[{"text":"Understand the concept of boundaries in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/boundaryoverview","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","type":"topic"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"role":"article","kind":"article","title":"Error Handling","abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/errorhandling","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic"},"doc://Lockman/documentation/Lockman/Unlock":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","kind":"article","type":"topic","abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"role":"article","title":"Unlock","url":"\/documentation\/lockman\/unlock"}}}