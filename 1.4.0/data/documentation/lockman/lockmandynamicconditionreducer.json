{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"roleHeading":"Structure","externalID":"s:7Lockman0A23DynamicConditionReducerV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionReducer"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionReducer"}],"title":"LockmanDynamicConditionReducer","symbolKind":"struct","modules":[{"name":"Lockman"}]},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/22ComposableArchitecture7ReducerP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/init(_:lockCondition:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/init(base:lockCondition:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/lock(state:action:priority:unlockOption:operation:catch:lockFailure:lockAction:boundaryId:lockCondition:fileID:filePath:line:column:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/reduce(into:action:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/Reducer-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"abstract":[{"text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionReducer","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"LockmanDynamicConditionReducer"},{"type":"text","text":" enables dynamic lock condition evaluation based on the current state and action,"},{"type":"text","text":" "},{"type":"text","text":"allowing for fine-grained control over when locks should be acquired."}],"type":"paragraph"},{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"This reducer provides two levels of lock condition control:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Reducer-level","type":"text"}]},{"type":"text","text":": Optional condition specified at initialization that applies to all actions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Action-level"}]},{"text":": Optional condition specified per ","type":"text"},{"code":"lock","type":"codeVoice"},{"text":" call for specific actions","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"Usage Examples","anchor":"Usage-Examples","type":"heading"},{"level":3,"text":"With method chain API","anchor":"With-method-chain-API","type":"heading"},{"syntax":"swift","code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    switch action {","    case .fetchData:","      return self.lock(","        state: state,","        action: action,","        operation: { send in","          \/\/ Async operation","        },","        lockAction: FetchAction(),","        boundaryId: CancelID.fetch","      )","    default:","      return .none","    }","  }","  .lock { state, action in","    \/\/ Evaluate state to determine if lock should be acquired","    guard state.isEnabled else {","      return .cancel(MyError.featureDisabled)","    }","    return .success","  }","}"],"type":"codeListing"},{"level":3,"text":"Combined conditions with method chain","anchor":"Combined-conditions-with-method-chain","type":"heading"},{"syntax":"swift","code":["var body: some ReducerOf<Self> {","  Reduce { state, action in","    switch action {","    case .purchase(let amount):","      return self.lock(","        state: state,","        action: action,","        operation: { send in","          \/\/ Purchase operation","        },","        lockAction: PurchaseAction(),","        boundaryId: CancelID.payment,","        lockCondition: { state, _ in","          \/\/ Action-level condition","          guard state.balance >= amount else {","            return .cancel(MyError.insufficientBalance(required: amount, available: state.balance))","          }","          return .success","        }","      )","    default:","      return .none","    }","  }","  .lock { state, _ in","    \/\/ Reducer-level condition","    guard state.isLoggedIn else {","      return .cancel(MyError.notAuthenticated)","    }","    return .success","  }","}"],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionreducer"]}],"references":{"doc://Lockman/22ComposableArchitecture7ReducerP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/22ComposableArchitecture7ReducerP","title":"ComposableArchitecture.Reducer"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/init(base:lockCondition:)":{"abstract":[{"type":"text","text":"Initializes the reducer with an existing Reduce instance."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/init(base:lockCondition:)","url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/init(base:lockcondition:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reduce","preciseIdentifier":"s:22ComposableArchitecture6ReduceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":")?)"}],"kind":"symbol","title":"init(base:lockCondition:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/reduce(into:action:)":{"url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/reduce(into:action:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/reduce(into:action:)","title":"reduce(into:action:)","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reduce","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"action","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/Reducer-Implementations":{"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/reducer-implementations","role":"collectionGroup","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/Reducer-Implementations","kind":"article","abstract":[],"title":"Reducer Implementations"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/init(_:lockCondition:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/init(_:lockCondition:)","role":"symbol","title":"init(_:lockCondition:)","url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/init(_:lockcondition:)","type":"topic","kind":"symbol","abstract":[{"text":"Initializes a reducer with optional lock condition evaluation.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":")?)"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer":{"role":"symbol","navigatorTitle":[{"text":"LockmanDynamicConditionReducer","kind":"identifier"}],"abstract":[{"text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionreducer","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionReducer","kind":"identifier"}],"title":"LockmanDynamicConditionReducer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionReducer/lock(state:action:priority:unlockOption:operation:catch:lockFailure:lockAction:boundaryId:lockCondition:fileID:filePath:line:column:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionReducer\/lock(state:action:priority:unlockOption:operation:catch:lockFailure:lockAction:boundaryId:lockCondition:fileID:filePath:line:column:)","role":"symbol","abstract":[{"text":"Creates an effect with automatic lock management and dynamic condition evaluation.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionreducer\/lock(state:action:priority:unlockoption:operation:catch:lockfailure:lockaction:boundaryid:lockcondition:fileid:filepath:line:column:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"LA"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:ScP","text":"TaskPriority"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unlockOption"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A12UnlockOptionO","text":"LockmanUnlockOption"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture4SendV","text":"Send"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"catch"},{"kind":"text","text":": ((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture4SendV","text":"Send"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"lockFailure"},{"kind":"text","text":": ((any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture4SendV","text":"Send"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"lockAction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LA"},{"kind":"text","text":", "},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">"}],"title":"lock(state:action:priority:unlockOption:operation:catch:lockFailure:lockAction:boundaryId:lockCondition:fileID:filePath:line:column:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"State"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]}}}}