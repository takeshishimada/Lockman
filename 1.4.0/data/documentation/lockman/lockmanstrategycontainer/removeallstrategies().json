{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method calls ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all strategies before removing them,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring proper cleanup. The container returns to its initial empty state.","type":"text"}]},{"type":"heading","text":"Use Cases","level":2,"anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Application shutdown","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite reset"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management"}],"type":"paragraph"}]}]},{"type":"heading","text":"Complexity","level":2,"anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Lockman"}],"title":"removeAllStrategies()","role":"symbol"},"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","role":"symbol","title":"removeAllStrategies()","kind":"symbol","abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"role":"symbol","abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"}}}