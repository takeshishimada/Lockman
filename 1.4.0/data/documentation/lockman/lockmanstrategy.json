{"topicSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"anchor":"Associated-Types","title":"Associated Types"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)"],"anchor":"Instance-Methods","title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"anchor":"Type-Methods","title":"Type Methods"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"externalID":"s:7Lockman0A8StrategyP","roleHeading":"Protocol","title":"LockmanStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"modules":[{"name":"Lockman"}],"role":"symbol","symbolKind":"protocol"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Strategy Types","anchor":"Strategy-Types"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Single Execution"}],"type":"strong"},{"text":": Prevents concurrent execution of the same action","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Priority-Based"}],"type":"strong"},{"text":": Allows higher priority actions to preempt lower priority ones","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Composite","type":"text"}],"type":"strong"},{"type":"text","text":": Combines multiple strategies for complex coordination"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Implementation Guidelines","anchor":"Implementation-Guidelines"},{"inlineContent":[{"type":"text","text":"Strategies can be implemented as either classes (for stateful strategies) or"},{"type":"text","text":" "},{"type":"text","text":"structs (for stateless strategies). Both can be type-erased using "},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Thread Safety","anchor":"Thread-Safety"},{"inlineContent":[{"text":"All strategy implementations must be thread-safe as they may be called","type":"text"},{"text":" ","type":"text"},{"text":"concurrently from multiple contexts. Use appropriate synchronization","type":"text"},{"text":" ","type":"text"},{"text":"mechanisms in your implementation.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Example Implementation","anchor":"Example-Implementation"},{"code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(boundaryId: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(boundaryId: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(boundaryId: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(boundaryId: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","interfaceLanguage":"swift"},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(boundaryId:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(boundaryid:)","title":"cleanUp(boundaryId:)","required":true,"role":"symbol","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"title":"LockmanCompositeStrategy4","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"url":"\/documentation\/lockman\/lockmancompositestrategy4","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 4 different strategies."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","required":true,"role":"symbol","abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","title":"strategyId","required":true,"role":"symbol","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","title":"I","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"}],"required":true,"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"url":"\/documentation\/lockman\/lockmancompositestrategy2","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","title":"LockmanCompositeStrategy2","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy2"}],"type":"topic","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy2"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","title":"LockmanPriorityBasedStrategy"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"title":"LockmanSingleExecutionStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","type":"topic","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"title":"LockmanCompositeStrategy5","type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy5","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"title":"LockmanConcurrencyLimitedStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","title":"makeStrategyId()","required":true,"role":"symbol","abstract":[{"text":"Creates a strategy identifier for this strategy type.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","required":true,"type":"topic","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"title":"getCurrentLocks()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","title":"LockmanGroupCoordinationStrategy","type":"topic","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(boundaryId:info:)":{"title":"lock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)","required":true,"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(boundaryid:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"kind":"symbol","title":"unlock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"type":"topic","title":"cleanUp()","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","required":true},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"title":"LockmanCompositeStrategy3","navigatorTitle":[{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmancompositestrategy3","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol","title":"LockmanDynamicConditionStrategy","kind":"symbol"}}}