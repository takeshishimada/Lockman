{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy manages group-based locking where:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Leaders"}]},{"text":" can execute based on their entry policy:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".emptyGroup","type":"codeVoice"},{"text":": Only when the group is completely empty","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".withoutMembers"},{"type":"text","text":": When there are no members (other leaders allowed)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".withoutLeader"},{"type":"text","text":": When there is no other leader (members allowed)"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Members"}],"type":"strong"},{"text":" can only execute when their group has active participants","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"This creates a coordination pattern where leaders start group activities","type":"text"},{"text":" ","type":"text"},{"text":"and members can only join existing group activities.","type":"text"}]},{"anchor":"Key-Features","type":"heading","level":2,"text":"Key Features"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Groups are identified by string IDs and operate independently","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiple members can execute concurrently within the same group"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Prevents duplicate execution of the same action within a group","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Groups automatically dissolve when the last member completes","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Usage-Example","type":"heading","level":2,"text":"Usage Example"},{"syntax":"swift","type":"codeListing","code":["let strategy = LockmanGroupCoordinationStrategy()","let boundaryId = \"mainScreen\"","","\/\/ Non-exclusive participant","let nonExclusiveInfo = LockmanGroupCoordinatedInfo(","  actionId: \"loadData\",","  groupId: \"dataLoading\",","  coordinationRole: .none",")","","\/\/ Leader that requires empty group","let emptyGroupLeader = LockmanGroupCoordinatedInfo(","  actionId: \"navigate\",","  groupId: \"navigation\",","  coordinationRole: .leader(.emptyGroup)",")","","\/\/ Members can join active group","let memberInfo = LockmanGroupCoordinatedInfo(","  actionId: \"showProgress\",","  groupId: \"dataLoading\",","  coordinationRole: .member",")","","\/\/ Leader that allows other leaders","let multiLeaderInfo = LockmanGroupCoordinatedInfo(","  actionId: \"secondaryLoad\",","  groupId: \"dataLoading\",","  coordinationRole: .leader(.withoutMembers)",")"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmangroupcoordinationstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I"],"generated":true,"anchor":"Type-Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared"],"generated":true,"anchor":"Type-Properties"},{"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods"}],"metadata":{"externalID":"s:7Lockman0A25GroupCoordinationStrategyC","navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Class","title":"LockmanGroupCoordinationStrategy"},"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/shared":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The shared singleton instance."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A25GroupCoordinationStrategyC","kind":"typeIdentifier","text":"LockmanGroupCoordinationStrategy"}],"title":"shared","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/init()":{"abstract":[{"type":"text","text":"Creates a new group coordination strategy instance."}],"title":"init()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/init()","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/unlock(boundaryId:info:)":{"role":"symbol","title":"unlock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/unlock(boundaryid:info:)","abstract":[{"text":"Releases locks by removing the action from all specified group coordination states.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","abstract":[{"text":"Removes all active locks across all boundaries and groups.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","title":"cleanUp()"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/canLock(boundaryId:info:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","text":"LockmanGroupCoordinatedInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"title":"canLock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/canlock(boundaryid:info:)","role":"symbol","abstract":[{"text":"Checks if locks can be acquired for group coordination based on roles and policies.","type":"text"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/strategyId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId","title":"strategyId","abstract":[{"text":"The identifier for this strategy.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/strategyid","type":"topic","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/I":{"type":"topic","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I","title":"LockmanGroupCoordinationStrategy.I","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"I"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/makeStrategyId()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Creates a strategy identifier for the group coordination strategy.","type":"text"}],"title":"makeStrategyId()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/makestrategyid()","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/lock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/lock(boundaryid:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV","kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","abstract":[{"text":"Acquires locks by registering the action in all specified group coordination states.","type":"text"}],"title":"lock(boundaryId:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","title":"LockmanGroupCoordinationStrategy","type":"topic","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/getCurrentLocks()":{"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/getcurrentlocks()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp(boundaryId:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Removes all active locks for the specified boundary across all groups."}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup(boundaryid:)","type":"topic","title":"cleanUp(boundaryId:)"}}}