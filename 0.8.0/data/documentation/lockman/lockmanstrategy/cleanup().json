{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()"},"metadata":{"title":"cleanUp()","required":true,"externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method clears all internal lock state managed by the strategy,","type":"text"},{"text":" ","type":"text"},{"text":"effectively resetting it to its initial state. Use this for:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Application shutdown sequences","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Test suite cleanup between tests","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Global system resets during development"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}],"type":"paragraph"}]}]},{"text":"Implementation Guidelines","type":"heading","anchor":"Implementation-Guidelines","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should remove all tracked locks regardless of boundary","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should not fail even if no locks are currently held"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be safe to call multiple times","type":"text"}]}]}]}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","kind":"symbol","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"required":true,"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","title":"cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"}}}