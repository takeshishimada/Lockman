{"abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The boundary identifier whose locks should be removed"}],"type":"paragraph"}],"name":"id"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Provides targeted cleanup for specific boundaries while preserving","type":"text"},{"text":" ","type":"text"},{"text":"lock state for other boundaries. This allows fine-grained control","type":"text"},{"text":" ","type":"text"},{"text":"over which priority contexts to reset.","type":"text"}]},{"level":2,"type":"heading","text":"Use Cases","anchor":"Use-Cases"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Feature-specific cleanup when components are deallocated"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"User session cleanup when users log out"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scoped cleanup for temporary contexts or workflows"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Partial system resets during development"}]}]}],"type":"unorderedList"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Instance Method","title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUp2idyx_tSHRzs8SendableRzlF","role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"method"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)"},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"references":{"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","title":"cleanUp(id:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"title":"LockmanPriorityBasedStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}]}}}