{"metadata":{"title":"cleanUp()","externalID":"s:7Lockman0A17StrategyContainerC7cleanUpyyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Lockman"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()"},"abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all registered strategies.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" method to clear any internal state. Useful for application","type":"text"},{"text":" ","type":"text"},{"text":"shutdown or global reset scenarios.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Error Handling","anchor":"Error-Handling","type":"heading"},{"inlineContent":[{"text":"If any strategyâ€™s cleanup operation fails, the error is logged but","type":"text"},{"text":" ","type":"text"},{"text":"cleanup continues for remaining strategies to ensure best-effort cleanup.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Complexity","anchor":"Complexity","type":"heading"},{"inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"cleanUp()","kind":"symbol","abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all registered strategies.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"url":"\/documentation\/lockman\/lockmanstrategycontainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","role":"symbol"}}}