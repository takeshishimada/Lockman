{"metadata":{"roleHeading":"Instance Method","title":"resolve(id:expecting:)","role":"symbol","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":" "},{"kind":"internalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type = I.self) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The strategy identifier to look up","type":"text"}]}]},{"name":"expecting","content":[{"type":"paragraph","inlineContent":[{"text":"The expected ","type":"text"},{"code":"LockmanInfo","type":"codeVoice"},{"text":" type (for type inference)","type":"text"}]}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AnyLockmanStrategy<I>","type":"codeVoice"},{"text":" wrapping the registered strategy instance","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns the type-erased strategy instance that was registered with the given ID."},{"type":"text","text":" "},{"type":"text","text":"The returned "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" provides the same interface as the original"},{"type":"text","text":" "},{"type":"text","text":"strategy but with erased concrete type information."}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LockmanRegistrationError.strategyNotRegistered"},{"type":"text","text":" if no strategy with this ID is registered"}],"type":"paragraph"}],"name":"Throws"},{"anchor":"Complexity","type":"heading","level":2,"text":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(1) - Direct hash map lookup by ID","type":"text"}]},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Safe to call concurrently from multiple threads. Resolution is atomic."}]},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"],"syntax":"swift"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","interfaceLanguage":"swift"},"abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"role":"symbol","title":"AnyLockmanStrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanInfo":{"navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"kind":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"url":"\/documentation\/lockman\/lockmaninfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"kind":"symbol","title":"resolve(id:expecting:)","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7Lockman03AnyA8StrategyV","kind":"typeIdentifier","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Resolves a registered strategy by its identifier."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"url":"\/documentation\/lockman\/lockmanstrategycontainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmanstrategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","title":"LockmanStrategyId","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}],"abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"role":"symbol"}}}