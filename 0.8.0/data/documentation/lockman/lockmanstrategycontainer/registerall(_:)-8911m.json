{"sections":[],"abstract":[{"text":"Registers multiple strategies using their own strategyIds in a single atomic operation.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-8911m","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategies","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of strategies to register"}]}],"name":"strategies"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Convenience method that uses each strategyâ€™s built-in ID property.","type":"text"},{"text":" ","type":"text"},{"text":"Either all strategies are registered successfully or none are registered.","type":"text"}]},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"LockmanError.strategyAlreadyRegistered","type":"codeVoice"},{"text":" if any ID is already registered","type":"text"}],"type":"paragraph"}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["try container.registerAll([","  LockmanSingleExecutionStrategy.shared,","  LockmanPriorityBasedStrategy.shared,","  MyCustomStrategy()","])"]}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC11registerAllyySayxGKAA0aB0RzlF","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"title":"registerAll(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-8911m"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"url":"\/documentation\/lockman\/lockmanstrategycontainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/registerAll(_:)-8911m":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-8911m","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-8911m","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"registerAll(_:)","type":"topic","abstract":[{"type":"text","text":"Registers multiple strategies using their own strategyIds in a single atomic operation."}]},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","kind":"symbol","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]}}}