{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"This method calls ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all strategies before removing them,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring proper cleanup. The container returns to its initial empty state.","type":"text"}],"type":"paragraph"},{"anchor":"Use-Cases","type":"heading","text":"Use Cases","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite reset"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management"}],"type":"paragraph"}]}]},{"anchor":"Complexity","type":"heading","text":"Complexity","level":2},{"inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"Lockman"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","symbolKind":"method","title":"removeAllStrategies()","roleHeading":"Instance Method"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"kind":"symbol","title":"removeAllStrategies()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"role":"symbol","abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"url":"\/documentation\/lockman\/lockmanstrategycontainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","role":"symbol"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"}}}