{"sections":[],"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}]}]},{"name":"info","content":[{"inlineContent":[{"text":"Lock information of type ","type":"text"},{"code":"I","type":"codeVoice"},{"text":" to be registered as active","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method should only be called after "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" returns a success result."},{"type":"text","text":" "},{"type":"text","text":"The implementation delegates to the concrete strategyâ€™s lock acquisition logic."}]},{"anchor":"Usage-Contract","type":"heading","text":"Usage Contract","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Precondition"}],"type":"strong"},{"type":"text","text":": "},{"code":"canLock(id:info:)","type":"codeVoice"},{"type":"text","text":" should return "},{"code":".success","type":"codeVoice"},{"type":"text","text":" or "},{"code":".successWithPrecedingCancellation","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Postcondition"}]},{"type":"text","text":": The lock is acquired and tracked by the underlying strategy"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Thread Safety"}]},{"type":"text","text":": Safe to call concurrently with different boundary IDs"}]}]}]},{"anchor":"State-Management","type":"heading","text":"State Management","level":2},{"type":"paragraph","inlineContent":[{"text":"The concrete strategy is responsible for updating its internal state to track","type":"text"},{"text":" ","type":"text"},{"text":"the acquired lock. This wrapper does not add any additional state management.","type":"text"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"metadata":{"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman03AnyA8StrategyV4lock2id4infoyqd___xtSHRd__s8SendableRd__lF","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"role":"symbol","title":"AnyLockmanStrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(id:info:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","kind":"symbol","type":"topic","title":"lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"}}}