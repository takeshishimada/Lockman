{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method","title":"cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF"},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This method provides a global reset mechanism by clearing all internal lock state","type":"text"},{"text":" ","type":"text"},{"text":"from the underlying strategy. Itâ€™s typically used during:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown sequences"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite cleanup between test cases"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency reset scenarios during development"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory pressure response","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Scope-of-Operation","text":"Scope of Operation","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This method affects "},{"type":"strong","inlineContent":[{"text":"all boundaries","type":"text"}]},{"type":"text","text":" managed by the underlying strategy,"},{"type":"text","text":" "},{"type":"text","text":"not just those accessed through this particular wrapper instance."}],"type":"paragraph"},{"anchor":"Thread-Safety","text":"Thread Safety","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The operation is atomic with respect to other strategy operations, but"},{"type":"text","text":" "},{"type":"text","text":"callers should be aware that concurrent operations may be affected."}],"type":"paragraph"},{"anchor":"Side-Effects","text":"Side Effects","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"All active locks are immediately released"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock state tracking is reset to initial conditions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pending operations may receive unexpected unlock notifications"}]}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"type":"topic","title":"cleanUp()"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"role":"symbol","title":"AnyLockmanStrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}]}}}