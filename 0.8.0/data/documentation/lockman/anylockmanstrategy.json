{"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Lockman03AnyA8StrategyV","title":"AnyLockmanStrategy","modules":[{"name":"Lockman"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()"],"generated":true,"title":"Type Methods","anchor":"Type-Methods"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Purpose","anchor":"Purpose"},{"inlineContent":[{"type":"codeVoice","code":"AnyLockmanStrategy"},{"text":" solves the fundamental problem of storing different concrete","type":"text"},{"text":" ","type":"text"},{"text":"strategy implementations in the same collection. Without type erasure, you cannot","type":"text"},{"text":" ","type":"text"},{"text":"store ","type":"text"},{"type":"codeVoice","code":"LockmanSingleExecutionStrategy"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"LockmanPriorityBasedStrategy"},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"same array, even though they both conform to ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Key Benefits","anchor":"Key-Benefits"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Heterogeneous Collections","type":"text"}],"type":"strong"},{"type":"text","text":": Store different strategy implementations together"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Runtime Strategy Selection","type":"text"}],"type":"strong"},{"text":": Choose strategies dynamically based on conditions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"API Boundaries"}]},{"type":"text","text":": Hide concrete strategy types from public interfaces"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Dependency Injection","type":"text"}],"type":"strong"},{"text":": Enable flexible strategy registration and resolution","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Universal Compatibility","type":"text"}],"type":"strong"},{"text":": Support both class and struct strategy implementations","type":"text"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","text":"Type Safety Guarantees","anchor":"Type-Safety-Guarantees"},{"inlineContent":[{"type":"text","text":"While the concrete strategy type is erased, type safety for lock information "},{"type":"codeVoice","code":"I"},{"type":"text","text":" "},{"type":"text","text":"is preserved at the "},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"type":"text","text":" level. This means you cannot accidentally"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"LockmanSingleExecutionInfo"},{"type":"text","text":" with a priority-based strategy wrapper."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Performance Considerations","anchor":"Performance-Considerations"},{"inlineContent":[{"text":"Type erasure introduces a small runtime overhead due to function pointer indirection.","type":"text"},{"text":" ","type":"text"},{"text":"However, this cost is typically negligible compared to the actual locking operations","type":"text"},{"text":" ","type":"text"},{"text":"and is justified by the flexibility gained.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanInfo":{"navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"kind":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"url":"\/documentation\/lockman\/lockmaninfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"role":"symbol","title":"AnyLockmanStrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(id:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","kind":"symbol","title":"unlock(id:info:)","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(id:info:)":{"url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)","kind":"symbol","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"title":"canLock(id:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(id:info:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","kind":"symbol","type":"topic","title":"lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","abstract":[{"text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"type":"topic","title":"cleanUp()"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/strategyId":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId","title":"strategyId","abstract":[{"text":"The identifier for this type-erased strategy.","type":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/strategyid"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","kind":"symbol","abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/makeStrategyId()":{"type":"topic","title":"makeStrategyId()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()","url":"\/documentation\/lockman\/anylockmanstrategy\/makestrategyid()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"abstract":[{"type":"text","text":"Creates a strategy identifier for the type-erased strategy."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}