{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"]}],"sections":[],"abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","kind":"typeIdentifier","text":"LockmanAction","preciseIdentifier":"s:7Lockman0A6ActionP"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Conforming types can create lock info with custom conditions that are evaluated at runtime.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Example","type":"heading","anchor":"Example"},{"syntax":"swift","code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .failure(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"title":"LockmanDynamicConditionAction","modules":[{"name":"Lockman"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:7Lockman0A22DynamicConditionActionP","symbolKind":"protocol","role":"symbol"},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"references":{"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","required":true,"role":"symbol","title":"actionName","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actionName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"text":"The name of the action, typically the enum case name.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"type":"topic","abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"title":"LockmanDynamicConditionAction","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","url":"\/documentation\/lockman\/lockmandynamicconditionaction"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanAction":{"abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"url":"\/documentation\/lockman\/lockmanaction","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","title":"LockmanAction","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanAction"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanAction"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"defaultImplementations":1,"title":"with(condition:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","type":"topic","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier"}],"abstract":[{"text":"Creates lock info with a custom condition.","type":"text"}],"kind":"symbol"}}}