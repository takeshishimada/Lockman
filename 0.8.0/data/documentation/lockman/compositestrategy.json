{"seeAlsoSections":[{"title":"Strategies","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy"],"anchor":"Strategies","generated":true}],"sections":[],"abstract":[{"text":"Combine multiple strategies for complex control scenarios.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"CompositeStrategy is a strategy that combines multiple strategies to achieve more complex and advanced exclusive control. For complex requirements that cannot be addressed by a single strategy, you can build flexible and powerful control logic by combining 2 to 5 strategies."}]},{"type":"paragraph","inlineContent":[{"text":"This strategy is used in advanced use cases that require satisfying multiple control conditions simultaneously.","type":"text"}]},{"type":"heading","anchor":"Combination-System","text":"Combination System","level":2},{"type":"heading","anchor":"Number-of-Strategy-Combinations","text":"Number of Strategy Combinations","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lockman supports combinations of 2 to 5 strategies:"}]},{"type":"heading","anchor":"Combination-Control-Logic","text":"Combination Control Logic","level":3},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Success required in all strategies","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Success only when lock acquisition is possible in all component strategies","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If even one fails, the entire operation fails"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Coordination of preceding cancellation","type":"text"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"When any strategy requires preceding cancellation, execute preceding cancellation for all","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use the first cancellation error found","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"LIFO (Last In, First Out) release"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock release is executed in reverse order of acquisition"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Release from the last acquired lock in order"}]}]}]},{"type":"heading","anchor":"Usage","text":"Usage","level":2},{"type":"heading","anchor":"Basic-Usage-Example","text":"Basic Usage Example","level":3},{"type":"codeListing","code":["@LockmanCompositeStrategy(","    LockmanSingleExecutionStrategy.self,","    LockmanPriorityBasedStrategy.self",")","enum Action {","    case criticalSave","    case normalSave","    ","    var lockmanInfoForStrategy1: LockmanSingleExecutionInfo {","        LockmanSingleExecutionInfo(","            actionId: actionName,","            mode: .action","        )","    }","    ","    var lockmanInfoForStrategy2: LockmanPriorityBasedInfo {","        switch self {","        case .criticalSave:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSave:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        }","    }","}"],"syntax":"swift"},{"type":"heading","anchor":"Combining-3-Strategies","text":"Combining 3 Strategies","level":3},{"type":"codeListing","code":["@LockmanCompositeStrategy(","    LockmanSingleExecutionStrategy.self,","    LockmanPriorityBasedStrategy.self,","    LockmanConcurrencyLimitedStrategy.self",")","enum Action {","    case downloadFile","    ","    var lockmanInfoForStrategy1: LockmanSingleExecutionInfo {","        LockmanSingleExecutionInfo(","            actionId: actionName,","            mode: .action \/\/ Prevent duplication","        )","    }","    ","    var lockmanInfoForStrategy2: LockmanPriorityBasedInfo {","        LockmanPriorityBasedInfo(","            actionId: actionName,","            priority: .low(.replaceable) \/\/ Priority control","        )","    }","    ","    var lockmanInfoForStrategy3: LockmanConcurrencyLimitedInfo {","        LockmanConcurrencyLimitedInfo(","            actionId: actionName,","            concurrencyId: \"downloads\",","            limit: .limited(3) \/\/ Concurrent execution limit","        )","    }","}"],"syntax":"swift"},{"type":"heading","anchor":"Operation-Examples","text":"Operation Examples","level":2},{"type":"heading","anchor":"Operation-with-2-Strategy-Combination","text":"Operation with 2 Strategy Combination","level":3},{"type":"codeListing","code":["Strategy 1: SingleExecution(.action)","Strategy 2: PriorityBased(.high(.exclusive))","","Time: 0s  - normalSave request","  Strategy 1: ✅ Success (no duplication)","  Strategy 2: ✅ Success (no priority issue)","  Result: ✅ Start execution","","Time: 1s  - normalSave request (duplicate)","  Strategy 1: ❌ Fail (same action running)","  Strategy 2: No check (failed at strategy 1)","  Result: ❌ Overall failure","","Time: 2s  - criticalSave request (high priority)","  Strategy 1: ✅ Success (different action)","  Strategy 2: ✅ Success (with preceding cancellation)","  Result: ✅ Start execution (cancel normalSave)"],"syntax":null},{"type":"heading","anchor":"Operation-with-3-Strategy-Combination","text":"Operation with 3 Strategy Combination","level":3},{"type":"codeListing","code":["Strategy 1: SingleExecution(.action)","Strategy 2: PriorityBased(.low(.replaceable))  ","Strategy 3: ConcurrencyLimited(.limited(2))","","Current situation: 2 download processes running","","Time: 0s  - New download request","  Strategy 1: ✅ Success (different file)","  Strategy 2: ✅ Success (no priority issue)","  Strategy 3: ❌ Fail (concurrent execution limit reached)","  Result: ❌ Overall failure"],"syntax":null},{"type":"heading","anchor":"Error-Handling","text":"Error Handling","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For errors that may occur with CompositeStrategy and their solutions, please also refer to the common patterns on the "},{"overridingTitleInlineContent":[{"type":"text","text":"Error Handling"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","isActive":true,"overridingTitle":"Error Handling"},{"type":"text","text":" page."}]},{"type":"heading","anchor":"Error-Handling-in-Composite-Strategy","text":"Error Handling in Composite Strategy","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"In composite strategies, errors from each component strategy are integrated and reported. Since the error from the first failed strategy is returned, check the error type and handle appropriately:"}]},{"type":"codeListing","code":["lockFailure: { error, send in","    switch error {","    case let singleError as LockmanSingleExecutionError:","        send(.singleExecutionConflict(\"Duplicate execution detected\"))","        ","    case let priorityError as LockmanPriorityBasedError:","        send(.priorityConflict(\"Priority conflict occurred\"))","        ","    case let concurrencyError as LockmanConcurrencyLimitedError:","        send(.concurrencyLimitReached(\"Concurrent execution limit reached\"))","        ","    default:","        send(.unknownLockFailure(\"Failed to acquire lock\"))","    }","}"],"syntax":"swift"},{"type":"heading","anchor":"Design-Guidelines","text":"Design Guidelines","level":2},{"type":"heading","anchor":"Strategy-Selection-Order","text":"Strategy Selection Order","level":3},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Start with basic control","type":"text"}]},{"text":": Begin with SingleExecution","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Add if priority is needed","type":"text"}],"type":"strong"},{"text":": Combine PriorityBased","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Add if resource control is needed","type":"text"}],"type":"strong"},{"text":": Combine ConcurrencyLimited","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add if coordination control is needed"}]},{"type":"text","text":": Combine GroupCoordination"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Add if custom logic is needed","type":"text"}]},{"type":"text","text":": Combine DynamicCondition"}]}]}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","variants":[{"paths":["\/documentation\/lockman\/compositestrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Lockman"}],"title":"CompositeStrategy","role":"article","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"url":"\/documentation\/lockman\/dynamicconditionstrategy","title":"DynamicConditionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","role":"article","abstract":[{"type":"text","text":"Control actions based on runtime conditions."}],"kind":"article","type":"topic"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","url":"\/documentation\/lockman\/prioritybasedstrategy","role":"article","kind":"article","type":"topic","abstract":[{"text":"Control action execution based on priority levels.","type":"text"}],"title":"PriorityBasedStrategy"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","kind":"article","title":"Error Handling","type":"topic","role":"article","url":"\/documentation\/lockman\/errorhandling"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"url":"\/documentation\/lockman\/concurrencylimitedstrategy","title":"ConcurrencyLimitedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","role":"article","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"kind":"article","type":"topic"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}],"title":"SingleExecutionStrategy","role":"article","type":"topic","kind":"article"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"url":"\/documentation\/lockman\/groupcoordinationstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"title":"GroupCoordinationStrategy","role":"article","type":"topic","kind":"article"}}}