{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}],"type":"paragraph"}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lock information containing the action ID and execution mode"}]}],"name":"info"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior depends on the execution mode specified in the info:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".none"},{"type":"text","text":": Always returns "},{"type":"codeVoice","code":".success"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Returns ","type":"text"},{"code":".failure","type":"codeVoice"},{"text":" if any lock exists in the boundary","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".action","type":"codeVoice"},{"type":"text","text":": Returns "},{"code":".failure","type":"codeVoice"},{"type":"text","text":" if a lock with the same action ID exists"}]}]}]},{"anchor":"Example","type":"heading","text":"Example","level":2},{"syntax":"swift","type":"codeListing","code":["let strategy = LockmanSingleExecutionStrategy()","let info1 = LockmanSingleExecutionInfo(mode: .boundary)","let info2 = LockmanSingleExecutionInfo(mode: .action)","","strategy.lock(id: boundary, info: info1)","strategy.canLock(id: boundary, info: info2) \/\/ Result depends on mode and actionId"]}]}],"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and action."}],"metadata":{"title":"canLock(id:info:)","modules":[{"name":"Lockman"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"externalID":"s:7Lockman0A23SingleExecutionStrategyC7canLock2id4infoAA0A6ResultOx_AA0abC4InfoVtSHRzs8SendableRzlF","roleHeading":"Instance Method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"title":"LockmanSingleExecutionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","role":"symbol","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"type":"topic","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"navigatorTitle":[{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"type":"topic","title":"LockmanSingleExecutionInfo","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanResult":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","abstract":[{"text":"The result of attempting to acquire a lock.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmanresult","kind":"symbol","title":"LockmanResult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/canLock(id:info:)":{"kind":"symbol","title":"canLock(id:info:)","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)","type":"topic","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and action."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}]},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"}}}