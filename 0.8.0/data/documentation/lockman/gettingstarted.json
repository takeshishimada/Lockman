{"seeAlsoSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"anchor":"Essentials","title":"Essentials","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/gettingstarted"]}],"sections":[],"abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted"},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This guide will teach you how to integrate Lockman into your The Composable Architecture (TCA) project and implement your first feature."}]},{"type":"heading","text":"Adding Lockman as a dependency","level":2,"anchor":"Adding-Lockman-as-a-dependency"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use Lockman in a Swift Package Manager project, add it to the dependencies in your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" file:"}]},{"type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/takeshishimada\/Lockman\", from: \"0.8.0\")","]"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And add "},{"type":"codeVoice","code":"Lockman"},{"type":"text","text":" as a dependency of your package’s target:"}]},{"type":"codeListing","code":[".target(","  name: \"YourTarget\",","  dependencies: [","    \"Lockman\",","    .product(name: \"ComposableArchitecture\", package: \"swift-composable-architecture\")","  ]",")"],"syntax":"swift"},{"type":"heading","text":"Writing your first feature","level":2,"anchor":"Writing-your-first-feature"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s implement a feature that prevents duplicate execution of processes using the "},{"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","overridingTitleInlineContent":[{"type":"codeVoice","code":"@LockmanSingleExecution"}],"isActive":true,"overridingTitle":"@LockmanSingleExecution"},{"type":"text","text":" macro."}]},{"type":"heading","text":"Step 1: Define the Reducer","level":3,"anchor":"Step-1-Define-the-Reducer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First, define the basic Reducer structure:"}]},{"code":["import ComposableArchitecture","import Lockman","","@Reducer","struct ProcessFeature {","}"],"type":"codeListing","syntax":"swift"},{"text":"Step 2: Define State and Action","anchor":"Step-2-Define-State-and-Action","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Define the State to manage the processing status and the available actions:"}],"type":"paragraph"},{"code":["@Reducer","struct ProcessFeature {","    @ObservableState","    struct State: Equatable {","        var isProcessing = false","        var message = \"\"","    }","    ","    @LockmanSingleExecution","    enum Action {","        case startProcessButtonTapped","        case processStart","        case processCompleted","        ","        var lockmanInfo: LockmanSingleExecutionInfo {","            switch self {","            case .startProcessButtonTapped:","                return .init(actionId: actionName, mode: .boundary)","            case .processStart, .processCompleted:","                return .init(actionId: actionName, mode: .none)","            }","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Key points:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Applying the ","type":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","isActive":true,"overridingTitle":"@LockmanSingleExecution","overridingTitleInlineContent":[{"code":"@LockmanSingleExecution","type":"codeVoice"}],"type":"reference"},{"text":" macro to the Action enum makes it conform to the ","type":"text"},{"code":"LockmanSingleExecutionAction","type":"codeVoice"},{"text":" protocol","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"lockmanInfo"},{"type":"text","text":" property defines how each action is controlled for locking:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Control parameter configuration: Specifies strategy-specific behavior settings (priority, concurrency limits, group coordination rules, etc.)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Action identification: Provides the action identifier within the lock management system","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Inter-strategy coordination: Defines parameters to pass to each strategy when using composite strategies"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"text":"Step 3: Define CancelID","anchor":"Step-3-Define-CancelID","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Define a "},{"type":"codeVoice","code":"CancelID"},{"type":"text","text":" to use as the cancellation identifier for Effects:"}],"type":"paragraph"},{"code":["extension ProcessFeature {","    enum CancelID {","        case userAction","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"codeVoice","code":"CancelID"},{"type":"text","text":" is used for Effect cancellation and lock boundary identification."}],"type":"paragraph"},{"anchor":"Step-4-Implement-the-Reducer-body","text":"Step 4: Implement the Reducer body","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement processing with exclusive control using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitleInlineContent":[{"code":"withLock","type":"codeVoice"}],"overridingTitle":"withLock"},{"type":"text","text":" method:"}]},{"code":["var body: some Reducer<State, Action> {","    Reduce { state, action in","        switch action {","        case .startProcessButtonTapped:","            return .withLock(","                operation: { send in","                    await send(.processStart)","                    \/\/ Simulate heavy processing","                    try await Task.sleep(nanoseconds: 3_000_000_000)","                    await send(.processCompleted)","                },","                lockFailure: { error, send in","                    \/\/ When processing is already in progress","                    state.message = \"Processing is already in progress\"","                },","                action: action,","                cancelID: CancelID.userAction","            )","            ","        case .processStart:","            state.isProcessing = true","            state.message = \"Processing started...\"","            return .none","            ","        case .processCompleted:","            state.isProcessing = false","            state.message = \"Processing completed\"","            return .none","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Key points about the "},{"type":"reference","overridingTitle":"withLock","isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"withLock"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},{"type":"text","text":" method:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"operation"},{"type":"text","text":": Defines the processing to be executed under exclusive control"}]}]},{"content":[{"inlineContent":[{"code":"lockFailure","type":"codeVoice"},{"text":": Handler called when the same processing is already in progress","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"action","type":"codeVoice"},{"text":": Passes the currently processing action","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"cancelID"},{"type":"text","text":": Specifies the identifier for Effect cancellation and lock boundary"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With this implementation, the "},{"type":"codeVoice","code":"startProcessButtonTapped"},{"type":"text","text":" action will not be executed again while processing, making it safe even if the user accidentally taps the button multiple times."}]}],"kind":"content"}],"kind":"article","metadata":{"modules":[{"name":"Lockman"}],"role":"article","roleHeading":"Article","title":"Getting Started"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","kind":"article","title":"Error Handling","type":"topic","role":"article","url":"\/documentation\/lockman\/errorhandling"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/Lock":{"abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}],"kind":"article","title":"Lock","role":"article","type":"topic","url":"\/documentation\/lockman\/lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide","type":"topic","kind":"article","role":"article"},"doc://Lockman/documentation/Lockman/Unlock":{"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}],"kind":"article","url":"\/documentation\/lockman\/unlock","type":"topic","title":"Unlock"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"role":"article","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","type":"topic","url":"\/documentation\/lockman\/boundaryoverview","title":"Boundary","kind":"article"},"doc://Lockman/documentation/Lockman/Configuration":{"abstract":[{"type":"text","text":"Configure Lockman for your application’s needs."}],"kind":"article","url":"\/documentation\/lockman\/configuration","type":"topic","title":"Configuration","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}],"title":"SingleExecutionStrategy","role":"article","type":"topic","kind":"article"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"url":"\/documentation\/lockman\/choosingstrategy","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","title":"Choosing a Strategy","role":"article","type":"topic"}}}