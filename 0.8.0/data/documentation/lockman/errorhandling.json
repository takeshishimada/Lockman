{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/errorhandling"]}],"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"metadata":{"role":"article","modules":[{"name":"Lockman"}],"title":"Error Handling","roleHeading":"Article"},"seeAlsoSections":[{"anchor":"Essentials","title":"Essentials","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"text":"Lockman provides detailed error information according to each strategy. This page explains error handling patterns common to all strategies and how to implement effective error handling.","type":"text"}],"type":"paragraph"},{"text":"Common Error Handling Patterns","type":"heading","anchor":"Common-Error-Handling-Patterns","level":2},{"text":"lockFailure Handler","type":"heading","anchor":"lockFailure-Handler","level":3},{"inlineContent":[{"text":"Basic lockFailure handler structure used in all strategies:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":[".withLock(","    operation: { send in","        \/\/ Execute processing","    },","    lockFailure: { error, send in","        \/\/ Error handling","        if case .specificError(let info) = error as? StrategySpecificError {","            send(.userFriendlyMessage(\"Error message\"))","        }","    },","    action: action,","    cancelID: cancelID",")"]},{"inlineContent":[{"inlineContent":[{"text":"Parameters:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"error","type":"codeVoice"},{"type":"text","text":": The error that occurred (strategy-specific error type)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"send"},{"type":"text","text":": Function for sending feedback to the user"}],"type":"paragraph"}]}]},{"text":"catch handler Pattern","type":"heading","anchor":"catch-handler-Pattern","level":3},{"inlineContent":[{"text":"Handling general errors that occur during processing:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["catch handler: { error, send in","    send(.operationError(error.localizedDescription))","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This handler catches errors thrown within the operation and appropriately notifies the user."}]},{"anchor":"Types-of-Errors-and-Solutions","level":2,"type":"heading","text":"Types of Errors and Solutions"},{"anchor":"1-Lock-Acquisition-Failure-Already-Locked","level":3,"type":"heading","text":"1. Lock Acquisition Failure (Already Locked)"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Concept"}]},{"type":"text","text":": Occurs when the same processing or boundary is already running"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Common solutions","type":"text"}],"type":"strong"},{"text":":","type":"text"}]},{"code":["lockFailure: { error, send in","    \/\/ Notify user that processing is in progress","    send(.showMessage(\"Processing is in progress\"))","    ","    \/\/ Or provide visual feedback in UI","    send(.setButtonState(.loading))","}"],"type":"codeListing","syntax":"swift"},{"anchor":"2-PermissionPriority-Conflicts","level":3,"type":"heading","text":"2. Permission\/Priority Conflicts"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Concept"}]},{"type":"text","text":": Occurs due to higher priority processing or group rule constraints"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Common solutions"}],"type":"strong"},{"text":":","type":"text"}]},{"code":["lockFailure: { error, send in","    \/\/ Understand the situation from errors containing detailed information","    if let conflictInfo = extractConflictInfo(from: error) {","        send(.showMessage(\"Another important process is running: \\(conflictInfo.description)\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"3-Cancellation-Notification","type":"heading","level":3,"text":"3. Cancellation Notification"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Concept"}],"type":"strong"},{"type":"text","text":": When existing processing is cancelled by higher priority processing"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Common solutions","type":"text"}],"type":"strong"},{"text":":","type":"text"}]},{"code":["catch handler: { error, send in","    if error is CancellationError {","        send(.processCancelled(\"Interrupted by a more important process\"))","    } else {","        send(.processError(error.localizedDescription))","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Best-Practices","type":"heading","level":2,"text":"Best Practices"},{"anchor":"1-Proper-Error-Type-Casting","type":"heading","level":3,"text":"1. Proper Error Type Casting"},{"code":["\/\/ ✅ Good example: Cast to strategy-specific error type","if case .actionAlreadyRunning(let existingInfo) = error as? LockmanSingleExecutionError {","    \/\/ Use existingInfo to provide detailed information","}","","\/\/ ❌ Bad example: Treat error as string","send(.showError(error.localizedDescription))"],"type":"codeListing","syntax":"swift"},{"anchor":"2-User-Friendly-Messages","type":"heading","level":3,"text":"2. User-Friendly Messages"},{"code":["\/\/ ✅ Good example: Specific and easy to understand message","send(.showMessage(\"Saving data. Please wait a moment.\"))","","\/\/ ❌ Bad example: Technical error message","send(.showMessage(\"LockmanError: boundary locked\"))"],"type":"codeListing","syntax":"swift"},{"anchor":"3-Utilizing-Additional-Information","type":"heading","level":3,"text":"3. Utilizing Additional Information"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many errors contain additional information:"}]},{"code":["lockFailure: { error, send in","    switch error as? LockmanConcurrencyLimitedError {","    case .concurrencyLimitReached(let current, let limit, _):","        send(.showMessage(\"Concurrent execution limit (\\(limit)) reached (current: \\(current))\"))","    default:","        send(.showMessage(\"Cannot start processing\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Strategy-Specific-Errors","type":"heading","level":2,"text":"Strategy-Specific Errors"},{"type":"paragraph","inlineContent":[{"text":"For detailed error information for each strategy, please refer to their respective documentation:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"SingleExecutionStrategy"}],"overridingTitle":"SingleExecutionStrategy"},{"type":"text","text":" - Duplicate execution errors"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"PriorityBasedStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","isActive":true,"overridingTitle":"PriorityBasedStrategy"},{"text":" - Priority conflict errors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","type":"reference","overridingTitle":"GroupCoordinationStrategy","overridingTitleInlineContent":[{"text":"GroupCoordinationStrategy","type":"text"}],"isActive":true},{"type":"text","text":" - Group rule violation errors"}]}]},{"content":[{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"ConcurrencyLimitedStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","isActive":true,"type":"reference","overridingTitle":"ConcurrencyLimitedStrategy"},{"text":" - Concurrent execution limit exceeded errors","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","type":"reference","isActive":true,"overridingTitle":"DynamicConditionStrategy","overridingTitleInlineContent":[{"text":"DynamicConditionStrategy","type":"text"}]},{"type":"text","text":" - Condition mismatch errors"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"overridingTitle":"CompositeStrategy","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"CompositeStrategy"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"},{"type":"text","text":" - Composite strategy errors"}],"type":"paragraph"}]}]}]}],"sections":[],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}],"title":"SingleExecutionStrategy","role":"article","type":"topic","kind":"article"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"url":"\/documentation\/lockman\/concurrencylimitedstrategy","title":"ConcurrencyLimitedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","role":"article","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"kind":"article","type":"topic"},"doc://Lockman/documentation/Lockman/GettingStarted":{"title":"Getting Started","kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}],"role":"article","url":"\/documentation\/lockman\/gettingstarted","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"url":"\/documentation\/lockman\/choosingstrategy","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","title":"Choosing a Strategy","role":"article","type":"topic"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"url":"\/documentation\/lockman\/groupcoordinationstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"title":"GroupCoordinationStrategy","role":"article","type":"topic","kind":"article"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"role":"article","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","type":"topic","url":"\/documentation\/lockman\/boundaryoverview","title":"Boundary","kind":"article"},"doc://Lockman/documentation/Lockman/Configuration":{"abstract":[{"type":"text","text":"Configure Lockman for your application’s needs."}],"kind":"article","url":"\/documentation\/lockman\/configuration","type":"topic","title":"Configuration","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"url":"\/documentation\/lockman\/dynamicconditionstrategy","title":"DynamicConditionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","role":"article","abstract":[{"type":"text","text":"Control actions based on runtime conditions."}],"kind":"article","type":"topic"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide","type":"topic","kind":"article","role":"article"},"doc://Lockman/documentation/Lockman/Unlock":{"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}],"kind":"article","url":"\/documentation\/lockman\/unlock","type":"topic","title":"Unlock"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","url":"\/documentation\/lockman\/prioritybasedstrategy","role":"article","kind":"article","type":"topic","abstract":[{"text":"Control action execution based on priority levels.","type":"text"}],"title":"PriorityBasedStrategy"},"doc://Lockman/documentation/Lockman/Lock":{"abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}],"kind":"article","title":"Lock","role":"article","type":"topic","url":"\/documentation\/lockman\/lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"type":"topic","kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","url":"\/documentation\/lockman\/compositestrategy","abstract":[{"text":"Combine multiple strategies for complex control scenarios.","type":"text"}],"title":"CompositeStrategy"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"}}}