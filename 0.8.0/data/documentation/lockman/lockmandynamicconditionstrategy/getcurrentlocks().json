{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo"},{"kind":"text","text":"]]"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"Dictionary of boundary IDs to their active locks","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Provides a snapshot of all currently held locks across all boundaries."},{"type":"text","text":" "},{"type":"text","text":"The returned dictionary maps boundary identifiers to their active lock information."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"]]},"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"Lockman"}],"title":"getCurrentLocks()","externalID":"s:7Lockman0A24DynamicConditionStrategyC15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"symbolKind":"method"},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanInfo":{"navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"kind":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"url":"\/documentation\/lockman\/lockmaninfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman":{"title":"Lockman","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}],"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","kind":"symbol","title":"getCurrentLocks()","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","title":"LockmanDynamicConditionStrategy","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"url":"\/documentation\/lockman\/anylockmanboundaryid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","type":"topic","role":"symbol","title":"AnyLockmanBoundaryId","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":", allowing heterogeneous boundary IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}]}}}