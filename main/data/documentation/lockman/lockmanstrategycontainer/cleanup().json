{"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"text":" method to clear any internal state. Useful for application","type":"text"},{"text":" ","type":"text"},{"text":"shutdown or global reset scenarios.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Error Handling","type":"heading","anchor":"Error-Handling"},{"inlineContent":[{"text":"This operation is designed to be safe and cannot fail. Individual strategy","type":"text"},{"text":" ","type":"text"},{"text":"cleanup operations are expected to handle their own cleanup gracefully.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Complexity","type":"heading","anchor":"Complexity"},{"inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC7cleanUpyyF","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"title":"cleanUp()","role":"symbol"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" on all registered strategies."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp()":{"kind":"symbol","role":"symbol","abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all registered strategies.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"title":"cleanUp()","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"type":"topic","title":"LockmanStrategyContainer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","kind":"symbol","role":"collection"}}}