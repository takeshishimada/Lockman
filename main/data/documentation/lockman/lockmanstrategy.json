{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"modules":[{"name":"Lockman"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy","roleHeading":"Protocol","externalID":"s:7Lockman0A8StrategyP","role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/Lockman\/s8SendableP"]},{"type":"conformingTypes","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"kind":"relationships","title":"Conforming Types"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}],"type":"paragraph"},{"text":"Strategy Types","level":2,"anchor":"Strategy-Types","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Single Execution"}]},{"type":"text","text":": Prevents concurrent execution of the same action"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Priority-Based","type":"text"}],"type":"strong"},{"text":": Allows higher priority actions to preempt lower priority ones","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Composite","type":"text"}]},{"type":"text","text":": Combines multiple strategies for complex coordination"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Implementation Guidelines","level":2,"anchor":"Implementation-Guidelines","type":"heading"},{"inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Thread Safety","level":2,"anchor":"Thread-Safety","type":"heading"},{"inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}],"type":"paragraph"},{"text":"Example Implementation","level":2,"anchor":"Example-Implementation","type":"heading"},{"syntax":"swift","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(boundaryId: B, info: I) -> LockmanStrategyResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(boundaryId: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(boundaryId: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(boundaryId: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"title":"Associated Types","anchor":"Associated-Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)"],"generated":true},{"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"generated":true}],"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"title":"LockmanGroupCoordinationStrategy","kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(boundaryId:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":") -> ","kind":"text"},{"text":"LockmanStrategyResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A14StrategyResultO"}],"title":"canLock(boundaryId:info:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired without actually acquiring it."}],"required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"url":"\/documentation\/lockman\/lockmanstrategy\/i","role":"symbol","title":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"required":true,"kind":"symbol","type":"topic"},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy","type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(boundaryId:info:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(boundaryid:info:)","type":"topic","title":"unlock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"title":"LockmanCompositeStrategy2","role":"symbol","kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 2 different strategies.","type":"text"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmancompositestrategy2","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","type":"topic","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"kind":"symbol","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(boundaryId:info:)":{"abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"required":true,"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"lock(boundaryId:info:)","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(boundaryId:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(boundaryid:)","abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","required":true,"title":"cleanUp(boundaryId:)","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"title":"AnyLockmanStrategy","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","type":"topic","title":"LockmanConcurrencyLimitedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"title":"LockmanCompositeStrategy4","url":"\/documentation\/lockman\/lockmancompositestrategy4","abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","role":"symbol","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"type":"topic","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","title":"cleanUp()","kind":"symbol","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()"},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"type":"topic","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","title":"strategyId","kind":"symbol","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"title":"LockmanCompositeStrategy5","type":"topic","kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"url":"\/documentation\/lockman\/lockmancompositestrategy5"},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"title":"makeStrategyId()","abstract":[{"text":"Creates a strategy identifier for this strategy type.","type":"text"}],"required":true,"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","kind":"symbol","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"role":"symbol","title":"getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","type":"topic","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"required":true},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","url":"\/documentation\/lockman\/lockmancompositestrategy3","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"title":"LockmanCompositeStrategy3","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"abstract":[{"text":"A composite strategy that coordinates locking between 3 different strategies.","type":"text"}]}}}