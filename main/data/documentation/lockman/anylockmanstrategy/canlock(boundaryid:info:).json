{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)"]}],"kind":"symbol","abstract":[{"text":"Checks if a lock can be acquired for the given boundary and information.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A14StrategyResultO","text":"LockmanStrategyResult","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}]}],"name":"boundaryId"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock information of type "},{"type":"codeVoice","code":"I"}]}],"name":"info"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LockmanStrategyResult"},{"type":"text","text":" indicating whether the lock can be acquired"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This method delegates to the concrete strategyâ€™s implementation through the"},{"type":"text","text":" "},{"type":"text","text":"captured closure, maintaining identical behavior while hiding the concrete type."}],"type":"paragraph"},{"text":"Delegation Pattern","level":2,"anchor":"Delegation-Pattern","type":"heading"},{"inlineContent":[{"type":"text","text":"The type-erased wrapper acts as a transparent proxy, forwarding all calls to the"},{"type":"text","text":" "},{"type":"text","text":"underlying concrete strategy without modification. This ensures that the behavior"},{"type":"text","text":" "},{"type":"text","text":"is identical to calling the concrete strategy directly."}],"type":"paragraph"},{"text":"Error Handling","level":2,"anchor":"Error-Handling","type":"heading"},{"inlineContent":[{"type":"text","text":"Any errors thrown by the concrete strategy are propagated unchanged through this wrapper."},{"type":"text","text":" "},{"type":"text","text":"The wrapper does not add its own error handling or modification."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"metadata":{"externalID":"s:7Lockman03AnyA8StrategyV7canLock10boundaryId4infoAA0aC6ResultOqd___xtSHRd__s8SendableRd__lF","title":"canLock(boundaryId:info:)","modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanStrategyResult","preciseIdentifier":"s:7Lockman0A14StrategyResultO"}]},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"title":"AnyLockmanStrategy","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyResult":{"kind":"symbol","abstract":[{"type":"text","text":"The result of checking lock feasibility (used by strategy canLock methods)."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyResult","title":"LockmanStrategyResult","url":"\/documentation\/lockman\/lockmanstrategyresult","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyResult"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyResult"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","kind":"symbol","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(boundaryId:info:)":{"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanStrategyResult","preciseIdentifier":"s:7Lockman0A14StrategyResultO"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","type":"topic","role":"symbol","kind":"symbol"}}}