{"metadata":{"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"roleHeading":"Structure","symbolKind":"struct","role":"symbol","externalID":"s:7Lockman03AnyA8StrategyV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"title":"AnyLockmanStrategy"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods"}],"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Purpose","anchor":"Purpose"},{"inlineContent":[{"code":"AnyLockmanStrategy","type":"codeVoice"},{"type":"text","text":" solves the fundamental problem of storing different concrete"},{"type":"text","text":" "},{"type":"text","text":"strategy implementations in the same collection. Without type erasure, you cannot"},{"type":"text","text":" "},{"type":"text","text":"store "},{"code":"LockmanSingleExecutionStrategy","type":"codeVoice"},{"type":"text","text":" and "},{"code":"LockmanPriorityBasedStrategy","type":"codeVoice"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"same array, even though they both conform to "},{"code":"LockmanStrategy","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Key Benefits","anchor":"Key-Benefits"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Heterogeneous Collections","type":"text"}],"type":"strong"},{"text":": Store different strategy implementations together","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Runtime Strategy Selection","type":"text"}],"type":"strong"},{"text":": Choose strategies dynamically based on conditions","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"API Boundaries","type":"text"}]},{"type":"text","text":": Hide concrete strategy types from public interfaces"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dependency Injection"}]},{"type":"text","text":": Enable flexible strategy registration and resolution"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Universal Compatibility"}]},{"type":"text","text":": Support both class and struct strategy implementations"}]}]}]},{"level":2,"type":"heading","text":"Type Safety Guarantees","anchor":"Type-Safety-Guarantees"},{"inlineContent":[{"type":"text","text":"While the concrete strategy type is erased, type safety for lock information "},{"type":"codeVoice","code":"I"},{"type":"text","text":" "},{"type":"text","text":"is preserved at the "},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"type":"text","text":" level. This means you cannot accidentally"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"LockmanSingleExecutionInfo"},{"type":"text","text":" with a priority-based strategy wrapper."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Performance Considerations","anchor":"Performance-Considerations"},{"inlineContent":[{"type":"text","text":"Type erasure introduces a small runtime overhead due to function pointer indirection."},{"type":"text","text":" "},{"type":"text","text":"However, this cost is typically negligible compared to the actual locking operations"},{"type":"text","text":" "},{"type":"text","text":"and is justified by the flexibility gained."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","type":"topic","navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"title":"LockmanInfo","kind":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"url":"\/documentation\/lockman\/lockmaninfo","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","kind":"symbol","title":"init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)","kind":"symbol","title":"unlock(boundaryId:info:)","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy","type":"topic","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"title":"AnyLockmanStrategy","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(boundaryId:info:)":{"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/lock(boundaryid:info:)","role":"symbol","title":"lock(boundaryId:info:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(boundaryId:info:)","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","kind":"symbol","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/makeStrategyId()":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/makestrategyid()","title":"makeStrategyId()","abstract":[{"text":"Creates a generic strategy identifier for type-erased strategies.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()","abstract":[{"type":"text","text":"Returns current lock information for debugging."}],"type":"topic","title":"getCurrentLocks()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/strategyId":{"role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/strategyid","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId","kind":"symbol","type":"topic","abstract":[{"text":"The identifier for this type-erased strategy.","type":"text"}],"title":"strategyId"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(boundaryId:info:)":{"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanStrategyResult","preciseIdentifier":"s:7Lockman0A14StrategyResultO"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","type":"topic","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","title":"cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(boundaryId:)":{"title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(boundaryid:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(boundaryId:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP"}}}