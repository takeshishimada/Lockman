{"variants":[{"paths":["\/documentation\/lockman\/concurrencylimitedstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"roleHeading":"Article","title":"ConcurrencyLimitedStrategy","role":"article","modules":[{"name":"Lockman"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"],"title":"Strategies","anchor":"Strategies","generated":true}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"ConcurrencyLimitedStrategy is a strategy that limits the number of concurrent executions. It allows concurrent execution up to a specified number and rejects execution when the limit is exceeded, enabling resource usage control and performance optimization."}]},{"type":"paragraph","inlineContent":[{"text":"This strategy is used for controlling the concurrency of resource-intensive operations such as network requests and file operations.","type":"text"}]},{"type":"heading","text":"Concurrency Limitation System","level":2,"anchor":"Concurrency-Limitation-System"},{"type":"heading","text":"Limit Types","level":3,"anchor":"Limit-Types"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"unlimited"}]},{"type":"text","text":" - No limit"}]},{"type":"codeListing","code":["LockmanConcurrencyLimitedInfo(","    actionId: \"backgroundTask\",","    concurrencyId: \"background\",","    limit: .unlimited",")"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"No limit on the number of concurrent executions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Used when you want to temporarily disable limits","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Applied for behavior verification during debugging and testing"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"limited"}]},{"type":"text","text":" - Numeric limit"}]},{"type":"codeListing","code":["LockmanConcurrencyLimitedInfo(","    actionId: \"download\",","    concurrencyId: \"downloads\", ","    limit: .limited(3)",")"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Allows concurrent execution up to the specified number","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Operations exceeding the limit are rejected","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Resource protection and performance optimization","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Concurrency Groups","level":3,"anchor":"Concurrency-Groups"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Operations with the same "},{"code":"concurrencyId","type":"codeVoice"},{"type":"text","text":" are managed as a single group, and the number of concurrent executions is limited on a per-group basis."}]},{"type":"codeListing","code":["\/\/ Managed as the same group \"downloads\"","LockmanConcurrencyLimitedInfo(","    actionId: \"downloadImage\",","    concurrencyId: \"downloads\",","    limit: .limited(3)",")","","LockmanConcurrencyLimitedInfo(","    actionId: \"downloadVideo\", ","    concurrencyId: \"downloads\",","    limit: .limited(3)",")"],"syntax":"swift"},{"type":"heading","text":"Usage","level":2,"anchor":"Usage"},{"type":"heading","text":"Basic Usage Example","level":3,"anchor":"Basic-Usage-Example"},{"type":"codeListing","code":["@LockmanConcurrencyLimited","enum ViewAction {","    case downloadFile(URL)","    case uploadFile(URL)","    case processImage(UIImage)","    ","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","        switch self {","        case .downloadFile:","            return LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"network\",","                limit: .limited(3)","            )","        case .uploadFile:","            return LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"network\", ","                limit: .limited(3)","            )","        case .processImage:","            return LockmanConcurrencyLimitedInfo(","                actionId: actionName,","                concurrencyId: \"imageProcessing\",","                limit: .limited(2)","            )","        }","    }","}"],"syntax":"swift"},{"type":"heading","text":"Group-specific Limit Configuration","level":3,"anchor":"Group-specific-Limit-Configuration"},{"type":"codeListing","code":["\/\/ Network-related: Maximum 3","LockmanConcurrencyLimitedInfo(","    actionId: \"apiCall\",","    concurrencyId: \"network\",","    limit: .limited(3)",")","","\/\/ Image operations: Maximum 2  ","LockmanConcurrencyLimitedInfo(","    actionId: \"imageResize\",","    concurrencyId: \"imageProcessing\", ","    limit: .limited(2)",")","","\/\/ Background tasks: No limit","LockmanConcurrencyLimitedInfo(","    actionId: \"logging\",","    concurrencyId: \"background\",","    limit: .unlimited",")"],"syntax":"swift"},{"type":"heading","text":"Behavior Examples","level":2,"anchor":"Behavior-Examples"},{"type":"heading","text":"Execution Control by Limits","level":3,"anchor":"Execution-Control-by-Limits"},{"type":"codeListing","code":["Limit: 3","Concurrency Group: \"downloads\"","","Time: 0s  - download1 request → ✅ Execute (1\/3)","Time: 1s  - download2 request → ✅ Execute (2\/3)  ","Time: 2s  - download3 request → ✅ Execute (3\/3)","Time: 3s  - download4 request → ❌ Reject (limit reached)","Time: 4s  - download1 complete → ✅ Complete (2\/3)","Time: 5s  - download5 request → ✅ Execute (3\/3)"],"syntax":null},{"type":"heading","text":"Independent Control in Different Groups","level":3,"anchor":"Independent-Control-in-Different-Groups"},{"type":"codeListing","code":["Network Group (Limit: 3)","Time: 0s  - api1 execute, api2 execute, api3 execute → ✅ (3\/3)","Time: 1s  - api4 request → ❌ Reject","","Image Processing Group (Limit: 2)  ","Time: 0s  - resize1 execute, resize2 execute → ✅ (2\/2)","Time: 1s  - resize3 request → ❌ Reject","","※ Different groups are controlled independently"],"syntax":null},{"type":"heading","text":"Error Handling","level":2,"anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For errors that may occur in ConcurrencyLimitedStrategy and how to handle them, also refer to the common patterns on the "},{"overridingTitle":"Error Handling","type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","overridingTitleInlineContent":[{"text":"Error Handling","type":"text"}],"isActive":true},{"type":"text","text":" page."}]},{"type":"heading","text":"LockmanConcurrencyLimitedCancellationError","level":3,"anchor":"LockmanConcurrencyLimitedCancellationError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This error conforms to "},{"type":"codeVoice","code":"LockmanCancellationError"},{"type":"text","text":" protocol and provides:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"cancelledInfo","type":"codeVoice"},{"text":": Information about the cancelled action","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"boundaryId","type":"codeVoice"},{"text":": Where the cancellation occurred","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"existingInfos"},{"type":"text","text":": Array of currently active infos"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"currentCount","type":"codeVoice"},{"text":": Current number of active executions","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["lockFailure: { error, send in","    if let concurrencyError = error as? LockmanConcurrencyLimitedCancellationError {","        let limit = concurrencyError.cancelledInfo.limit","        let current = concurrencyError.currentCount","        await send(.concurrencyLimitReached(","            \"Concurrency limit reached (\\(current)\/\\(limit))\"","        ))","    }","}"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"references":{"doc://Lockman/documentation/Lockman/ErrorHandling":{"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","url":"\/documentation\/lockman\/errorhandling","role":"article","abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"type":"topic","title":"Error Handling"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"kind":"article","type":"topic","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","url":"\/documentation\/lockman\/dynamicconditionstrategy","title":"Dynamic Condition Evaluation","abstract":[{"type":"text","text":"Control actions based on runtime conditions with unified condition evaluation."}]},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"role":"article","kind":"article","abstract":[{"type":"text","text":"Control action execution based on priority levels."}],"title":"PriorityBasedStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","url":"\/documentation\/lockman\/prioritybasedstrategy","type":"topic"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","kind":"symbol","role":"collection"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"type":"topic","title":"GroupCoordinationStrategy","url":"\/documentation\/lockman\/groupcoordinationstrategy","kind":"article","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","role":"article"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"kind":"article","title":"CompositeStrategy","abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"type":"topic","role":"article","url":"\/documentation\/lockman\/compositestrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","title":"SingleExecutionStrategy","abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}],"kind":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","role":"article"}}}