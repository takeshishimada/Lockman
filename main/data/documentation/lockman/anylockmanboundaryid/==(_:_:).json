{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The left-hand side wrapper to compare"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The right-hand side wrapper to compare"}]}],"name":"rhs"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the wrapped values are equal; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Two instances are equal if their wrapped values are equal according to","type":"text"},{"text":" ","type":"text"},{"text":"the underlying type’s equality implementation.","type":"text"}],"type":"paragraph"},{"anchor":"Type-Safety","text":"Type Safety","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Different types with identical values will not be equal due to "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"text","text":"type-aware equality comparison."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanboundaryid\/==(_:_:)"]}],"sections":[],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","title":"==(_:_:)","externalID":"s:7Lockman03AnyA10BoundaryIdV2eeoiySbAC_ACtFZ","roleHeading":"Operator","symbolKind":"op","modules":[{"name":"Lockman"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/==(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Compares two "},{"code":"AnyLockmanBoundaryId","type":"codeVoice"},{"type":"text","text":" instances for equality."}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"title":"AnyLockmanBoundaryId","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"url":"\/documentation\/lockman\/anylockmanboundaryid","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":", allowing heterogeneous boundary IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/==(_:_:)":{"role":"symbol","abstract":[{"text":"Compares two ","type":"text"},{"code":"AnyLockmanBoundaryId","type":"codeVoice"},{"type":"text","text":" instances for equality."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/lockman\/anylockmanboundaryid\/==(_:_:)","kind":"symbol","title":"==(_:_:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/==(_:_:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","url":"\/documentation\/lockman","abstract":[{"type":"text","text":"Elegant exclusive control for user actions in The Composable Architecture applications."}],"title":"Lockman","kind":"symbol","role":"collection"}}}