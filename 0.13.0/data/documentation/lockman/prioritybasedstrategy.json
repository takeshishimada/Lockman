{"seeAlsoSections":[{"anchor":"Strategies","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"],"title":"Strategies"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"Lockman"}],"title":"PriorityBasedStrategy"},"abstract":[{"type":"text","text":"Control action execution based on priority levels."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/prioritybasedstrategy"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"PriorityBasedStrategy is a strategy that performs execution control based on priority. High-priority processing can interrupt low-priority processing to execute, allowing important processing to be handled preferentially."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This strategy is used in situations where high-urgency processing or control based on importance is required."}],"type":"paragraph"},{"text":"Priority System","level":2,"type":"heading","anchor":"Priority-System"},{"text":"Priority Levels","level":3,"type":"heading","anchor":"Priority-Levels"},{"inlineContent":[{"inlineContent":[{"text":"high","type":"text"}],"type":"strong"},{"text":" - High Priority","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can interrupt all other priority processing"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System-level emergency processing or important user operations"}]}]}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"low"}],"type":"strong"},{"text":" - Low Priority","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Can interrupt none priority processing"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Interrupted by high priority","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Regular background processing"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"none"}]},{"type":"text","text":" - No Priority"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Bypasses priority system","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Not interrupted by other processing","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Basic processing or temporary disabling","type":"text"}]}]}]},{"level":3,"text":"Exclusive Execution Control","type":"heading","anchor":"Exclusive-Execution-Control"},{"inlineContent":[{"text":"Within the same priority level, control is based on the exclusive execution behavior setting of existing processing:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"exclusive"}]},{"type":"text","text":" - Exclusive Execution"}],"type":"paragraph"},{"syntax":"swift","code":["LockmanPriorityBasedInfo(","    actionId: \"payment\",","    priority: .high(.exclusive)",")"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Rejects new processing of the same priority"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Protects important processing from interruption","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"replaceable"}],"type":"strong"},{"type":"text","text":" - Replaceable Execution"}],"type":"paragraph"},{"syntax":"swift","code":["LockmanPriorityBasedInfo(","    actionId: \"search\", ","    priority: .high(.replaceable)",")"],"type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can be interrupted by new processing of the same priority"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Applied to search or update processing"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Usage","type":"heading","anchor":"Usage"},{"level":3,"text":"Basic Usage Example","type":"heading","anchor":"Basic-Usage-Example"},{"code":["@LockmanPriorityBased","enum ViewAction {","    case emergencySync","    case normalSync","    case backgroundTask","    ","    var lockmanInfo: LockmanPriorityBasedInfo {","        switch self {","        case .emergencySync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        case .backgroundTask:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .none","            )","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"Operation-Examples","level":2,"type":"heading","text":"Operation Examples"},{"anchor":"Interruption-by-Priority","level":3,"type":"heading","text":"Interruption by Priority"},{"code":["Time: 0s  - Low priority process starts    ‚Üí ‚úÖ Execute","Time: 2s  - High priority process request  ‚Üí ‚úÖ Execute (interrupts low process)","Time: 2s  - Low priority process           ‚Üí üõë Cancel","Time: 5s  - High priority process complete ‚Üí ‚úÖ Complete"],"type":"codeListing","syntax":null},{"anchor":"Control-at-Same-Priority","level":3,"type":"heading","text":"Control at Same Priority"},{"code":["\/\/ Exclusive setting case","Time: 0s  - high(.exclusive) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.exclusive) request ‚Üí ‚ùå Reject","Time: 3s  - First process completes  ‚Üí ‚úÖ Complete","Time: 4s  - high(.exclusive) request ‚Üí ‚úÖ Execute","","\/\/ Replaceable setting case","Time: 0s  - high(.replaceable) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.replaceable) request ‚Üí ‚úÖ Execute (interrupts previous)","Time: 1s  - First process              ‚Üí üõë Cancel"],"type":"codeListing","syntax":null},{"anchor":"Error-Handling","level":2,"type":"heading","text":"Error Handling"},{"inlineContent":[{"text":"For errors that may occur with PriorityBasedStrategy and their solutions, please also refer to the common patterns on the ","type":"text"},{"isActive":true,"overridingTitle":"Error Handling","overridingTitleInlineContent":[{"text":"Error Handling","type":"text"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling"},{"text":" page.","type":"text"}],"type":"paragraph"},{"anchor":"LockmanPriorityBasedError","level":3,"type":"heading","text":"LockmanPriorityBasedError"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"higherPriorityExists","type":"text"}]},{"type":"text","text":" - Higher priority is running"}],"type":"paragraph"},{"code":["lockFailure: { error, send in","    if case .higherPriorityExists(let requested, let current) = error as? LockmanPriorityBasedError {","        send(.priorityConflict(\"Waiting due to high priority process running\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"samePriorityConflict"}]},{"text":" - Conflict at same priority","type":"text"}],"type":"paragraph"},{"code":["lockFailure: { error, send in","    if case .samePriorityConflict(let priority) = error as? LockmanPriorityBasedError {","        send(.busyMessage(\"Process with same priority is running\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"precedingActionCancelled"}]},{"type":"text","text":" - Preceding action cancelled"}],"type":"paragraph"},{"code":["catch handler: { error, send in","    if case .precedingActionCancelled(let cancelledInfo) = error as? LockmanPriorityBasedError {","        send(.processCancelled(\"Interrupted by high priority process\"))","    }","}"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/CompositeStrategy":{"abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","role":"article","url":"\/documentation\/lockman\/compositestrategy","type":"topic","kind":"article","title":"CompositeStrategy"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"type":"topic","kind":"article","title":"ConcurrencyLimitedStrategy","role":"article","url":"\/documentation\/lockman\/concurrencylimitedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}]},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"abstract":[{"type":"text","text":"Control actions based on runtime conditions."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","role":"article","url":"\/documentation\/lockman\/dynamicconditionstrategy","type":"topic","kind":"article","title":"DynamicConditionStrategy"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","role":"article","type":"topic","url":"\/documentation\/lockman\/groupcoordinationstrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"title":"GroupCoordinationStrategy"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}],"title":"SingleExecutionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","type":"topic","role":"article","kind":"article"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","title":"Error Handling","type":"topic","role":"article","kind":"article","url":"\/documentation\/lockman\/errorhandling"}}}