{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","title":"canLock(id:info:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"role":"symbol","externalID":"s:7Lockman03AnyA8StrategyV7canLock2id4infoAA0A6ResultOqd___xtSHRd__s8SendableRd__lF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"text":"LockmanResult","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}],"type":"paragraph"}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lock information of type ","type":"text"},{"code":"I","type":"codeVoice"}]}],"name":"info"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"LockmanResult","type":"codeVoice"},{"type":"text","text":" indicating whether the lock can be acquired"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method delegates to the concrete strategyâ€™s implementation through the"},{"type":"text","text":" "},{"type":"text","text":"captured closure, maintaining identical behavior while hiding the concrete type."}]},{"type":"heading","text":"Delegation Pattern","level":2,"anchor":"Delegation-Pattern"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type-erased wrapper acts as a transparent proxy, forwarding all calls to the"},{"type":"text","text":" "},{"type":"text","text":"underlying concrete strategy without modification. This ensures that the behavior"},{"type":"text","text":" "},{"type":"text","text":"is identical to calling the concrete strategy directly."}]},{"type":"heading","text":"Error Handling","level":2,"anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any errors thrown by the concrete strategy are propagated unchanged through this wrapper."},{"type":"text","text":" "},{"type":"text","text":"The wrapper does not add its own error handling or modification."}]}]}],"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)"},"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanResult":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","abstract":[{"text":"The result of attempting to acquire a lock.","type":"text"}],"kind":"symbol","role":"symbol","title":"LockmanResult","url":"\/documentation\/lockman\/lockmanresult","navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","title":"AnyLockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(id:info:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"role":"symbol","title":"canLock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"}}}