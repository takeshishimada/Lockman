{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction"},"metadata":{"modules":[{"name":"Lockman"}],"symbolKind":"protocol","title":"LockmanDynamicConditionAction","externalID":"s:7Lockman0A22DynamicConditionActionP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"role":"symbol","roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","text":"LockmanAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ActionP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Conforming types can create lock info with custom conditions that are evaluated at runtime.","type":"text"}]},{"type":"heading","anchor":"Example","text":"Example","level":2},{"type":"codeListing","code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .failure(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true}],"sections":[],"abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanAction":{"url":"\/documentation\/lockman\/lockmanaction","abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"type":"topic","navigatorTitle":[{"text":"LockmanAction","kind":"identifier"}],"title":"LockmanAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanAction","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","abstract":[{"text":"The name of the action, typically the enum case name.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","required":true,"title":"actionName"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","kind":"symbol","abstract":[{"type":"text","text":"Creates lock info with a custom condition."}],"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo"}],"defaultImplementations":1,"title":"with(condition:)","role":"symbol"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","type":"topic","navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"title":"LockmanDynamicConditionAction","abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"kind":"symbol"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"}}}