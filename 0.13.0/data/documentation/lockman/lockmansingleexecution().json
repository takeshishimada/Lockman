{"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","metadata":{"title":"LockmanSingleExecution()","roleHeading":"Macro","symbolKind":"macro","externalID":"s:7Lockman0A15SingleExecutionyycfm","modules":[{"name":"Lockman"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}]},"abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","text":"LockmanSingleExecutionAction","preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanSingleExecutionAction","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"actionName","type":"codeVoice"},{"text":" property that returns the enum case name as a String","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"code":"strategyId","type":"codeVoice"},{"type":"text","text":" implementation is provided by the protocol"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Important","type":"text"}],"type":"strong"},{"text":": You must implement the ","type":"text"},{"code":"lockmanInfo","type":"codeVoice"},{"text":" property to specify the execution mode:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".none"},{"type":"text","text":": No exclusive execution (always allows locks)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".boundary"},{"text":": Only one action per boundary at a time (default behavior)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".action"},{"text":": Only one instance of the same actionId at a time","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Example usage with TCA:","type":"text"}]},{"code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .login,","          cancelID: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecution()"]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"title":"LockmanSingleExecution()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","url":"\/documentation\/lockman\/lockmansingleexecution()","role":"symbol","type":"topic","abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"abstract":[{"type":"text","text":"A specialized "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":" for single-execution locking semantics."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","title":"LockmanSingleExecutionAction","role":"symbol","navigatorTitle":[{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionaction","type":"topic","kind":"symbol"}}}