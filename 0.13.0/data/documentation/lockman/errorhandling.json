{"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Article","title":"Error Handling","role":"article"},"kind":"article","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Lockman provides detailed error information according to each strategy. This page explains error handling patterns common to all strategies and how to implement effective error handling.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Common Error Handling Patterns","type":"heading","anchor":"Common-Error-Handling-Patterns"},{"level":3,"text":"lockFailure Handler","type":"heading","anchor":"lockFailure-Handler"},{"inlineContent":[{"type":"text","text":"Basic lockFailure handler structure used in all strategies:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":[".withLock(","    operation: { send in","        \/\/ Execute processing","    },","    lockFailure: { error, send in","        \/\/ Error handling","        if case .specificError(let info) = error as? StrategySpecificError {","            send(.userFriendlyMessage(\"Error message\"))","        }","    },","    action: action,","    cancelID: cancelID",")"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Parameters:"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"error"},{"text":": The error that occurred (strategy-specific error type)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"send"},{"type":"text","text":": Function for sending feedback to the user"}]}]}],"type":"unorderedList"},{"level":3,"text":"catch handler Pattern","type":"heading","anchor":"catch-handler-Pattern"},{"inlineContent":[{"type":"text","text":"Handling general errors that occur during processing:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["catch handler: { error, send in","    send(.operationError(error.localizedDescription))","}"]},{"inlineContent":[{"text":"This handler catches errors thrown within the operation and appropriately notifies the user.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Types of Errors and Solutions","type":"heading","anchor":"Types-of-Errors-and-Solutions"},{"level":3,"text":"1. Lock Acquisition Failure (Already Locked)","type":"heading","anchor":"1-Lock-Acquisition-Failure-Already-Locked"},{"inlineContent":[{"inlineContent":[{"text":"Concept","type":"text"}],"type":"strong"},{"text":": Occurs when the same processing or boundary is already running","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Common solutions","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["lockFailure: { error, send in","    \/\/ Notify user that processing is in progress","    send(.showMessage(\"Processing is in progress\"))","    ","    \/\/ Or provide visual feedback in UI","    send(.setButtonState(.loading))","}"]},{"level":3,"text":"2. Permission\/Priority Conflicts","type":"heading","anchor":"2-PermissionPriority-Conflicts"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Concept"}]},{"text":": Occurs due to higher priority processing or group rule constraints","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Common solutions","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["lockFailure: { error, send in","    \/\/ Understand the situation from errors containing detailed information","    if let conflictInfo = extractConflictInfo(from: error) {","        send(.showMessage(\"Another important process is running: \\(conflictInfo.description)\"))","    }","}"]},{"level":3,"text":"3. Cancellation Notification","type":"heading","anchor":"3-Cancellation-Notification"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Concept","type":"text"}]},{"text":": When existing processing is cancelled by higher priority processing","type":"text"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Common solutions","type":"text"}],"type":"strong"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["catch handler: { error, send in","    if error is CancellationError {","        send(.processCancelled(\"Interrupted by a more important process\"))","    } else {","        send(.processError(error.localizedDescription))","    }","}"]},{"level":2,"text":"Best Practices","type":"heading","anchor":"Best-Practices"},{"level":3,"text":"1. Proper Error Type Casting","type":"heading","anchor":"1-Proper-Error-Type-Casting"},{"type":"codeListing","syntax":"swift","code":["\/\/ ✅ Good example: Cast to strategy-specific error type","if case .actionAlreadyRunning(let existingInfo) = error as? LockmanSingleExecutionError {","    \/\/ Use existingInfo to provide detailed information","}","","\/\/ ❌ Bad example: Treat error as string","send(.showError(error.localizedDescription))"]},{"level":3,"text":"2. User-Friendly Messages","type":"heading","anchor":"2-User-Friendly-Messages"},{"type":"codeListing","syntax":"swift","code":["\/\/ ✅ Good example: Specific and easy to understand message","send(.showMessage(\"Saving data. Please wait a moment.\"))","","\/\/ ❌ Bad example: Technical error message","send(.showMessage(\"LockmanError: boundary locked\"))"]},{"level":3,"text":"3. Utilizing Additional Information","type":"heading","anchor":"3-Utilizing-Additional-Information"},{"inlineContent":[{"text":"Many errors contain additional information:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["lockFailure: { error, send in","    switch error as? LockmanConcurrencyLimitedError {","    case .concurrencyLimitReached(let current, let limit, _):","        send(.showMessage(\"Concurrent execution limit (\\(limit)) reached (current: \\(current))\"))","    default:","        send(.showMessage(\"Cannot start processing\"))","    }","}"]},{"level":2,"text":"Strategy-Specific Errors","type":"heading","anchor":"Strategy-Specific-Errors"},{"inlineContent":[{"text":"For detailed error information for each strategy, please refer to their respective documentation:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"overridingTitle":"SingleExecutionStrategy","type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","overridingTitleInlineContent":[{"type":"text","text":"SingleExecutionStrategy"}]},{"text":" - Duplicate execution errors","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"overridingTitle":"PriorityBasedStrategy","type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"PriorityBasedStrategy"}]},{"type":"text","text":" - Priority conflict errors"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","overridingTitle":"GroupCoordinationStrategy","overridingTitleInlineContent":[{"text":"GroupCoordinationStrategy","type":"text"}],"type":"reference"},{"text":" - Group rule violation errors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"overridingTitle":"ConcurrencyLimitedStrategy","isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","overridingTitleInlineContent":[{"type":"text","text":"ConcurrencyLimitedStrategy"}],"type":"reference"},{"text":" - Concurrent execution limit exceeded errors","type":"text"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"text":"DynamicConditionStrategy","type":"text"}],"overridingTitle":"DynamicConditionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy"},{"type":"text","text":" - Condition mismatch errors"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","isActive":true,"overridingTitleInlineContent":[{"text":"CompositeStrategy","type":"text"}],"overridingTitle":"CompositeStrategy"},{"type":"text","text":" - Composite strategy errors"}]}]}],"type":"unorderedList"}]}],"seeAlsoSections":[{"generated":true,"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/lockman\/errorhandling"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"title":"Choosing a Strategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","kind":"article","url":"\/documentation\/lockman\/choosingstrategy","role":"article","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/Configuration":{"type":"topic","title":"Configuration","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","url":"\/documentation\/lockman\/configuration","abstract":[{"text":"Configure Lockman for your application’s needs.","type":"text"}],"role":"article","kind":"article"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"url":"\/documentation\/lockman\/debuggingguide","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","type":"topic","title":"Debugging Guide"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","role":"article","type":"topic","url":"\/documentation\/lockman\/groupcoordinationstrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"title":"GroupCoordinationStrategy"},"doc://Lockman/documentation/Lockman/Lock":{"kind":"article","role":"article","type":"topic","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","title":"Lock","url":"\/documentation\/lockman\/lock"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/Unlock":{"role":"article","url":"\/documentation\/lockman\/unlock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","title":"Unlock","abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"type":"topic","kind":"article"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"type":"topic","kind":"article","title":"ConcurrencyLimitedStrategy","role":"article","url":"\/documentation\/lockman\/concurrencylimitedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","abstract":[{"type":"text","text":"Limit the number of concurrent executions."}]},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","role":"article","url":"\/documentation\/lockman\/compositestrategy","type":"topic","kind":"article","title":"CompositeStrategy"},"doc://Lockman/documentation/Lockman/GettingStarted":{"role":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}],"url":"\/documentation\/lockman\/gettingstarted","title":"Getting Started","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","kind":"article"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"abstract":[{"type":"text","text":"Control actions based on runtime conditions."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","role":"article","url":"\/documentation\/lockman\/dynamicconditionstrategy","type":"topic","kind":"article","title":"DynamicConditionStrategy"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"title":"PriorityBasedStrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","type":"topic","url":"\/documentation\/lockman\/prioritybasedstrategy","kind":"article","abstract":[{"text":"Control action execution based on priority levels.","type":"text"}]},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"type":"topic","kind":"article","title":"Boundary","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","abstract":[{"text":"Understand the concept of boundaries in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/boundaryoverview","role":"article"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}],"title":"SingleExecutionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","type":"topic","role":"article","kind":"article"}}}