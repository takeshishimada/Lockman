{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/s8CopyableP","doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","doc:\/\/Lockman\/SQ","doc:\/\/Lockman\/SH","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"sections":[],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This wrapper enables different types of group identifiers to coexist in the same"},{"type":"text","text":" "},{"type":"text","text":"collection while maintaining type safety for hashing and equality operations."}]},{"type":"heading","level":2,"anchor":"Type-Erasure-Benefits","text":"Type Erasure Benefits"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Allows "},{"type":"codeVoice","code":"Set<AnyLockmanGroupId>"},{"type":"text","text":" with mixed group ID types"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Maintains value semantics and equality comparison"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Preserves hashing behavior from underlying types"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"anchor":"Thread-Safety","text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Marked as "},{"type":"codeVoice","code":"@unchecked Sendable"},{"type":"text","text":" because "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" is thread-safe for"},{"type":"text","text":" "},{"type":"text","text":"hashing and equality operations, and the wrapper doesnâ€™t add mutable state."}]},{"type":"heading","level":2,"anchor":"Usage-Example","text":"Usage Example"},{"type":"codeListing","code":["enum FeatureGroup: String, LockmanGroupId {","  case navigation, dataSync, authentication","}","","struct ModuleGroup: LockmanGroupId {","  let module: String","  let submodule: String","}","","\/\/ Both can be used as group IDs in the same collection","let featureGroup = AnyLockmanGroupId(FeatureGroup.navigation)","let moduleGroup = AnyLockmanGroupId(ModuleGroup(module: \"user\", submodule: \"profile\"))","","\/\/ Can be stored in the same Set","let groupIds: Set<AnyLockmanGroupId> = [featureGroup, moduleGroup]"],"syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"],"generated":true,"title":"Operators","anchor":"Operators"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"AnyLockmanGroupId","kind":"identifier"}],"role":"symbol","symbolKind":"struct","title":"AnyLockmanGroupId","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman03AnyA7GroupIdV","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}]},"variants":[{"paths":["\/documentation\/lockman\/anylockmangroupid"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"title":"AnyLockmanGroupId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":", allowing heterogeneous group IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"navigatorTitle":[{"text":"AnyLockmanGroupId","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmangroupid","type":"topic"},"doc://Lockman/SH":{"identifier":"doc:\/\/Lockman\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","abstract":[{"type":"text","text":"Creates a new "},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"code":"LockmanGroupId","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"LockmanGroupId","preciseIdentifier":"s:7Lockman0A7GroupIda"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/Equatable-Implementations":{"kind":"article","url":"\/documentation\/lockman\/anylockmangroupid\/equatable-implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations","abstract":[],"type":"topic","title":"Equatable Implementations","role":"collectionGroup"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/==(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AnyLockmanGroupId","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Compares two ","type":"text"},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":" values.","type":"text"}],"title":"==(_:_:)","url":"\/documentation\/lockman\/anylockmangroupid\/==(_:_:)","type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/hash(into:)":{"abstract":[{"type":"text","text":"Generates hash values that include type information to prevent"},{"type":"text","text":" "},{"type":"text","text":"different group ID types with identical values from colliding."}],"title":"hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)","role":"symbol","url":"\/documentation\/lockman\/anylockmangroupid\/hash(into:)"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/CustomDebugStringConvertible-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","url":"\/documentation\/lockman\/anylockmangroupid\/customdebugstringconvertible-implementations","role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[]},"doc://Lockman/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Lockman\/SQ"},"doc://Lockman/s8CopyableP":{"identifier":"doc:\/\/Lockman\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://Lockman/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"}}}