{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"]}],"abstract":[{"text":"Invokes ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"text":" on all registered strategies.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method iterates through all registered strategies and calls their"},{"type":"text","text":" "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" method to clear any internal state. Useful for application"},{"type":"text","text":" "},{"type":"text","text":"shutdown or global reset scenarios."}]},{"anchor":"Error-Handling","type":"heading","level":2,"text":"Error Handling"},{"type":"paragraph","inlineContent":[{"text":"If any strategyâ€™s cleanup operation fails, the error is logged but","type":"text"},{"text":" ","type":"text"},{"text":"cleanup continues for remaining strategies to ensure best-effort cleanup.","type":"text"}]},{"anchor":"Complexity","type":"heading","level":2,"text":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:7Lockman0A17StrategyContainerC7cleanUpyyF","title":"cleanUp()"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp()":{"title":"cleanUp()","abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"type":"text","text":" on all registered strategies."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"title":"LockmanStrategyContainer"}}}