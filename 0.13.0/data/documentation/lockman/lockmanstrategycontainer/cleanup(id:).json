{"kind":"symbol","abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":" whose associated lock state should be cleared","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method iterates through all registered strategies and calls their"},{"type":"text","text":" "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" method to clear state associated with the given boundary identifier."},{"type":"text","text":" "},{"type":"text","text":"Useful when a feature or component is being deallocated."}]},{"level":2,"type":"heading","anchor":"Error-Handling","text":"Error Handling"},{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":", errors in individual strategy cleanup are logged","type":"text"},{"text":" ","type":"text"},{"text":"but donâ€™t prevent cleanup of other strategies.","type":"text"}]},{"level":2,"type":"heading","anchor":"Complexity","text":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)"},"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF","roleHeading":"Instance Method","title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"url":"\/documentation\/lockman","kind":"symbol","title":"Lockman","role":"collection","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","type":"topic","role":"symbol","kind":"symbol","title":"cleanUp(id:)"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"title":"LockmanStrategyContainer"}}}