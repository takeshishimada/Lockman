{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"unregister(id:)","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC10unregister2idSbAA0aB2IdV_tF"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unregister"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"The strategy ID to unregister"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the strategy was found and removed, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it wasn’t registered","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method allows unregistering a strategy that is no longer needed."},{"type":"text","text":" "},{"type":"text","text":"The strategy’s cleanup method is called before removal."}],"type":"paragraph"},{"anchor":"Use-Cases","level":2,"type":"heading","text":"Use Cases"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Dynamic strategy replacement"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management in long-running applications"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Test cleanup"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Example","level":2,"type":"heading","text":"Example"},{"type":"codeListing","code":["let wasRemoved = container.unregister(id: \"MyApp.Custom:v1\")","if wasRemoved {","  print(\"Strategy successfully unregistered\")","}"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)"},"abstract":[{"text":"Removes a specific strategy from the container by its ID.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"sections":[],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"title":"LockmanStrategyContainer"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","type":"topic","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"title":"LockmanStrategyId","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmanstrategyid"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/unregister(id:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unregister"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","title":"unregister(id:)","abstract":[{"type":"text","text":"Removes a specific strategy from the container by its ID."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)"}}}