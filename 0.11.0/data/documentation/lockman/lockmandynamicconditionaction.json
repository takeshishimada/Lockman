{"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction"},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","preciseIdentifier":"s:7Lockman0A6ActionP","text":"LockmanAction"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Conforming types can create lock info with custom conditions that are evaluated at runtime.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Example","level":2,"anchor":"Example"},{"type":"codeListing","syntax":"swift","code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .failure(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"]}]}],"metadata":{"externalID":"s:7Lockman0A22DynamicConditionActionP","modules":[{"name":"Lockman"}],"title":"LockmanDynamicConditionAction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"symbolKind":"protocol","roleHeading":"Protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"]}],"abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","role":"symbol","title":"LockmanDynamicConditionAction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/LockmanAction":{"title":"LockmanAction","role":"symbol","url":"\/documentation\/lockman\/lockmanaction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanAction"}],"kind":"symbol","abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"required":true,"url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","abstract":[{"type":"text","text":"The name of the action, typically the enum case name."}],"title":"actionName","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"title":"with(condition:)","role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","required":true,"abstract":[{"text":"Creates lock info with a custom condition.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"}}}