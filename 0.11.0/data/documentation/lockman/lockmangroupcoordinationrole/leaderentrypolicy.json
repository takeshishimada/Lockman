{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/s12CaseIterableP","doc:\/\/Lockman\/SQ","doc:\/\/Lockman\/SH","doc:\/\/Lockman\/SY","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"LeaderEntryPolicy"}],"title":"LockmanGroupCoordinationRole.LeaderEntryPolicy","symbolKind":"enum","modules":[{"name":"Lockman"}],"role":"symbol","externalID":"s:7Lockman0A21GroupCoordinationRoleO17LeaderEntryPolicyO","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderEntryPolicy"}],"roleHeading":"Enumeration"},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy"},"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/emptyGroup","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/withoutLeader","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/withoutMembers"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/init(rawValue:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/Equatable-Implementations","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/RawRepresentable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LeaderEntryPolicy"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Determines the group state requirements for a new leader to join."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Policy for when a leader can enter a group."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole"]]},"references":{"doc://Lockman/SH":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/SH","title":"Swift.Hashable"},"doc://Lockman/s12CaseIterableP":{"type":"unresolvable","title":"Swift.CaseIterable","identifier":"doc:\/\/Lockman\/s12CaseIterableP"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/withoutLeader":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"withoutLeader"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/withoutLeader","type":"topic","title":"LockmanGroupCoordinationRole.LeaderEntryPolicy.withoutLeader","role":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/withoutleader","abstract":[{"type":"text","text":"Leader can enter when there are no other leaders (but members are allowed)."}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/withoutMembers":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutMembers","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/withoutMembers","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/withoutmembers","title":"LockmanGroupCoordinationRole.LeaderEntryPolicy.withoutMembers","role":"symbol","abstract":[{"text":"Leader can enter when there are no members (but other leaders are allowed).","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole","abstract":[{"type":"text","text":"Role definition for group coordination strategy."}],"navigatorTitle":[{"text":"LockmanGroupCoordinationRole","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationrole","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationRole","kind":"identifier"}],"type":"topic","title":"LockmanGroupCoordinationRole","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/init(rawValue:)":{"url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/init(rawvalue:)","title":"init(rawValue:)","kind":"symbol","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/Equatable-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/Equatable-Implementations","title":"Equatable Implementations","abstract":[],"url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/equatable-implementations"},"doc://Lockman/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/Lockman\/SY","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/RawRepresentable-Implementations":{"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/RawRepresentable-Implementations","type":"topic","abstract":[],"title":"RawRepresentable Implementations","role":"collectionGroup","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/rawrepresentable-implementations"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy":{"url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy","title":"LockmanGroupCoordinationRole.LeaderEntryPolicy","type":"topic","role":"symbol","navigatorTitle":[{"text":"LeaderEntryPolicy","kind":"identifier"}],"abstract":[{"text":"Policy for when a leader can enter a group.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"LeaderEntryPolicy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/emptyGroup":{"url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/emptygroup","type":"topic","title":"LockmanGroupCoordinationRole.LeaderEntryPolicy.emptyGroup","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/emptyGroup","abstract":[{"type":"text","text":"Leader can only enter when the group is completely empty."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"emptyGroup"}]},"doc://Lockman/SQ":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/SQ","title":"Swift.Equatable"}}}