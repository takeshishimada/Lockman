{"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF","title":"cleanUp()","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method provides a global reset mechanism by clearing all internal lock state","type":"text"},{"text":" ","type":"text"},{"text":"from the underlying strategy. Itâ€™s typically used during:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown sequences"}]}]},{"content":[{"inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency reset scenarios during development"}]}]},{"content":[{"inlineContent":[{"text":"Memory pressure response","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Scope-of-Operation","type":"heading","level":2,"text":"Scope of Operation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method affects "},{"type":"strong","inlineContent":[{"text":"all boundaries","type":"text"}]},{"type":"text","text":" managed by the underlying strategy,"},{"type":"text","text":" "},{"type":"text","text":"not just those accessed through this particular wrapper instance."}]},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The operation is atomic with respect to other strategy operations, but"},{"type":"text","text":" "},{"type":"text","text":"callers should be aware that concurrent operations may be affected."}]},{"anchor":"Side-Effects","type":"heading","level":2,"text":"Side Effects"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"All active locks are immediately released"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Lock state tracking is reset to initial conditions","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Pending operations may receive unexpected unlock notifications"}]}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"sections":[],"references":{"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"title":"cleanUp()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}]}}}