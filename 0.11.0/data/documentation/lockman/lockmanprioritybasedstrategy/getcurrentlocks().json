{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","interfaceLanguage":"swift"},"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"metadata":{"symbolKind":"method","externalID":"s:7Lockman0A21PriorityBasedStrategyC15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Lockman"}],"title":"getCurrentLocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"Dictionary of boundary IDs to their active locks","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a snapshot of all currently held locks across all boundaries."},{"type":"text","text":" "},{"type":"text","text":"The returned dictionary maps boundary identifiers to their active lock information."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanInfo":{"role":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"url":"\/documentation\/lockman\/lockmaninfo","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","type":"topic","title":"LockmanInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"title":"LockmanPriorityBasedStrategy"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","title":"AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"role":"symbol","title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()"}}}