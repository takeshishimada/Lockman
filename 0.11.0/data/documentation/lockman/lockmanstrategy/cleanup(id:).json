{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)"},"metadata":{"title":"cleanUp(id:)","symbolKind":"method","externalID":"s:7Lockman0A8StrategyP7cleanUp2idyqd___tSHRd__s8SendableRd__lF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","role":"symbol","required":true},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The identifier whose lock information should be removed","type":"text"}],"type":"paragraph"}],"name":"id"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method provides targeted cleanup for specific boundary identifiers,","type":"text"},{"text":" ","type":"text"},{"text":"allowing fine-grained control over which lock state to clear while","type":"text"},{"text":" ","type":"text"},{"text":"leaving other boundaries unaffected.","type":"text"}]},{"type":"heading","text":"Use Cases","level":2,"anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Feature-specific cleanup when a component is deallocated","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"User session cleanup when a user logs out","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scoped cleanup for temporary contexts"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Partial system resets during development"}],"type":"paragraph"}]}]},{"type":"heading","text":"Implementation Guidelines","level":2,"anchor":"Implementation-Guidelines"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Should only affect locks associated with the specified boundary"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should not fail if no locks exist for the boundary","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should preserve locks for other boundaries"}]}]}]}]}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","title":"cleanUp(id:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","kind":"symbol","role":"symbol","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"}}}