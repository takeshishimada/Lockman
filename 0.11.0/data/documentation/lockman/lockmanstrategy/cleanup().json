{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method clears all internal lock state managed by the strategy,"},{"type":"text","text":" "},{"type":"text","text":"effectively resetting it to its initial state. Use this for:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Application shutdown sequences","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Test suite cleanup between tests","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Global system resets during development"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}]}]}]},{"text":"Implementation Guidelines","type":"heading","level":2,"anchor":"Implementation-Guidelines"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should remove all tracked locks regardless of boundary"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should not fail even if no locks are currently held"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should be safe to call multiple times"}]}]}]}],"kind":"content"}],"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"required":true,"roleHeading":"Instance Method","role":"symbol","title":"cleanUp()","externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","symbolKind":"method","modules":[{"name":"Lockman"}]},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"required":true,"role":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","type":"topic","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"}}}