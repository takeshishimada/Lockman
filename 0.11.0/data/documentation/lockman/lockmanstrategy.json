{"sections":[],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/Lockman\/s8SendableP"]},{"type":"conformingTypes","title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","text":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}],"type":"paragraph"},{"anchor":"Strategy-Types","type":"heading","text":"Strategy Types","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Single Execution"}],"type":"strong"},{"text":": Prevents concurrent execution of the same action","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Priority-Based","type":"text"}]},{"type":"text","text":": Allows higher priority actions to preempt lower priority ones"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composite"}]},{"type":"text","text":": Combines multiple strategies for complex coordination"}]}]}]},{"anchor":"Implementation-Guidelines","type":"heading","text":"Implementation Guidelines","level":2},{"inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"code":"AnyLockmanStrategy","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Thread-Safety","type":"heading","text":"Thread Safety","level":2},{"inlineContent":[{"text":"All strategy implementations must be thread-safe as they may be called","type":"text"},{"text":" ","type":"text"},{"text":"concurrently from multiple contexts. Use appropriate synchronization","type":"text"},{"text":" ","type":"text"},{"text":"mechanisms in your implementation.","type":"text"}],"type":"paragraph"},{"anchor":"Example-Implementation","type":"heading","text":"Example Implementation","level":2},{"type":"codeListing","syntax":"swift","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"]}],"kind":"content"}],"topicSections":[{"generated":true,"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)"]},{"generated":true,"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"symbolKind":"protocol","role":"symbol","externalID":"s:7Lockman0A8StrategyP","title":"LockmanStrategy","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}]},"references":{"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","title":"LockmanConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"kind":"symbol","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","text":"I"},{"kind":"text","text":")"}],"title":"lock(id:info:)","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"required":true,"role":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","type":"topic","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(id:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"}],"url":"\/documentation\/lockman\/lockmanstrategy\/canlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(id:info:)","required":true,"role":"symbol","kind":"symbol","type":"topic","title":"canLock(id:info:)","abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"type":"topic","title":"LockmanSingleExecutionStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic","kind":"symbol","title":"LockmanDynamicConditionStrategy","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(id:)":{"abstract":[{"text":"Removes all lock information for the specified boundary identifier.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(id:)","title":"cleanUp(id:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(id:)","kind":"symbol","role":"symbol","required":true},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","navigatorTitle":[{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"type":"topic","role":"symbol","title":"LockmanCompositeStrategy4","url":"\/documentation\/lockman\/lockmancompositestrategy4","kind":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 4 different strategies."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy4","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","url":"\/documentation\/lockman\/lockmancompositestrategy5","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 5 different strategies."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"kind":"symbol","title":"LockmanCompositeStrategy5"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy2","type":"topic","navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"title":"LockmanCompositeStrategy2","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"title":"I","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","url":"\/documentation\/lockman\/lockmanstrategy\/i","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"}],"required":true,"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"type":"topic","title":"getCurrentLocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"title":"makeStrategyId()","abstract":[{"text":"Creates a strategy identifier for this strategy type.","type":"text"}],"required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(id:info:)","kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(id:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"title":"unlock(id:info:)","type":"topic","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","required":true,"title":"strategyId","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"title":"LockmanGroupCoordinationStrategy","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"navigatorTitle":[{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmancompositestrategy3","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy3","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 3 different strategies.","type":"text"}],"title":"LockmanCompositeStrategy3","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"title":"LockmanPriorityBasedStrategy"}}}