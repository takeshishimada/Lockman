{"kind":"symbol","abstract":[{"text":"Releases a previously acquired lock for the specified boundary and action.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier whose lock should be released"}]}]},{"name":"info","content":[{"inlineContent":[{"text":"The exact lock information that was used when acquiring the lock","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Removes the specific lock information from the internal state using the","type":"text"},{"text":" ","type":"text"},{"text":"instanceâ€™s ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":". This provides precise lock management and prevents","type":"text"},{"text":" ","type":"text"},{"text":"unintended removal of other locks with the same ","type":"text"},{"code":"actionId","type":"codeVoice"},{"text":".","type":"text"}]},{"level":2,"anchor":"Instance-Specific-Removal","type":"heading","text":"Instance-Specific Removal"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only the exact "},{"type":"codeVoice","code":"info"},{"type":"text","text":" instance that was passed to "},{"type":"codeVoice","code":"lock()"},{"type":"text","text":" is removed."},{"type":"text","text":" "},{"type":"text","text":"Other instances with the same "},{"type":"codeVoice","code":"actionId"},{"type":"text","text":" but different "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":" values"},{"type":"text","text":" "},{"type":"text","text":"remain unaffected."}]},{"level":2,"anchor":"Rationale-for-uniqueId-based-Removal","type":"heading","text":"Rationale for uniqueId-based Removal"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"actionId"},{"type":"text","text":" for removal provides:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Precision"}]},{"type":"text","text":": Only removes the specific lock instance that was acquired"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Safety"}]},{"type":"text","text":": Prevents accidental removal of other locks with the same actionId"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Consistency"}],"type":"strong"},{"text":": Maintains 1:1 correspondence between lock() and unlock() calls","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Flexibility","type":"text"}]},{"type":"text","text":": Allows multiple lock instances with the same actionId in different scenarios"}]}]}]},{"level":2,"anchor":"Example","type":"heading","text":"Example"},{"syntax":"swift","type":"codeListing","code":["let info1 = LockmanSingleExecutionInfo(actionId: \"sync\")","let info2 = LockmanSingleExecutionInfo(actionId: \"sync\")  \/\/ Same actionId, different uniqueId","","\/\/ Hypothetical scenario where both could be locked on different boundaries","strategy.lock(id: boundary1, info: info1)","strategy.lock(id: boundary2, info: info2)","","\/\/ Unlock only removes the specific instance","strategy.unlock(id: boundary1, info: info1)  \/\/ Only removes info1","\/\/ info2 remains locked on boundary2"]}]}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:7Lockman0A23SingleExecutionStrategyC6unlock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","symbolKind":"method","title":"unlock(id:info:)","modules":[{"name":"Lockman"}]},"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"type":"topic","title":"LockmanSingleExecutionStrategy","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","title":"LockmanSingleExecutionInfo","abstract":[{"text":"Information required for single-execution locking behavior.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/unlock(id:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","title":"unlock(id:info:)","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)","abstract":[{"text":"Releases a previously acquired lock for the specified boundary and action.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"}}}