{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling"},"variants":[{"paths":["\/documentation\/lockman\/errorhandling"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lockman provides detailed error information according to each strategy. This page explains error handling patterns common to all strategies and how to implement effective error handling."}]},{"type":"heading","level":2,"text":"Common Error Handling Patterns","anchor":"Common-Error-Handling-Patterns"},{"type":"heading","level":3,"text":"lockFailure Handler","anchor":"lockFailure-Handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic lockFailure handler structure used in all strategies:"}]},{"type":"codeListing","code":[".withLock(","    operation: { send in","        \/\/ Execute processing","    },","    lockFailure: { error, send in","        \/\/ Error handling","        if case .specificError(let info) = error as? StrategySpecificError {","            send(.userFriendlyMessage(\"Error message\"))","        }","    },","    action: action,","    cancelID: cancelID",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Parameters:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"error"},{"type":"text","text":": The error that occurred (strategy-specific error type)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"send"},{"type":"text","text":": Function for sending feedback to the user"}]}]}]},{"type":"heading","level":3,"text":"catch handler Pattern","anchor":"catch-handler-Pattern"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Handling general errors that occur during processing:"}]},{"type":"codeListing","code":["catch handler: { error, send in","    send(.operationError(error.localizedDescription))","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This handler catches errors thrown within the operation and appropriately notifies the user."}]},{"type":"heading","level":2,"text":"Types of Errors and Solutions","anchor":"Types-of-Errors-and-Solutions"},{"type":"heading","level":3,"text":"1. Lock Acquisition Failure (Already Locked)","anchor":"1-Lock-Acquisition-Failure-Already-Locked"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Concept"}],"type":"strong"},{"type":"text","text":": Occurs when the same processing or boundary is already running"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Common solutions","type":"text"}]},{"type":"text","text":":"}]},{"type":"codeListing","code":["lockFailure: { error, send in","    \/\/ Notify user that processing is in progress","    send(.showMessage(\"Processing is in progress\"))","    ","    \/\/ Or provide visual feedback in UI","    send(.setButtonState(.loading))","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"2. Permission\/Priority Conflicts","anchor":"2-PermissionPriority-Conflicts"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Concept","type":"text"}],"type":"strong"},{"text":": Occurs due to higher priority processing or group rule constraints","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Common solutions","type":"text"}]},{"type":"text","text":":"}]},{"type":"codeListing","code":["lockFailure: { error, send in","    \/\/ Understand the situation from errors containing detailed information","    if let conflictInfo = extractConflictInfo(from: error) {","        send(.showMessage(\"Another important process is running: \\(conflictInfo.description)\"))","    }","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"3. Cancellation Notification","anchor":"3-Cancellation-Notification"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Concept","type":"text"}],"type":"strong"},{"text":": When existing processing is cancelled by higher priority processing","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Common solutions","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"codeListing","code":["catch handler: { error, send in","    if error is CancellationError {","        send(.processCancelled(\"Interrupted by a more important process\"))","    } else {","        send(.processError(error.localizedDescription))","    }","}"],"syntax":"swift"},{"type":"heading","level":2,"text":"Best Practices","anchor":"Best-Practices"},{"type":"heading","level":3,"text":"1. Proper Error Type Casting","anchor":"1-Proper-Error-Type-Casting"},{"type":"codeListing","code":["\/\/ ✅ Good example: Cast to strategy-specific error type","if case .actionAlreadyRunning(let existingInfo) = error as? LockmanSingleExecutionError {","    \/\/ Use existingInfo to provide detailed information","}","","\/\/ ❌ Bad example: Treat error as string","send(.showError(error.localizedDescription))"],"syntax":"swift"},{"type":"heading","level":3,"text":"2. User-Friendly Messages","anchor":"2-User-Friendly-Messages"},{"type":"codeListing","code":["\/\/ ✅ Good example: Specific and easy to understand message","send(.showMessage(\"Saving data. Please wait a moment.\"))","","\/\/ ❌ Bad example: Technical error message","send(.showMessage(\"LockmanError: boundary locked\"))"],"syntax":"swift"},{"type":"heading","level":3,"text":"3. Utilizing Additional Information","anchor":"3-Utilizing-Additional-Information"},{"type":"paragraph","inlineContent":[{"text":"Many errors contain additional information:","type":"text"}]},{"type":"codeListing","code":["lockFailure: { error, send in","    switch error as? LockmanConcurrencyLimitedError {","    case .concurrencyLimitReached(let current, let limit, _):","        send(.showMessage(\"Concurrent execution limit (\\(limit)) reached (current: \\(current))\"))","    default:","        send(.showMessage(\"Cannot start processing\"))","    }","}"],"syntax":"swift"},{"type":"heading","level":2,"text":"Strategy-Specific Errors","anchor":"Strategy-Specific-Errors"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For detailed error information for each strategy, please refer to their respective documentation:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","overridingTitle":"SingleExecutionStrategy","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"SingleExecutionStrategy"}]},{"type":"text","text":" - Duplicate execution errors"}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"overridingTitle":"PriorityBasedStrategy","overridingTitleInlineContent":[{"text":"PriorityBasedStrategy","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy"},{"type":"text","text":" - Priority conflict errors"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","isActive":true,"overridingTitle":"GroupCoordinationStrategy","type":"reference","overridingTitleInlineContent":[{"text":"GroupCoordinationStrategy","type":"text"}]},{"type":"text","text":" - Group rule violation errors"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"ConcurrencyLimitedStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","overridingTitle":"ConcurrencyLimitedStrategy","isActive":true,"type":"reference"},{"text":" - Concurrent execution limit exceeded errors","type":"text"}]}]},{"content":[{"inlineContent":[{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"DynamicConditionStrategy"}],"overridingTitle":"DynamicConditionStrategy","type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy"},{"text":" - Condition mismatch errors","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"overridingTitle":"CompositeStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","overridingTitleInlineContent":[{"type":"text","text":"CompositeStrategy"}],"isActive":true,"type":"reference"},{"text":" - Composite strategy errors","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"roleHeading":"Article","title":"Error Handling","modules":[{"name":"Lockman"}],"role":"article"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","seeAlsoSections":[{"title":"Essentials","anchor":"Essentials","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"]}],"references":{"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"role":"article","type":"topic","abstract":[{"text":"Control actions based on runtime conditions.","type":"text"}],"title":"DynamicConditionStrategy","url":"\/documentation\/lockman\/dynamicconditionstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","kind":"article"},"doc://Lockman/documentation/Lockman/Lock":{"kind":"article","abstract":[{"type":"text","text":"Understanding the locking mechanism in Lockman."}],"url":"\/documentation\/lockman\/lock","title":"Lock","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"topic"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"abstract":[{"text":"Understand the concept of boundaries in Lockman.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","title":"Boundary","kind":"article","role":"article","url":"\/documentation\/lockman\/boundaryoverview","type":"topic"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"type":"topic","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"title":"GroupCoordinationStrategy","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","url":"\/documentation\/lockman\/groupcoordinationstrategy","role":"article"},"doc://Lockman/documentation/Lockman/GettingStarted":{"title":"Getting Started","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","url":"\/documentation\/lockman\/gettingstarted","kind":"article","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}],"role":"article"},"doc://Lockman/documentation/Lockman/Unlock":{"abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","title":"Unlock","kind":"article","role":"article","url":"\/documentation\/lockman\/unlock","type":"topic"},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"kind":"article","role":"article","url":"\/documentation\/lockman\/concurrencylimitedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","title":"ConcurrencyLimitedStrategy","type":"topic","abstract":[{"text":"Limit the number of concurrent executions.","type":"text"}]},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"url":"\/documentation\/lockman\/singleexecutionstrategy","title":"SingleExecutionStrategy","abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}],"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","type":"topic","role":"article"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","kind":"article","type":"topic","title":"Debugging Guide","abstract":[{"text":"Learn how to debug Lockman-related issues in your application.","type":"text"}],"role":"article"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","url":"\/documentation\/lockman\/compositestrategy","type":"topic","kind":"article","title":"CompositeStrategy","role":"article"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"title":"PriorityBasedStrategy","kind":"article","url":"\/documentation\/lockman\/prioritybasedstrategy","role":"article","abstract":[{"type":"text","text":"Control action execution based on priority levels."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","type":"topic"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/Configuration":{"title":"Configuration","url":"\/documentation\/lockman\/configuration","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","kind":"article","type":"topic","abstract":[{"type":"text","text":"Configure Lockman for your application’s needs."}],"role":"article"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"role":"article","type":"topic","url":"\/documentation\/lockman\/choosingstrategy","title":"Choosing a Strategy"}}}