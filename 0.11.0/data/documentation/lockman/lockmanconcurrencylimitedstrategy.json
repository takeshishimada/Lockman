{"metadata":{"externalID":"s:7Lockman0A26ConcurrencyLimitedStrategyC","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"title":"LockmanConcurrencyLimitedStrategy","role":"symbol","modules":[{"name":"Lockman"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"symbolKind":"class"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId"],"generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(id:info:)"],"generated":true},{"anchor":"Type-Aliases","title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I"],"generated":true},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared"],"generated":true},{"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()"],"generated":true}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"platforms":["macOS"]}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/canLock(id:info:)":{"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/canlock(id:info:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(id:info:)","title":"canLock(id:info:)","abstract":[{"type":"text","text":"Checks if a lock can be acquired based on concurrency limits."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","text":"LockmanConcurrencyLimitedInfo"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp(id:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(id:)","title":"cleanUp(id:)","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup(id:)","abstract":[{"type":"text","text":"Removes all locks for a specific boundary."}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/makeStrategyId()":{"title":"makeStrategyId()","kind":"symbol","abstract":[{"text":"Creates the strategy identifier.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/unlock(id:info:)":{"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/unlock(id:info:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(id:info:)","title":"unlock(id:info:)","abstract":[{"type":"text","text":"Removes the lock from the state."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","text":"LockmanConcurrencyLimitedInfo"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","title":"LockmanConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"role":"symbol"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/shared":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared","type":"topic","abstract":[{"text":"Shared instance of the strategy.","type":"text"}],"title":"shared","role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","preciseIdentifier":"s:7Lockman0A26ConcurrencyLimitedStrategyC","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/I":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I","type":"topic","abstract":[{"text":"The type of lock info used by this strategy.","type":"text"}],"title":"LockmanConcurrencyLimitedStrategy.I","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"I"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/i"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/lock(id:info:)":{"abstract":[{"type":"text","text":"Adds the lock to the state."}],"type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(id:info:)","kind":"symbol","title":"lock(id:info:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/getCurrentLocks()":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/getcurrentlocks()","kind":"symbol","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","title":"getCurrentLocks()"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/strategyId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId","abstract":[{"type":"text","text":"The strategy identifier."}],"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/strategyid","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"title":"strategyId","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp()":{"title":"cleanUp()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all locks across all boundaries."}],"role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]}}}