{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()"},"sections":[],"metadata":{"title":"LockmanConcurrencyLimited()","externalID":"s:7Lockman0A18ConcurrencyLimitedyycfm","role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"macro"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"symbol","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/lockman\/lockmanconcurrencylimited()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A24ConcurrencyLimitedActionP","text":"LockmanConcurrencyLimitedAction","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimited","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"type":"codeVoice","code":"LockmanConcurrencyLimitedAction"}]}]},{"content":[{"inlineContent":[{"code":"actionName","type":"codeVoice"},{"type":"text","text":" property that returns the enum case name as a String"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Default "},{"type":"codeVoice","code":"strategyId"},{"type":"text","text":" implementation is provided by the protocol"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important"}]},{"type":"text","text":": You must implement the "},{"code":"lockmanInfo","type":"codeVoice"},{"type":"text","text":" property to specify concurrency limits:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a predefined concurrency group: "},{"type":"codeVoice","code":".init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Using direct limit: "},{"type":"codeVoice","code":".init(actionId: actionName, .limited(3))"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using unlimited: ","type":"text"},{"type":"codeVoice","code":".init(actionId: actionName, .unlimited)"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Define your concurrency groups","enum MyConcurrencyGroup: LockmanConcurrencyGroup {","  case apiRequests","  case fileOperations","  case uiUpdates","","  var id: String {","    switch self {","    case .apiRequests: return \"api_requests\"","    case .fileOperations: return \"file_operations\"","    case .uiUpdates: return \"ui_updates\"","    }","  }","","  var limit: LockmanConcurrencyLimit {","    switch self {","    case .apiRequests: return .limited(3)","    case .fileOperations: return .limited(2)","    case .uiUpdates: return .unlimited","    }","  }","}","","@Reducer","struct MyFeature {","  @LockmanConcurrencyLimited","  enum Action {","    case fetchUserProfile(User.ID)","    case uploadFile(File)","    case refreshUI","","    var lockmanInfo: LockmanConcurrencyLimitedInfo {","      switch self {","      case .fetchUserProfile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.apiRequests)","      case .uploadFile:","        \/\/ Use predefined group","        return .init(actionId: actionName, group: MyConcurrencyGroup.fileOperations)","      case .refreshUI:","        \/\/ Direct unlimited","        return .init(actionId: actionName, .unlimited)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .fetchUserProfile(let userId):","        return .withLock(","          operation: { send in","            \/\/ Only 3 concurrent API requests allowed","            let profile = try await api.fetchProfile(userId)","            await send(.profileFetched(profile))","          },","          action: .fetchUserProfile(userId),","          cancelID: \"fetch-profile-\\(userId)\"","        )","      \/\/ ...","      }","    }","  }","}"]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedAction":{"navigatorTitle":[{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"abstract":[{"text":"Protocol for actions that support concurrency limiting.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedAction","url":"\/documentation\/lockman\/lockmanconcurrencylimitedaction","title":"LockmanConcurrencyLimitedAction","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedAction","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"role":"collection","url":"\/documentation\/lockman","title":"Lockman","kind":"symbol","abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimited()":{"kind":"symbol","abstract":[{"text":"A macro that generates protocol conformance and required members for concurrency-limited locking behavior.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimited"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimited()","title":"LockmanConcurrencyLimited()","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimited()"}}}