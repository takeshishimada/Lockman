{"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Lockman"}],"symbolKind":"init","role":"symbol","roleHeading":"Initializer","title":"init(_:)","externalID":"s:7Lockman03AnyA8StrategyVyACyxGqd__c1IQyd__RszAA0aC0Rd__lufc"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"code":"LockmanStrategy<I>","type":"codeVoice"}],"type":"paragraph"}],"name":"strategy"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer performs type erasure by capturing the concrete strategy’s methods"},{"type":"text","text":" "},{"type":"text","text":"as closures. The concrete strategy’s lifetime is preserved through these closures,"},{"type":"text","text":" "},{"type":"text","text":"ensuring that the strategy remains valid for the lifetime of this wrapper."}]},{"type":"heading","level":2,"anchor":"Type-Safety","text":"Type Safety"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"where S.I == I","type":"codeVoice"},{"text":" constraint ensures that the concrete strategy’s lock information","type":"text"},{"text":" ","type":"text"},{"text":"type matches this wrapper’s lock information type, maintaining type safety at compile time.","type":"text"}]},{"type":"heading","level":2,"anchor":"Memory-Management","text":"Memory Management"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"For class-based strategies: The strategy instance is retained by the closures"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For struct-based strategies: The strategy is copied into the closures"}]}]},{"content":[{"inlineContent":[{"text":"Both approaches ensure proper lifetime management without memory leaks","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"anchor":"Performance-Notes","text":"Performance Notes"},{"type":"paragraph","inlineContent":[{"text":"The type erasure process happens once during initialization. Subsequent method calls","type":"text"},{"text":" ","type":"text"},{"text":"have minimal overhead (single function pointer indirection).","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"abstract":[{"text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol","type":"topic","title":"AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"role":"symbol","type":"topic"},"Lockman.png":{"identifier":"Lockman.png","type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","type":"topic","role":"symbol","title":"init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"type":"topic","title":"I","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/i"}}}