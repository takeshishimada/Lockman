{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybased()"]}],"kind":"symbol","abstract":[{"text":"A macro that generates protocol conformance and required members for priority-based locking behavior.","type":"text"}],"metadata":{"externalID":"s:7Lockman0A13PriorityBasedyycfm","role":"symbol","symbolKind":"macro","modules":[{"name":"Lockman"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBased","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Macro","title":"LockmanPriorityBased()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"preciseIdentifier":"s:7Lockman0A19PriorityBasedActionP","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedAction","text":"LockmanPriorityBasedAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBased"},{"kind":"text","text":"()"}]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanPriorityBasedAction"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"actionName","type":"codeVoice"},{"text":" property that returns the enum case name as a String","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"lockmanInfo"},{"type":"text","text":" property that provides "},{"type":"codeVoice","code":"LockmanPriorityBasedInfo"},{"type":"text","text":" (must be implemented by user)"}]}]},{"content":[{"inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Example usage with TCA:","type":"text"}]},{"syntax":"swift","code":["@Reducer","struct MyFeature {","  @LockmanPriorityBased","  enum Action {","    case highPriorityTask","    case lowPriorityTask","","    var lockmanInfo: LockmanPriorityBasedInfo {","      switch self {","      case .highPriorityTask:","        return .init(priority: 100, perBoundary: false, blocksSameAction: true)","      case .lowPriorityTask:","        return .init(priority: 10, perBoundary: false, blocksSameAction: true)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .highPriorityTask:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .highPriorityTask,","          cancelID: \"priority-task\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBased()"},"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedAction":{"title":"LockmanPriorityBasedAction","role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedaction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedAction","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"LockmanAction"},{"text":" subtype that enforces priority-based locking semantics.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"LockmanPriorityBasedAction","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedAction","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBased()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBased()","abstract":[{"text":"A macro that generates protocol conformance and required members for priority-based locking behavior.","type":"text"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBased","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybased()","type":"topic","title":"LockmanPriorityBased()","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]}}}