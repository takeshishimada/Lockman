{"metadata":{"externalID":"s:7Lockman03AnyA10BoundaryIdV2eeoiySbAC_ACtFZ","symbolKind":"op","title":"==(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","modules":[{"name":"Lockman"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The left-hand side wrapper to compare"}]}],"name":"lhs"},{"content":[{"inlineContent":[{"text":"The right-hand side wrapper to compare","type":"text"}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the wrapped values are equal; otherwise, "},{"type":"codeVoice","code":"false"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Two instances are equal if their wrapped values are equal according to"},{"type":"text","text":" "},{"type":"text","text":"the underlying type’s equality implementation."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Type Safety","anchor":"Type-Safety"},{"inlineContent":[{"type":"text","text":"Different types with identical values will not be equal due to "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"text","text":"type-aware equality comparison."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/==(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/lockman\/anylockmanboundaryid\/==(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Compares two ","type":"text"},{"code":"AnyLockmanBoundaryId","type":"codeVoice"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":" values.","type":"text"}],"references":{"Lockman.png":{"identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/==(_:_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/==(_:_:)","role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid\/==(_:_:)","type":"topic","abstract":[{"text":"Compares two ","type":"text"},{"code":"AnyLockmanBoundaryId","type":"codeVoice"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":" values.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"url":"\/documentation\/lockman\/anylockmanboundaryid","kind":"symbol","title":"AnyLockmanBoundaryId"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"}}}