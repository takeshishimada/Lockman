{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"metadata":{"title":"register(_:)","role":"symbol","externalID":"s:7Lockman0A17StrategyContainerC8registeryyxKAA0aB0RzlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"symbolKind":"method"},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/register(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(_:)"},"abstract":[{"type":"text","text":"Registers a concrete strategy instance using its own strategyId."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","preciseIdentifier":"s:7Lockman0A8StrategyP","kind":"typeIdentifier","text":"LockmanStrategy"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"type":"codeVoice","code":"LockmanStrategy<I>"}]}],"name":"strategy"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Convenience method that uses the strategy’s built-in ID property.","type":"text"},{"text":" ","type":"text"},{"text":"This is the preferred method for registering strategies as it ensures","type":"text"},{"text":" ","type":"text"},{"text":"consistency between the strategy’s identity and its registration.","type":"text"}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"LockmanRegistrationError.strategyAlreadyRegistered","type":"codeVoice"},{"text":" if this ID is already registered","type":"text"}],"type":"paragraph"}],"name":"Throws"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["try container.register(LockmanSingleExecutionStrategy.shared)","\/\/ Uses strategy.strategyId automatically"]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/register(_:)":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/register(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(_:)","abstract":[{"text":"Registers a concrete strategy instance using its own strategyId.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"register(_:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"Lockman.png":{"type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","title":"LockmanStrategyContainer","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]}}}