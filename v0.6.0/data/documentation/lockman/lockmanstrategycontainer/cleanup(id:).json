{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"LockmanBoundaryId"},{"text":" whose associated lock state should be cleared","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method iterates through all registered strategies and calls their"},{"type":"text","text":" "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" method to clear state associated with the given boundary identifier."},{"type":"text","text":" "},{"type":"text","text":"Useful when a feature or component is being deallocated."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Error Handling","anchor":"Error-Handling"},{"inlineContent":[{"text":"Similar to ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":", errors in individual strategy cleanup are logged","type":"text"},{"text":" ","type":"text"},{"text":"but donâ€™t prevent cleanup of other strategies.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Complexity","anchor":"Complexity"},{"inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","title":"cleanUp(id:)"},"abstract":[{"text":"Invokes ","type":"text"},{"type":"codeVoice","code":"cleanUp(id:)"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"]}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"title":"cleanUp(id:)","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","title":"LockmanStrategyContainer","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]},"Lockman.png":{"alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","type":"image"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"}}}