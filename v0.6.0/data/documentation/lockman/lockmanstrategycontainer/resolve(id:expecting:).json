{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Resolves a registered strategy by its identifier."}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","title":"resolve(id:expecting:)","modules":[{"name":"Lockman"}],"role":"symbol","externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":" "},{"kind":"internalParam","text":"_"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type = I.self) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LockmanInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The strategy identifier to look up"}]}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected "},{"type":"codeVoice","code":"LockmanInfo"},{"type":"text","text":" type (for type inference)"}]}],"name":"expecting"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" wrapping the registered strategy instance"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns the type-erased strategy instance that was registered with the given ID."},{"type":"text","text":" "},{"type":"text","text":"The returned "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" provides the same interface as the original"},{"type":"text","text":" "},{"type":"text","text":"strategy but with erased concrete type information."}]},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"LockmanRegistrationError.strategyNotRegistered","type":"codeVoice"},{"text":" if no strategy with this ID is registered","type":"text"}],"type":"paragraph"}]},{"type":"heading","anchor":"Complexity","level":2,"text":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(1) - Direct hash map lookup by ID","type":"text"}]},{"type":"heading","anchor":"Thread-Safety","level":2,"text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"text":"Safe to call concurrently from multiple threads. Resolution is atomic.","type":"text"}]},{"type":"heading","anchor":"Example","level":2,"text":"Example"},{"type":"codeListing","syntax":"swift","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"]}]}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","kind":"symbol","title":"LockmanStrategyId","role":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo","abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"kind":"symbol","title":"LockmanInfo","type":"topic"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","type":"image","identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","title":"LockmanStrategyContainer","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol","type":"topic","title":"AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"resolve(id:expecting:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","kind":"symbol","abstract":[{"type":"text","text":"Resolves a registered strategy by its identifier."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)","role":"symbol"}}}