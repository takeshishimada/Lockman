{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Removes a specific strategy from the container by its ID."}],"metadata":{"roleHeading":"Instance Method","title":"unregister(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC10unregister2idSbAA0aB2IdV_tF","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The strategy ID to unregister"}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the strategy was found and removed, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it wasn’t registered","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This method allows unregistering a strategy that is no longer needed.","type":"text"},{"text":" ","type":"text"},{"text":"The strategy’s cleanup method is called before removal.","type":"text"}],"type":"paragraph"},{"text":"Use Cases","anchor":"Use-Cases","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"text":"Dynamic strategy replacement","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management in long-running applications"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test cleanup","type":"text"}]}]}],"type":"unorderedList"},{"text":"Example","anchor":"Example","type":"heading","level":2},{"code":["let wasRemoved = container.unregister(id: \"MyApp.Custom:v1\")","if wasRemoved {","  print(\"Strategy successfully unregistered\")","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","title":"LockmanStrategyContainer","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/unregister(id:)":{"abstract":[{"text":"Removes a specific strategy from the container by its ID.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)","type":"topic","title":"unregister(id:)","url":"\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)","kind":"symbol"},"Lockman.png":{"type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","kind":"symbol","title":"LockmanStrategyId","role":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"type":"topic"}}}