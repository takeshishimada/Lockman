{"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/RawRepresentable-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"platforms":["macOS"]}]}],"metadata":{"title":"hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","symbolKind":"method","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::s:7Lockman0A21GroupCoordinationRoleO17LeaderEntryPolicyO","modules":[{"name":"Lockman","relatedModules":["Swift"]}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/hash(into:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole":{"title":"LockmanGroupCoordinationRole","url":"\/documentation\/lockman\/lockmangroupcoordinationrole","type":"topic","navigatorTitle":[{"text":"LockmanGroupCoordinationRole","kind":"identifier"}],"abstract":[{"text":"Role definition for group coordination strategy.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationRole","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/RawRepresentable-Implementations":{"abstract":[],"kind":"article","type":"topic","title":"RawRepresentable Implementations","role":"collectionGroup","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/rawrepresentable-implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/RawRepresentable-Implementations"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy":{"kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy","abstract":[{"text":"Policy for when a leader can enter a group.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy","role":"symbol","type":"topic","title":"LockmanGroupCoordinationRole.LeaderEntryPolicy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LeaderEntryPolicy","kind":"identifier"}],"navigatorTitle":[{"text":"LeaderEntryPolicy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationRole/LeaderEntryPolicy/hash(into:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationRole\/LeaderEntryPolicy\/hash(into:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","title":"hash(into:)","type":"topic","url":"\/documentation\/lockman\/lockmangroupcoordinationrole\/leaderentrypolicy\/hash(into:)"}}}