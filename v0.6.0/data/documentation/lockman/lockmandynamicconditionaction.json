{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"symbolKind":"protocol","navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"externalID":"s:7Lockman0A22DynamicConditionActionP","title":"LockmanDynamicConditionAction","role":"symbol","modules":[{"name":"Lockman"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanAction","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","preciseIdentifier":"s:7Lockman0A6ActionP"}]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Conforming types can create lock info with custom conditions that are evaluated at runtime.","type":"text"}]},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .failure(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Inherits From"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction"},"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"abstract":[{"text":"The name of the action, typically the enum case name.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","required":true,"role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actionName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"actionName"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"Lockman.png":{"type":"image","alt":"Lockman logo","identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman/LockmanAction":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanaction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","type":"topic","abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanAction"}],"title":"LockmanAction"},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","type":"topic","role":"symbol","abstract":[{"text":"Creates lock info with a custom condition.","type":"text"}],"defaultImplementations":1,"kind":"symbol","required":true,"title":"with(condition:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"url":"\/documentation\/lockman\/lockmandynamicconditionaction","type":"topic","role":"symbol","navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"title":"LockmanDynamicConditionAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}]}}}