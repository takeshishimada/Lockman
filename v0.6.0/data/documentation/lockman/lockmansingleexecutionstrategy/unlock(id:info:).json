{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The boundary identifier whose lock should be released","type":"text"}]}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The exact lock information that was used when acquiring the lock"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Removes the specific lock information from the internal state using the"},{"type":"text","text":" "},{"type":"text","text":"instanceâ€™s "},{"code":"uniqueId","type":"codeVoice"},{"type":"text","text":". This provides precise lock management and prevents"},{"type":"text","text":" "},{"type":"text","text":"unintended removal of other locks with the same "},{"code":"actionId","type":"codeVoice"},{"type":"text","text":"."}]},{"anchor":"Instance-Specific-Removal","type":"heading","level":2,"text":"Instance-Specific Removal"},{"type":"paragraph","inlineContent":[{"text":"Only the exact ","type":"text"},{"code":"info","type":"codeVoice"},{"text":" instance that was passed to ","type":"text"},{"code":"lock()","type":"codeVoice"},{"text":" is removed.","type":"text"},{"text":" ","type":"text"},{"text":"Other instances with the same ","type":"text"},{"code":"actionId","type":"codeVoice"},{"text":" but different ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":" values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"remain unaffected."}]},{"anchor":"Rationale-for-uniqueId-based-Removal","type":"heading","level":2,"text":"Rationale for uniqueId-based Removal"},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":" instead of ","type":"text"},{"code":"actionId","type":"codeVoice"},{"text":" for removal provides:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Precision","type":"text"}]},{"text":": Only removes the specific lock instance that was acquired","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Safety","type":"text"}],"type":"strong"},{"text":": Prevents accidental removal of other locks with the same actionId","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Consistency","type":"text"}]},{"type":"text","text":": Maintains 1:1 correspondence between lock() and unlock() calls"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Flexibility"}]},{"text":": Allows multiple lock instances with the same actionId in different scenarios","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"code":["let info1 = LockmanSingleExecutionInfo(actionId: \"sync\")","let info2 = LockmanSingleExecutionInfo(actionId: \"sync\")  \/\/ Same actionId, different uniqueId","","\/\/ Hypothetical scenario where both could be locked on different boundaries","strategy.lock(id: boundary1, info: info1)","strategy.lock(id: boundary2, info: info2)","","\/\/ Unlock only removes the specific instance","strategy.unlock(id: boundary1, info: info1)  \/\/ Only removes info1","\/\/ info2 remains locked on boundary2"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock for the specified boundary and action."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":")","kind":"text"}],"title":"unlock(id:info:)","externalID":"s:7Lockman0A23SingleExecutionStrategyC6unlock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","symbolKind":"method","modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method"},"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}]},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"title":"LockmanSingleExecutionInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","type":"topic","kind":"symbol","navigatorTitle":[{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/unlock(id:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"unlock(id:info:)","kind":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)","abstract":[{"type":"text","text":"Releases a previously acquired lock for the specified boundary and action."}]},"Lockman.png":{"identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","type":"image"}}}