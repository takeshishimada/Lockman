{"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"metadata":{"externalID":"s:7Lockman0A23SingleExecutionStrategyC7canLock2id4infoAA0A6ResultOx_AA0abC4InfoVtSHRzs8SendableRzlF","title":"canLock(id:info:)","modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}]},"abstract":[{"text":"Checks if a lock can be acquired for the given boundary and action.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","text":"LockmanResult","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}]}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The lock information containing the action ID and execution mode","type":"text"}]}],"name":"info"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The behavior depends on the execution mode specified in the info:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".none"},{"type":"text","text":": Always returns "},{"type":"codeVoice","code":".success"}]}]},{"content":[{"inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Returns ","type":"text"},{"code":".failure","type":"codeVoice"},{"text":" if any lock exists in the boundary","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".action"},{"text":": Returns ","type":"text"},{"type":"codeVoice","code":".failure"},{"text":" if a lock with the same action ID exists","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Example","level":2,"type":"heading","text":"Example"},{"syntax":"swift","type":"codeListing","code":["let strategy = LockmanSingleExecutionStrategy()","let info1 = LockmanSingleExecutionInfo(mode: .boundary)","let info2 = LockmanSingleExecutionInfo(mode: .action)","","strategy.lock(id: boundary, info: info1)","strategy.canLock(id: boundary, info: info2) \/\/ Result depends on mode and actionId"]}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"title":"LockmanSingleExecutionInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutioninfo","type":"topic","kind":"symbol","navigatorTitle":[{"text":"LockmanSingleExecutionInfo","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","title":"LockmanSingleExecutionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanResult":{"title":"LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"type":"topic","url":"\/documentation\/lockman\/lockmanresult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}]},"Lockman.png":{"type":"image","alt":"Lockman logo","identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/canLock(id:info:)":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/canlock(id:info:)","kind":"symbol","title":"canLock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"type":"topic","role":"symbol","abstract":[{"text":"Checks if a lock can be acquired for the given boundary and action.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/canLock(id:info:)"}}}