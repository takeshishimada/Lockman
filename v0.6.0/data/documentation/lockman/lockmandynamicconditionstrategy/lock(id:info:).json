{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"]]},"abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The boundary identifier","type":"text"}],"type":"paragraph"}],"name":"id"},{"content":[{"inlineContent":[{"text":"The lock information to register","type":"text"}],"type":"paragraph"}],"name":"info"}]}],"metadata":{"modules":[{"name":"Lockman"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:7Lockman0A24DynamicConditionStrategyC4lock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","symbolKind":"method","title":"lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(id:info:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanDynamicConditionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(id:info:)","kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(id:info:)","title":"lock(id:info:)","abstract":[{"text":"Acquires a lock for the specified boundary and action.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionInfo":{"title":"LockmanDynamicConditionInfo","abstract":[{"type":"text","text":"Lock information for dynamic condition-based execution control."}],"url":"\/documentation\/lockman\/lockmandynamicconditioninfo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionInfo","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionInfo"}]},"Lockman.png":{"identifier":"Lockman.png","type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]}}}