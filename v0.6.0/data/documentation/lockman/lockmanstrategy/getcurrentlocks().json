{"kind":"symbol","sections":[],"metadata":{"externalID":"s:7Lockman0A8StrategyP15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF","role":"symbol","modules":[{"name":"Lockman"}],"title":"getCurrentLocks()","required":true,"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()"},"abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"Dictionary mapping boundary IDs to their active lock information","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method provides a snapshot of all currently held locks managed by this strategy."},{"type":"text","text":" "},{"type":"text","text":"The returned dictionary maps boundary identifiers to arrays of lock information,"},{"type":"text","text":" "},{"type":"text","text":"allowing debug tools to display the current lock state."}],"type":"paragraph"},{"anchor":"Implementation-Guidelines","type":"heading","level":2,"text":"Implementation Guidelines"},{"items":[{"content":[{"inlineContent":[{"text":"Should return a snapshot of current state (not a live reference)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Should include all active locks across all boundaries"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The returned lock info should be the same instances passed to ","type":"text"},{"code":"lock","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"inlineContent":[{"text":"This method may be called while locks are being acquired\/released,","type":"text"},{"text":" ","type":"text"},{"text":"so implementations must handle concurrent access appropriately.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo","abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"kind":"symbol","title":"LockmanInfo","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"url":"\/documentation\/lockman\/anylockmanboundaryid","kind":"symbol","title":"AnyLockmanBoundaryId"},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"url":"\/documentation\/lockman\/lockmanstrategy","title":"LockmanStrategy","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"kind":"symbol","abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"title":"getCurrentLocks()","type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","required":true,"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo"},{"kind":"text","text":"]]"}]}}}