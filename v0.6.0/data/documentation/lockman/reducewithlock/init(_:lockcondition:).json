{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"reduce"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","text":"LockmanResult"},{"kind":"text","text":")? = nil)"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"reduce","content":[{"inlineContent":[{"type":"text","text":"The base reducer function to be executed."}],"type":"paragraph"}]},{"name":"lockCondition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional function that evaluates the current state and action"},{"type":"text","text":" "},{"type":"text","text":"to determine if a lock should be acquired. If nil, no reducer-level"},{"type":"text","text":" "},{"type":"text","text":"condition is applied."}]}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock"]]},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"init","role":"symbol","externalID":"s:7Lockman14ReduceWithLockV_13lockConditionACyxq_G22ComposableArchitecture6EffectVyq_Gxz_q_tc_AA0A6ResultOx_q_tYbcSgtcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"},{"kind":"text","text":")?)"}],"title":"init(_:lockCondition:)","roleHeading":"Initializer","modules":[{"name":"Lockman"}]},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"doc://Lockman/documentation/Lockman/ReduceWithLock":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReduceWithLock","kind":"identifier"}],"abstract":[{"type":"text","text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities."}],"title":"ReduceWithLock","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"ReduceWithLock","kind":"identifier"}],"url":"\/documentation\/lockman\/reducewithlock"},"doc://Lockman/documentation/Lockman/LockmanResult":{"title":"LockmanResult","abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"type":"topic","url":"\/documentation\/lockman\/lockmanresult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}]},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","type":"image","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/ReduceWithLock/init(_:lockCondition:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier","text":"Effect"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lockCondition"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}],"title":"init(_:lockCondition:)","url":"\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)"}}}