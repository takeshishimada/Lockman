{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A7GroupIda","text":"LockmanGroupId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An instance conforming to "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":" to be wrapped"}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Design Note","anchor":"Design-Note"},{"type":"paragraph","inlineContent":[{"text":"The underlying value is stored as ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":", which preserves the original","type":"text"},{"text":" ","type":"text"},{"text":"typeâ€™s hashing and equality behavior while enabling uniform storage.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/anylockmangroupid\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Lockman03AnyA7GroupIdVyACSH_s8Sendablepcfc","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A7GroupIda","text":"LockmanGroupId"},{"kind":"text","text":")"}],"title":"init(_:)","modules":[{"name":"Lockman"}],"symbolKind":"init","roleHeading":"Initializer"},"abstract":[{"text":"Creates a new ","type":"text"},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"type":"codeVoice","code":"LockmanGroupId"},{"text":".","type":"text"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}],"url":"\/documentation\/lockman\/anylockmangroupid","title":"AnyLockmanGroupId","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}]},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"LockmanGroupId","preciseIdentifier":"s:7Lockman0A7GroupIda"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"type":"codeVoice","code":"LockmanGroupId"},{"type":"text","text":"."}],"title":"init(_:)","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupId","kind":"symbol","role":"symbol","abstract":[{"text":"A group identifier used by Lockman strategies, combining ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" ","type":"text"},{"text":"to ensure unique and concurrent-safe keys.","type":"text"}],"title":"LockmanGroupId","url":"\/documentation\/lockman\/lockmangroupid","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanGroupId","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"images":[{"type":"icon","identifier":"Lockman.png"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman","role":"collection","url":"\/documentation\/lockman","abstract":[{"text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind.","type":"text"}],"title":"Lockman","kind":"symbol"},"Lockman.png":{"type":"image","alt":"Lockman logo","identifier":"Lockman.png","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]}}}