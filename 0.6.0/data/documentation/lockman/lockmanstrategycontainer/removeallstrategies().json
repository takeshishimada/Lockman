{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method calls "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" on all strategies before removing them,"},{"type":"text","text":" "},{"type":"text","text":"ensuring proper cleanup. The container returns to its initial empty state."}]},{"level":2,"type":"heading","text":"Use Cases","anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Application shutdown","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite reset"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","text":"Complexity","anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Instance Method","externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","symbolKind":"method","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"text":"()","kind":"text"}],"role":"symbol","title":"removeAllStrategies()"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()","title":"removeAllStrategies()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"role":"symbol"},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol","role":"symbol"}}}