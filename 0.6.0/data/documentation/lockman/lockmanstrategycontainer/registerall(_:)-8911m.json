{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-8911m","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Registers multiple strategies using their own strategyIds in a single atomic operation.","type":"text"}],"sections":[],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"externalID":"s:7Lockman0A17StrategyContainerC11registerAllyySayxGKAA0aB0RzlF","symbolKind":"method","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","role":"symbol","title":"registerAll(_:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategies"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Lockman0A8StrategyP","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","kind":"typeIdentifier","text":"LockmanStrategy"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"strategies","content":[{"type":"paragraph","inlineContent":[{"text":"Array of strategies to register","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Convenience method that uses each strategyâ€™s built-in ID property.","type":"text"},{"text":" ","type":"text"},{"text":"Either all strategies are registered successfully or none are registered.","type":"text"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"LockmanError.strategyAlreadyRegistered","type":"codeVoice"},{"text":" if any ID is already registered","type":"text"}]}],"type":"aside","name":"Throws"},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"syntax":"swift","code":["try container.registerAll([","  LockmanSingleExecutionStrategy.shared,","  LockmanPriorityBasedStrategy.shared,","  MyCustomStrategy()","])"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-8911m"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/registerAll(_:)-8911m":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registerAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"text":"Registers multiple strategies using their own strategyIds in a single atomic operation.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/registerAll(_:)-8911m","title":"registerAll(_:)","url":"\/documentation\/lockman\/lockmanstrategycontainer\/registerall(_:)-8911m"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","alt":"Lockman logo"}}}