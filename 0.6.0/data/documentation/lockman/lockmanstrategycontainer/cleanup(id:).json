{"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF","role":"symbol","modules":[{"name":"Lockman"}],"title":"cleanUp(id:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":" whose associated lock state should be cleared","type":"text"}],"type":"paragraph"}],"name":"id"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method iterates through all registered strategies and calls their","type":"text"},{"text":" ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" method to clear state associated with the given boundary identifier.","type":"text"},{"text":" ","type":"text"},{"text":"Useful when a feature or component is being deallocated.","type":"text"}]},{"type":"heading","text":"Error Handling","anchor":"Error-Handling","level":2},{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"text":", errors in individual strategy cleanup are logged","type":"text"},{"text":" ","type":"text"},{"text":"but donâ€™t prevent cleanup of other strategies.","type":"text"}]},{"type":"heading","text":"Complexity","anchor":"Complexity","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(n) where n is the number of registered strategies"}]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","title":"cleanUp(id:)","abstract":[{"text":"Invokes ","type":"text"},{"code":"cleanUp(id:)","type":"codeVoice"},{"text":" on all registered strategies for a specific boundary.","type":"text"}],"type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","identifier":"Lockman.png","alt":"Lockman logo"}}}