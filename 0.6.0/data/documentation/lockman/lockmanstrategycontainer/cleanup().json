{"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method iterates through all registered strategies and calls their"},{"type":"text","text":" "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" method to clear any internal state. Useful for application"},{"type":"text","text":" "},{"type":"text","text":"shutdown or global reset scenarios."}]},{"anchor":"Error-Handling","text":"Error Handling","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"If any strategyâ€™s cleanup operation fails, the error is logged but","type":"text"},{"text":" ","type":"text"},{"text":"cleanup continues for remaining strategies to ensure best-effort cleanup.","type":"text"}]},{"anchor":"Complexity","text":"Complexity","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" on all registered strategies."}],"metadata":{"title":"cleanUp()","externalID":"s:7Lockman0A17StrategyContainerC7cleanUpyyF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Lockman"}]},"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"alt":"Lockman logo","type":"image"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp()","role":"symbol","title":"cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"abstract":[{"text":"Invokes ","type":"text"},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":" on all registered strategies."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup()"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol","role":"symbol"}}}