{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unregister"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","text":"LockmanStrategyId"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"The strategy ID to unregister"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the strategy was found and removed, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if it wasn’t registered","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method allows unregistering a strategy that is no longer needed.","type":"text"},{"text":" ","type":"text"},{"text":"The strategy’s cleanup method is called before removal.","type":"text"}]},{"text":"Use Cases","type":"heading","anchor":"Use-Cases","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Dynamic strategy replacement","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Memory management in long-running applications"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test cleanup"}]}]}]},{"text":"Example","type":"heading","anchor":"Example","level":2},{"code":["let wasRemoved = container.unregister(id: \"MyApp.Custom:v1\")","if wasRemoved {","  print(\"Strategy successfully unregistered\")","}"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)"},"metadata":{"externalID":"s:7Lockman0A17StrategyContainerC10unregister2idSbAA0aB2IdV_tF","role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","title":"unregister(id:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"abstract":[{"text":"Removes a specific strategy from the container by its ID.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"url":"\/documentation\/lockman\/lockmanstrategyid","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"type":"topic","title":"LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"role":"symbol"},"Lockman.png":{"identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/unregister(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Removes a specific strategy from the container by its ID.","type":"text"}],"title":"unregister(id:)"}}}