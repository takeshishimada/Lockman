{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)"},"kind":"symbol","metadata":{"role":"symbol","externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"resolve(id:expecting:)","modules":[{"name":"Lockman"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"_","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type = I.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The strategy identifier to look up","type":"text"}]}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The expected ","type":"text"},{"type":"codeVoice","code":"LockmanInfo"},{"text":" type (for type inference)","type":"text"}]}],"name":"expecting"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AnyLockmanStrategy<I>","type":"codeVoice"},{"text":" wrapping the registered strategy instance","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns the type-erased strategy instance that was registered with the given ID."},{"type":"text","text":" "},{"type":"text","text":"The returned "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" provides the same interface as the original"},{"type":"text","text":" "},{"type":"text","text":"strategy but with erased concrete type information."}]},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LockmanRegistrationError.strategyNotRegistered"},{"type":"text","text":" if no strategy with this ID is registered"}],"type":"paragraph"}],"type":"aside","style":"note"},{"anchor":"Complexity","type":"heading","level":2,"text":"Complexity"},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) - Direct hash map lookup by ID"}]},{"anchor":"Thread-Safety","type":"heading","level":2,"text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Safe to call concurrently from multiple threads. Resolution is atomic."}]},{"anchor":"Example","type":"heading","level":2,"text":"Example"},{"syntax":"swift","type":"codeListing","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"title":"resolve(id:expecting:)","kind":"symbol","type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"kind":"symbol","type":"topic","role":"symbol"},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"url":"\/documentation\/lockman\/lockmanstrategyid","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"type":"topic","title":"LockmanStrategyId","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyId","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategyId","kind":"identifier"}],"role":"symbol"}}}