{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"AnyLockmanStrategy","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol","symbolKind":"struct","roleHeading":"Structure","externalID":"s:7Lockman03AnyA8StrategyV"},"kind":"symbol","topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId"],"anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods"},{"generated":true,"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()"],"anchor":"Type-Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy"]}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","text":"LockmanInfo"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"anchor":"Purpose","level":2,"text":"Purpose","type":"heading"},{"inlineContent":[{"code":"AnyLockmanStrategy","type":"codeVoice"},{"type":"text","text":" solves the fundamental problem of storing different concrete"},{"type":"text","text":" "},{"type":"text","text":"strategy implementations in the same collection. Without type erasure, you cannot"},{"type":"text","text":" "},{"type":"text","text":"store "},{"code":"LockmanSingleExecutionStrategy","type":"codeVoice"},{"type":"text","text":" and "},{"code":"LockmanPriorityBasedStrategy","type":"codeVoice"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"same array, even though they both conform to "},{"code":"LockmanStrategy","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Key-Benefits","level":2,"text":"Key Benefits","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Heterogeneous Collections"}]},{"type":"text","text":": Store different strategy implementations together"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Runtime Strategy Selection"}],"type":"strong"},{"text":": Choose strategies dynamically based on conditions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"API Boundaries","type":"text"}],"type":"strong"},{"type":"text","text":": Hide concrete strategy types from public interfaces"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Dependency Injection"}]},{"type":"text","text":": Enable flexible strategy registration and resolution"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Universal Compatibility","type":"text"}]},{"type":"text","text":": Support both class and struct strategy implementations"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Type-Safety-Guarantees","level":2,"text":"Type Safety Guarantees","type":"heading"},{"inlineContent":[{"text":"While the concrete strategy type is erased, type safety for lock information ","type":"text"},{"type":"codeVoice","code":"I"},{"text":" ","type":"text"},{"text":"is preserved at the ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"text":" level. This means you cannot accidentally","type":"text"},{"text":" ","type":"text"},{"text":"use ","type":"text"},{"type":"codeVoice","code":"LockmanSingleExecutionInfo"},{"text":" with a priority-based strategy wrapper.","type":"text"}],"type":"paragraph"},{"anchor":"Performance-Considerations","level":2,"text":"Performance Considerations","type":"heading"},{"inlineContent":[{"text":"Type erasure introduces a small runtime overhead due to function pointer indirection.","type":"text"},{"text":" ","type":"text"},{"text":"However, this cost is typically negligible compared to the actual locking operations","type":"text"},{"text":" ","type":"text"},{"text":"and is justified by the flexibility gained.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/makeStrategyId()":{"type":"topic","abstract":[{"text":"Creates a strategy identifier for the type-erased strategy.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"title":"makeStrategyId()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/makeStrategyId()","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/makestrategyid()"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(id:info:)":{"type":"topic","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"title":"canLock(id:info:)","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","role":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(id:info:)":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"lock(id:info:)","role":"symbol","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","type":"topic","kind":"symbol","role":"symbol"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","title":"cleanUp()"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/anylockmanstrategy\/getcurrentlocks()","type":"topic","kind":"symbol","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/getCurrentLocks()","title":"getCurrentLocks()"},"Lockman.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","alt":"Lockman logo","type":"image"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/strategyId":{"url":"\/documentation\/lockman\/anylockmanstrategy\/strategyid","role":"symbol","type":"topic","title":"strategyId","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"abstract":[{"text":"The identifier for this type-erased strategy.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/strategyId","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"kind":"symbol","title":"init(_:)","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(id:info:)":{"url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(id:info:)","type":"topic","title":"unlock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(id:info:)","kind":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"}}}