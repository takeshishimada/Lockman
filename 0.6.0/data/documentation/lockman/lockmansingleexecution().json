{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","externalID":"s:7Lockman0A15SingleExecutionyycfm","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Macro","title":"LockmanSingleExecution()","modules":[{"name":"Lockman"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for single execution locking behavior."}],"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecution()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP","text":"LockmanSingleExecutionAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"@attached","kind":"attribute"},{"text":"(member, names: named(actionName)) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanSingleExecutionAction"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"actionName"},{"type":"text","text":" property that returns the enum case name as a String"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default "},{"code":"strategyId","type":"codeVoice"},{"type":"text","text":" implementation is provided by the protocol"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Important","type":"text"}],"type":"strong"},{"text":": You must implement the ","type":"text"},{"type":"codeVoice","code":"lockmanInfo"},{"text":" property to specify the execution mode:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".none","type":"codeVoice"},{"type":"text","text":": No exclusive execution (always allows locks)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".boundary"},{"type":"text","text":": Only one action per boundary at a time (default behavior)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".action"},{"text":": Only one instance of the same actionId at a time","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Example usage with TCA:","type":"text"}]},{"code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .login,","          cancelID: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing","syntax":"swift"}]}],"references":{"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"url":"\/documentation\/lockman\/lockmansingleexecution()","abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for single execution locking behavior."}],"fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}],"role":"symbol","title":"LockmanSingleExecution()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","role":"symbol","title":"LockmanSingleExecutionAction","url":"\/documentation\/lockman\/lockmansingleexecutionaction","abstract":[{"type":"text","text":"A specialized "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":" for single-execution locking semantics."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionAction"}]}}}