{"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()"]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Lockman"}],"title":"cleanUp()","externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUpyyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Clears all internal lock state, effectively resetting the strategy to its"},{"type":"text","text":" "},{"type":"text","text":"initial state. This operation affects all boundaries simultaneously."}],"type":"paragraph"},{"text":"Use Cases","anchor":"Use-Cases","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown sequences"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Global system resets during development","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite cleanup between test cases","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()"},"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"kind":"symbol"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","title":"cleanUp()","abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries."}],"kind":"symbol"}}}