{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7Lockman0A21PriorityBasedStrategyC7cleanUp2idyx_tSHRzs8SendableRzlF","title":"cleanUp(id:)","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier whose locks should be removed"}]}],"name":"id"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides targeted cleanup for specific boundaries while preserving"},{"type":"text","text":" "},{"type":"text","text":"lock state for other boundaries. This allows fine-grained control"},{"type":"text","text":" "},{"type":"text","text":"over which priority contexts to reset."}]},{"type":"heading","text":"Use Cases","anchor":"Use-Cases","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Feature-specific cleanup when components are deallocated","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"User session cleanup when users log out","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scoped cleanup for temporary contexts or workflows"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Partial system resets during development","type":"text"}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"]]},"abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","identifier":"Lockman.png"}}}