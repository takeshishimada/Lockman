{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"reduce","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6EffectV","text":"Effect","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","kind":"typeIdentifier"},{"text":")? = nil)","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"reduce","content":[{"type":"paragraph","inlineContent":[{"text":"The base reducer function to be executed.","type":"text"}]}]},{"name":"lockCondition","content":[{"inlineContent":[{"text":"Optional function that evaluates the current state and action","type":"text"},{"text":" ","type":"text"},{"text":"to determine if a lock should be acquired. If nil, no reducer-level","type":"text"},{"text":" ","type":"text"},{"text":"condition is applied.","type":"text"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock"]]},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":")?)","kind":"text"}],"role":"symbol","symbolKind":"init","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman14ReduceWithLockV_13lockConditionACyxq_G22ComposableArchitecture6EffectVyq_Gxz_q_tc_AA0A6ResultOx_q_tYbcSgtcfc","roleHeading":"Initializer","title":"init(_:lockCondition:)"},"sections":[],"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"identifier":"Lockman.png","type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/ReduceWithLock":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock","url":"\/documentation\/lockman\/reducewithlock","abstract":[{"type":"text","text":"A reducer that wraps another reducer with dynamic lock evaluation capabilities."}],"kind":"symbol","type":"topic","role":"symbol","title":"ReduceWithLock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReduceWithLock","kind":"identifier"}],"navigatorTitle":[{"text":"ReduceWithLock","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanResult":{"abstract":[{"text":"The result of attempting to acquire a lock.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}],"url":"\/documentation\/lockman\/lockmanresult","type":"topic","title":"LockmanResult","role":"symbol"},"doc://Lockman/documentation/Lockman/ReduceWithLock/init(_:lockCondition:)":{"title":"init(_:lockCondition:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6EffectV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lockCondition","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ReduceWithLock\/init(_:lockCondition:)","url":"\/documentation\/lockman\/reducewithlock\/init(_:lockcondition:)","abstract":[{"type":"text","text":"Initializes a reducer with optional lock condition evaluation."}]}}}