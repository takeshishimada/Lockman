{"variants":[{"paths":["\/documentation\/lockman\/anylockmanboundaryid\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"hasher","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The hasher to use when combining the components of this instance"}]}]}]},{"content":[{"level":2,"type":"heading","text":"Hash Collision Prevention","anchor":"Hash-Collision-Prevention"},{"inlineContent":[{"type":"text","text":"Since "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" includes type information in its hash, two different"},{"type":"text","text":" "},{"type":"text","text":"types with the same value will produce different hash values, preventing"},{"type":"text","text":" "},{"type":"text","text":"unintended collisions in hash-based collections."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/hash(into:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"sections":[],"metadata":{"title":"hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"externalID":"s:7Lockman03AnyA10BoundaryIdV4hash4intoys6HasherVz_tF","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"role":"symbol"},"abstract":[{"text":"Generates hash values that include type information to prevent","type":"text"},{"text":" ","type":"text"},{"text":"different boundary ID types with identical values from colliding.","type":"text"}],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"title":"AnyLockmanBoundaryId","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/hash(into:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/hash(into:)","title":"hash(into:)","abstract":[{"type":"text","text":"Generates hash values that include type information to prevent"},{"type":"text","text":" "},{"type":"text","text":"different boundary ID types with identical values from colliding."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid\/hash(into:)"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo","identifier":"Lockman.png"}}}