{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"LockmanBoundaryId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","preciseIdentifier":"s:7Lockman0A10BoundaryIda"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"inlineContent":[{"type":"text","text":"An instance conforming to "},{"code":"LockmanBoundaryId","type":"codeVoice"},{"type":"text","text":" to be wrapped"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Design Note","type":"heading","anchor":"Design-Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The underlying value is stored as "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":", which preserves the original"},{"type":"text","text":" "},{"type":"text","text":"typeâ€™s hashing and equality behavior while enabling uniform storage."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanboundaryid\/init(_:)"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"]]},"abstract":[{"text":"Creates a new ","type":"text"},{"code":"AnyLockmanBoundaryId","type":"codeVoice"},{"text":" by erasing the type of a value that conforms to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"LockmanBoundaryId","preciseIdentifier":"s:7Lockman0A10BoundaryIda"},{"kind":"text","text":")"}],"title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","role":"symbol","externalID":"s:7Lockman03AnyA10BoundaryIdVyACSH_s8Sendablepcfc"},"sections":[],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId/init(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId\/init(_:)","title":"init(_:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"AnyLockmanBoundaryId"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":"."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"preciseIdentifier":"s:7Lockman0A10BoundaryIda","kind":"typeIdentifier","text":"LockmanBoundaryId"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/lockman\/anylockmanboundaryid\/init(_:)"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"title":"AnyLockmanBoundaryId","type":"topic"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"type":"image","identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanBoundaryId":{"navigatorTitle":[{"kind":"identifier","text":"LockmanBoundaryId"}],"role":"symbol","title":"LockmanBoundaryId","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanBoundaryId"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A boundary identifier used by Lockman strategies, combining "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" "},{"type":"text","text":"to ensure unique and concurrent-safe keys."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanBoundaryId","url":"\/documentation\/lockman\/lockmanboundaryid"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"}}}