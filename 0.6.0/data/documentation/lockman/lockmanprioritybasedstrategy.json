{"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"]},{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"]},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"]},{"generated":true,"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"]},{"generated":true,"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"]},{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This strategy implements a sophisticated priority system that allows higher-priority"},{"type":"text","text":" "},{"type":"text","text":"actions to preempt lower-priority ones, while providing configurable concurrency"},{"type":"text","text":" "},{"type":"text","text":"behavior for actions of the same priority level."}],"type":"paragraph"},{"text":"Priority System Overview","level":2,"type":"heading","anchor":"Priority-System-Overview"},{"inlineContent":[{"type":"text","text":"The strategy maintains a per-boundary collection of active "},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"instances and uses the priority hierarchy to determine execution precedence:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"High Priority"}]},{"type":"text","text":" (.high): Can cancel low\/none priority actions"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Low Priority","type":"text"}]},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"No Priority"}],"type":"strong"},{"text":" (.none): Yields to all priority actions, simple conflict handling","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Concurrency Behavior Logic","level":2,"type":"heading","anchor":"Concurrency-Behavior-Logic"},{"inlineContent":[{"text":"When ","type":"text"},{"code":"canLock","type":"codeVoice"},{"text":" is called for same-priority actions, the strategy evaluates conflicts","type":"text"},{"text":" ","type":"text"},{"text":"using the existing action’s concurrency behavior:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"No Priority Actions"}],"type":"strong"},{"text":": Always succeed (bypass priority system)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}]},{"text":": Priority actions always win","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Different Priority Levels"}]},{"type":"text","text":": Higher priority wins"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Same Priority Level","type":"text"}],"type":"strong"},{"text":": Apply existing action’s ","type":"text"},{"code":"ConcurrencyBehavior","type":"codeVoice"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Exclusive","type":"text"}],"type":"strong"},{"text":": Existing action continues, new action fails","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Replaceable","type":"text"}]},{"type":"text","text":": Existing action is canceled, new action succeeds"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"orderedList"},{"text":"Thread Safety","level":2,"type":"heading","anchor":"Thread-Safety"},{"inlineContent":[{"type":"text","text":"This strategy is thread-safe through the underlying "},{"code":"LockmanState","type":"codeVoice"},{"type":"text","text":" which provides"},{"type":"text","text":" "},{"type":"text","text":"synchronized access to the per-boundary lock collections."}],"type":"paragraph"},{"text":"Usage Examples","level":2,"type":"heading","anchor":"Usage-Examples"},{"code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(id: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(id: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"metadata":{"title":"LockmanPriorityBasedStrategy","externalID":"s:7Lockman0A21PriorityBasedStrategyC","role":"symbol","modules":[{"name":"Lockman"}],"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"},"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(id:info:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","abstract":[{"text":"Evaluates whether a priority-based lock can be acquired.","type":"text"}],"title":"canLock(id:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(id:info:)","role":"symbol"},"Lockman.png":{"identifier":"Lockman.png","type":"image","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"kind":"symbol"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(id:info:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","title":"unlock(id:info:)","type":"topic","abstract":[{"type":"text","text":"Releases a previously acquired priority-based lock."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"title":"cleanUp(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","title":"strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","type":"topic","abstract":[{"text":"Creates a new priority-based strategy instance.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","title":"init()","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(id:info:)":{"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(id:info:)","role":"symbol","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","title":"lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","role":"symbol","title":"getCurrentLocks()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","title":"cleanUp()","abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries."}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"navigatorTitle":[{"kind":"identifier","text":"I"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"abstract":[],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","kind":"symbol","role":"symbol","title":"LockmanPriorityBasedStrategy.I","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","kind":"typeIdentifier","text":"LockmanPriorityBasedStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","title":"shared","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"abstract":[{"type":"text","text":"Creates a strategy identifier for the priority-based strategy."}],"title":"makeStrategyId()","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()"}}}