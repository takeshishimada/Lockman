{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"Lockman"}],"title":"LockmanGroupCoordination()","role":"symbol","externalID":"s:7Lockman0A17GroupCoordinationyycfm","roleHeading":"Macro","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordination"},{"kind":"text","text":"()"}],"symbolKind":"macro"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinatedAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22GroupCoordinatedActionP","text":"LockmanGroupCoordinatedAction"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordination"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Apply this macro to an enum declaration to automatically generate:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Protocol conformance to ","type":"text"},{"code":"LockmanGroupCoordinatedAction","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"actionName"},{"text":" property that returns the enum case name as a String","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default ","type":"text"},{"code":"strategyId","type":"codeVoice"},{"text":" implementation is provided by the protocol","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"inlineContent":[{"text":"Important","type":"text"}],"type":"strong"},{"text":": You must implement the ","type":"text"},{"code":"lockmanInfo","type":"codeVoice"},{"text":" property to specify coordination details:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The group ID(s) this action belongs to"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The coordination role (.leader or .member)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Example usage with TCA:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct NavigationFeature {","  @LockmanGroupCoordination","  enum Action {","    case navigate(to: String)","    case back","","    var lockmanInfo: LockmanGroupCoordinatedInfo {","      switch self {","      case .navigate:","        return LockmanGroupCoordinatedInfo(","          actionId: actionName,","          groupId: \"navigation\",","          coordinationRole: .leader","        )","      case .back:","        return LockmanGroupCoordinatedInfo(","          actionId: actionName,","          groupId: \"navigation\",","          coordinationRole: .member","        )","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .navigate:","        return .withLock(","          operation: { send in","            \/\/ navigation logic","          },","          action: .navigate(to: destination),","          cancelID: \"navigation\"","        )","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"text":"A macro that generates protocol conformance and required members for group coordination locking behavior.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordination()"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmangroupcoordination()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordination()":{"abstract":[{"text":"A macro that generates protocol conformance and required members for group coordination locking behavior.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordination()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordination"},{"kind":"text","text":"()"}],"type":"topic","title":"LockmanGroupCoordination()","kind":"symbol","url":"\/documentation\/lockman\/lockmangroupcoordination()","role":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"identifier":"Lockman.png","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"type":"image","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinatedAction":{"abstract":[{"text":"Protocol for actions that use group coordination locking behavior.","type":"text"}],"role":"symbol","title":"LockmanGroupCoordinatedAction","kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinatedAction","url":"\/documentation\/lockman\/lockmangroupcoordinatedaction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinatedAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinatedAction"}]}}}