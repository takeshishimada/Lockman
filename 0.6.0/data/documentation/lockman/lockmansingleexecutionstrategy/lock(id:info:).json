{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/lock(id:info:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}],"type":"paragraph"}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The lock information to register as active"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adds the lock information to the internal state. This method should only be called"},{"type":"text","text":" "},{"type":"text","text":"after "},{"type":"codeVoice","code":"canLock"},{"type":"text","text":" returns "},{"type":"codeVoice","code":".success"},{"type":"text","text":" to ensure proper lock coordination."}]},{"level":2,"type":"heading","anchor":"Instance-Tracking","text":"Instance Tracking"},{"type":"paragraph","inlineContent":[{"text":"The exact ","type":"text"},{"code":"info","type":"codeVoice"},{"text":" instance (with its ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":") is stored, allowing for","type":"text"},{"text":" ","type":"text"},{"text":"precise removal during unlock operations.","type":"text"}]},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"type":"codeListing","code":["let info = LockmanSingleExecutionInfo(actionId: \"processPayment\")","","if strategy.canLock(id: boundary, info: info) == .success {","  strategy.lock(id: boundary, info: info)","  \/\/ info is now tracked with its specific uniqueId","}"],"syntax":"swift"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/lock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"sections":[],"kind":"symbol","metadata":{"title":"lock(id:info:)","roleHeading":"Instance Method","externalID":"s:7Lockman0A23SingleExecutionStrategyC4lock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Lockman"}]},"abstract":[{"text":"Acquires a single-execution lock for the specified boundary and action.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"title":"LockmanSingleExecutionStrategy","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/lock(id:info:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionInfo","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"kind":"text","text":")"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/lock(id:info:)","role":"symbol","abstract":[{"type":"text","text":"Acquires a single-execution lock for the specified boundary and action."}],"title":"lock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutioninfo","title":"LockmanSingleExecutionInfo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","type":"topic","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}]}}}