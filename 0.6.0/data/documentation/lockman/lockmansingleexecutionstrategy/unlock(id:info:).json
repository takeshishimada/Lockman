{"metadata":{"modules":[{"name":"Lockman"}],"title":"unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":")","kind":"text"}],"role":"symbol","externalID":"s:7Lockman0A23SingleExecutionStrategyC6unlock2id4infoyx_AA0abC4InfoVtSHRzs8SendableRzlF","roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"]]},"abstract":[{"text":"Releases a previously acquired lock for the specified boundary and action.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV","text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The boundary identifier whose lock should be released"}]}],"name":"id"},{"content":[{"inlineContent":[{"type":"text","text":"The exact lock information that was used when acquiring the lock"}],"type":"paragraph"}],"name":"info"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Removes the specific lock information from the internal state using the"},{"type":"text","text":" "},{"type":"text","text":"instanceâ€™s "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":". This provides precise lock management and prevents"},{"type":"text","text":" "},{"type":"text","text":"unintended removal of other locks with the same "},{"type":"codeVoice","code":"actionId"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Instance-Specific Removal","level":2,"anchor":"Instance-Specific-Removal","type":"heading"},{"inlineContent":[{"type":"text","text":"Only the exact "},{"code":"info","type":"codeVoice"},{"type":"text","text":" instance that was passed to "},{"code":"lock()","type":"codeVoice"},{"type":"text","text":" is removed."},{"type":"text","text":" "},{"type":"text","text":"Other instances with the same "},{"code":"actionId","type":"codeVoice"},{"type":"text","text":" but different "},{"code":"uniqueId","type":"codeVoice"},{"type":"text","text":" values"},{"type":"text","text":" "},{"type":"text","text":"remain unaffected."}],"type":"paragraph"},{"text":"Rationale for uniqueId-based Removal","level":2,"anchor":"Rationale-for-uniqueId-based-Removal","type":"heading"},{"inlineContent":[{"type":"text","text":"Using "},{"code":"uniqueId","type":"codeVoice"},{"type":"text","text":" instead of "},{"code":"actionId","type":"codeVoice"},{"type":"text","text":" for removal provides:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Precision"}],"type":"strong"},{"text":": Only removes the specific lock instance that was acquired","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Safety","type":"text"}],"type":"strong"},{"text":": Prevents accidental removal of other locks with the same actionId","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Consistency"}],"type":"strong"},{"text":": Maintains 1:1 correspondence between lock() and unlock() calls","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Flexibility","type":"text"}]},{"text":": Allows multiple lock instances with the same actionId in different scenarios","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Example","level":2,"anchor":"Example","type":"heading"},{"code":["let info1 = LockmanSingleExecutionInfo(actionId: \"sync\")","let info2 = LockmanSingleExecutionInfo(actionId: \"sync\")  \/\/ Same actionId, different uniqueId","","\/\/ Hypothetical scenario where both could be locked on different boundaries","strategy.lock(id: boundary1, info: info1)","strategy.lock(id: boundary2, info: info2)","","\/\/ Unlock only removes the specific instance","strategy.unlock(id: boundary1, info: info1)  \/\/ Only removes info1","\/\/ info2 remains locked on boundary2"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionInfo":{"kind":"symbol","role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutioninfo","title":"LockmanSingleExecutionInfo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionInfo","type":"topic","abstract":[{"type":"text","text":"Information required for single-execution locking behavior."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionInfo"}]},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy/unlock(id:info:)":{"title":"unlock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanSingleExecutionInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A19SingleExecutionInfoV"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Releases a previously acquired lock for the specified boundary and action.","type":"text"}],"role":"symbol","url":"\/documentation\/lockman\/lockmansingleexecutionstrategy\/unlock(id:info:)","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"title":"LockmanSingleExecutionStrategy","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","navigatorTitle":[{"kind":"identifier","text":"LockmanSingleExecutionStrategy"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","abstract":[{"text":"A locking strategy that provides flexible execution control within a boundary.","type":"text"}]},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]}}}