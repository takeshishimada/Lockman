{"sections":[],"abstract":[{"type":"text","text":"Prints the current lock state for all registered strategies."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"printCurrentLocks"},{"kind":"text","text":"()"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method displays a formatted table showing all active locks across"},{"type":"text","text":" "},{"type":"text","text":"all strategies and boundaries. The output includes detailed information"},{"type":"text","text":" "},{"type":"text","text":"about each lock, making it easy to debug lock-related issues."}]},{"anchor":"Output-Format","type":"heading","level":2,"text":"Output Format"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The method prints a table with the following columns:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Strategy: The strategy type (e.g., SingleExecution, PriorityBased)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"BoundaryId: The boundary identifier where the lock is held"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"ActionId\/UniqueId: The action identifier and unique ID of the lock"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Additional Info: Strategy-specific information (e.g., priority, mode)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Example-Output","type":"heading","text":"Example Output","level":2},{"code":["┌──────────────────┬────────────┬──────────────────────────────────────┬───────────────────┐","│ Strategy         │ BoundaryId │ ActionId\/UniqueId                    │ Additional Info   │","├──────────────────┼────────────┼──────────────────────────────────────┼───────────────────┤","│ SingleExecution  │ mainScreen │ fetchData                            │ mode: .boundary   │","│                  │            │ 123e4567-e89b-12d3-a456-426614174000 │                   │","├──────────────────┼────────────┼──────────────────────────────────────┼───────────────────┤","│ PriorityBased    │ payment    │ processPayment                       │ priority: .high   │","│                  │            │ 987f6543-a21b-34c5-d678-123456789012 │ behavior: .exc... │","└──────────────────┴────────────┴──────────────────────────────────────┴───────────────────┘"],"type":"codeListing","syntax":null},{"anchor":"Usage","type":"heading","text":"Usage","level":2},{"code":["\/\/ Print current lock state with default formatting","LockmanManager.debug.printCurrentLocks()","","\/\/ Print with compact formatting for narrow terminals","LockmanManager.debug.printCurrentLocks(options: .compact)","","\/\/ Print with detailed formatting","LockmanManager.debug.printCurrentLocks(options: .detailed)"],"type":"codeListing","syntax":"swift"},{"anchor":"Availability","type":"heading","text":"Availability","level":2},{"inlineContent":[{"type":"text","text":"This method is available in both Debug and Release builds, allowing"},{"type":"text","text":" "},{"type":"text","text":"production debugging when needed."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/lockman\/lockmanmanager\/debug\/printcurrentlocks()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/debug\/printCurrentLocks()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"title":"printCurrentLocks()","role":"symbol","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A7ManagerO5debugO17printCurrentLocksyyFZ","symbolKind":"method","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"printCurrentLocks"},{"kind":"text","text":"()"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager","doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/debug"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/LockmanManager/debug":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"debug","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanmanager\/debug","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Debug utilities namespace.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/debug","title":"LockmanManager.debug","navigatorTitle":[{"text":"debug","kind":"identifier"}]},"Lockman.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","alt":"Lockman logo"},"doc://Lockman/documentation/Lockman/LockmanManager/debug/printCurrentLocks()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager\/debug\/printCurrentLocks()","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"printCurrentLocks","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Prints the current lock state for all registered strategies."}],"title":"printCurrentLocks()","url":"\/documentation\/lockman\/lockmanmanager\/debug\/printcurrentlocks()"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanManager":{"url":"\/documentation\/lockman\/lockmanmanager","title":"LockmanManager","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanManager","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"LockmanManager","kind":"identifier"}],"abstract":[{"text":"A facade providing static access to the shared ","type":"text"},{"code":"LockmanStrategyContainer","type":"codeVoice"},{"text":" and core framework functionality.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanManager"}}}