{"kind":"symbol","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"metadata":{"required":true,"modules":[{"name":"Lockman"}],"title":"lock(id:info:)","externalID":"s:7Lockman0A8StrategyP4lock2id4infoyqd___1IQztSHRd__s8SendableRd__lF","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SH","kind":"typeIdentifier","text":"Hashable"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}]}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"Lock information of type "},{"code":"I","type":"codeVoice"},{"type":"text","text":" to be registered as active"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When this method is called, the strategy should update its internal state"},{"type":"text","text":" "},{"type":"text","text":"to reflect that the lock has been acquired. The strategy is responsible"},{"type":"text","text":" "},{"type":"text","text":"for tracking this state until the corresponding "},{"type":"codeVoice","code":"unlock"},{"type":"text","text":" call."}]},{"type":"heading","text":"Implementation Guidelines","level":2,"anchor":"Implementation-Guidelines"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should only be called after "},{"code":"canLock","type":"codeVoice"},{"type":"text","text":" returns a success result"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Must update internal state to track the active lock","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should be idempotent if called multiple times with the same parameters"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","level":2,"text":"Thread Safety","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method may be called concurrently and must handle concurrent"},{"type":"text","text":" "},{"type":"text","text":"access to internal state appropriately."}]}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(id:info:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(id:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/lock(id:info:)","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"title":"lock(id:info:)","required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","title":"I","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","required":true,"abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},"Lockman.png":{"type":"image","identifier":"Lockman.png","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"}}}