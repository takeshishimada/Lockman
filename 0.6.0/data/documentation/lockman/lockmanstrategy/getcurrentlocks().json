{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","externalID":"s:7Lockman0A8StrategyP15getCurrentLocksSDyAA03AnyA10BoundaryIdVSayAA0A4Info_pGGyF","modules":[{"name":"Lockman"}],"role":"symbol","required":true},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns current locks information for debugging purposes.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier","text":"AnyLockmanBoundaryId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier","text":"LockmanInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo"},{"kind":"text","text":"]]"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Dictionary mapping boundary IDs to their active lock information"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method provides a snapshot of all currently held locks managed by this strategy."},{"type":"text","text":" "},{"type":"text","text":"The returned dictionary maps boundary identifiers to arrays of lock information,"},{"type":"text","text":" "},{"type":"text","text":"allowing debug tools to display the current lock state."}]},{"type":"heading","level":2,"text":"Implementation Guidelines","anchor":"Implementation-Guidelines"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should return a snapshot of current state (not a live reference)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should include all active locks across all boundaries","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The returned lock info should be the same instances passed to ","type":"text"},{"code":"lock","type":"codeVoice"}]}]}]},{"type":"heading","level":2,"text":"Thread Safety","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method may be called while locks are being acquired\/released,"},{"type":"text","text":" "},{"type":"text","text":"so implementations must handle concurrent access appropriately."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()"},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanBoundaryId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanBoundaryId","url":"\/documentation\/lockman\/anylockmanboundaryid","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanBoundaryId"},{"type":"text","text":", allowing heterogeneous boundary IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanBoundaryId"}],"title":"AnyLockmanBoundaryId","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"Lockman.png":{"alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","type":"image"}}}