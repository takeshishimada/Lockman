{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This wrapper enables different types of group identifiers to coexist in the same","type":"text"},{"text":" ","type":"text"},{"text":"collection while maintaining type safety for hashing and equality operations.","type":"text"}],"type":"paragraph"},{"text":"Type Erasure Benefits","level":2,"type":"heading","anchor":"Type-Erasure-Benefits"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Allows "},{"type":"codeVoice","code":"Set<AnyLockmanGroupId>"},{"type":"text","text":" with mixed group ID types"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maintains value semantics and equality comparison"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preserves hashing behavior from underlying types"}]}]}]},{"text":"Thread Safety","level":2,"type":"heading","anchor":"Thread-Safety"},{"inlineContent":[{"type":"text","text":"Marked as "},{"type":"codeVoice","code":"@unchecked Sendable"},{"type":"text","text":" because "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" is thread-safe for"},{"type":"text","text":" "},{"type":"text","text":"hashing and equality operations, and the wrapper doesnâ€™t add mutable state."}],"type":"paragraph"},{"text":"Usage Example","level":2,"type":"heading","anchor":"Usage-Example"},{"type":"codeListing","syntax":"swift","code":["enum FeatureGroup: String, LockmanGroupId {","  case navigation, dataSync, authentication","}","","struct ModuleGroup: LockmanGroupId {","  let module: String","  let submodule: String","}","","\/\/ Both can be used as group IDs in the same collection","let featureGroup = AnyLockmanGroupId(FeatureGroup.navigation)","let moduleGroup = AnyLockmanGroupId(ModuleGroup(module: \"user\", submodule: \"profile\"))","","\/\/ Can be stored in the same Set","let groupIds: Set<AnyLockmanGroupId> = [featureGroup, moduleGroup]"]}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmangroupid"]}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"],"anchor":"Operators","title":"Operators","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"code":"LockmanGroupId","type":"codeVoice"},{"type":"text","text":", allowing heterogeneous group IDs"},{"type":"text","text":" "},{"type":"text","text":"to be stored and compared in a uniform manner."}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"symbolKind":"struct","externalID":"s:7Lockman03AnyA7GroupIdV","role":"symbol","title":"AnyLockmanGroupId","roleHeading":"Structure","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}]},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/s8CopyableP","doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","doc:\/\/Lockman\/SQ","doc:\/\/Lockman\/SH","doc:\/\/Lockman\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/init(_:)":{"abstract":[{"type":"text","text":"Creates a new "},{"code":"AnyLockmanGroupId","type":"codeVoice"},{"type":"text","text":" by erasing the type of a value that conforms to "},{"code":"LockmanGroupId","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"LockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A7GroupIda"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/init(_:)","kind":"symbol","title":"init(_:)","url":"\/documentation\/lockman\/anylockmangroupid\/init(_:)","role":"symbol","type":"topic"},"doc://Lockman/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/Lockman\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"Lockman.png":{"type":"image","alt":"Lockman logo","variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png"},"doc://Lockman/SH":{"identifier":"doc:\/\/Lockman\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/Equatable-Implementations":{"abstract":[],"kind":"article","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/lockman\/anylockmangroupid\/equatable-implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/Equatable-Implementations","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/CustomDebugStringConvertible-Implementations":{"abstract":[],"kind":"article","title":"CustomDebugStringConvertible Implementations","role":"collectionGroup","url":"\/documentation\/lockman\/anylockmangroupid\/customdebugstringconvertible-implementations","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/CustomDebugStringConvertible-Implementations","type":"topic"},"doc://Lockman/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/Lockman\/SQ"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/hash(into:)":{"role":"symbol","title":"hash(into:)","url":"\/documentation\/lockman\/anylockmangroupid\/hash(into:)","kind":"symbol","abstract":[{"text":"Generates hash values that include type information to prevent","type":"text"},{"text":" ","type":"text"},{"text":"different group ID types with identical values from colliding.","type":"text"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/==(_:_:)":{"title":"==(_:_:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":", ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/lockman\/anylockmangroupid\/==(_:_:)","abstract":[{"text":"Compares two ","type":"text"},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":" values.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"title":"AnyLockmanGroupId","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"identifier"}],"url":"\/documentation\/lockman\/anylockmangroupid","navigatorTitle":[{"text":"AnyLockmanGroupId","kind":"identifier"}],"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanGroupId"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}]},"doc://Lockman/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8CopyableP","title":"Swift.Copyable"}}}