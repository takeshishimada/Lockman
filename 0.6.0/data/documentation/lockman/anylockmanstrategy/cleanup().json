{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method provides a global reset mechanism by clearing all internal lock state","type":"text"},{"text":" ","type":"text"},{"text":"from the underlying strategy. Itâ€™s typically used during:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite cleanup between test cases"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Emergency reset scenarios during development"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory pressure response","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Scope of Operation","anchor":"Scope-of-Operation"},{"type":"paragraph","inlineContent":[{"text":"This method affects ","type":"text"},{"inlineContent":[{"type":"text","text":"all boundaries"}],"type":"strong"},{"text":" managed by the underlying strategy,","type":"text"},{"text":" ","type":"text"},{"text":"not just those accessed through this particular wrapper instance.","type":"text"}]},{"level":2,"type":"heading","text":"Thread Safety","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The operation is atomic with respect to other strategy operations, but"},{"type":"text","text":" "},{"type":"text","text":"callers should be aware that concurrent operations may be affected."}]},{"level":2,"type":"heading","text":"Side Effects","anchor":"Side-Effects"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All active locks are immediately released","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Lock state tracking is reset to initial conditions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Pending operations may receive unexpected unlock notifications","type":"text"}]}]}],"type":"unorderedList"}]}],"metadata":{"role":"symbol","externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"roleHeading":"Instance Method","title":"cleanUp()","modules":[{"name":"Lockman"}]},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","title":"cleanUp()"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol"},"Lockman.png":{"variants":[{"url":"\/images\/Lockman\/Lockman.png","traits":["1x","light"]}],"identifier":"Lockman.png","alt":"Lockman logo","type":"image"}}}