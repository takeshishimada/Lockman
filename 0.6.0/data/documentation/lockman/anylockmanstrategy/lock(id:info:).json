{"sections":[],"abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SH","text":"Hashable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"type":"codeVoice","code":"LockmanBoundaryId"}],"type":"paragraph"}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"Lock information of type "},{"code":"I","type":"codeVoice"},{"type":"text","text":" to be registered as active"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This method should only be called after ","type":"text"},{"type":"codeVoice","code":"canLock"},{"text":" returns a success result.","type":"text"},{"text":" ","type":"text"},{"text":"The implementation delegates to the concrete strategyâ€™s lock acquisition logic.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Usage Contract","type":"heading","anchor":"Usage-Contract"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Precondition"}]},{"type":"text","text":": "},{"code":"canLock(id:info:)","type":"codeVoice"},{"type":"text","text":" should return "},{"code":".success","type":"codeVoice"},{"type":"text","text":" or "},{"code":".successWithPrecedingCancellation","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Postcondition"}]},{"type":"text","text":": The lock is acquired and tracked by the underlying strategy"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Thread Safety","type":"text"}],"type":"strong"},{"type":"text","text":": Safe to call concurrently with different boundary IDs"}],"type":"paragraph"}]}]},{"level":2,"text":"State Management","type":"heading","anchor":"State-Management"},{"inlineContent":[{"type":"text","text":"The concrete strategy is responsible for updating its internal state to track"},{"type":"text","text":" "},{"type":"text","text":"the acquired lock. This wrapper does not add any additional state management."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:7Lockman03AnyA8StrategyV4lock2id4infoyqd___xtSHRd__s8SendableRd__lF","title":"lock(id:info:)","modules":[{"name":"Lockman"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/lock(id:info:)":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"lock(id:info:)","role":"symbol","abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol"},"Lockman.png":{"alt":"Lockman logo","identifier":"Lockman.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}]}}}