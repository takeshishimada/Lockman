{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:7Lockman03AnyA8StrategyV7cleanUp2idyqd___tSHRd__s8SendableRd__lF","modules":[{"name":"Lockman"}],"role":"symbol","title":"cleanUp(id:)"},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The identifier whose lock information should be removed","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method provides targeted cleanup for specific boundary identifiers,","type":"text"},{"text":" ","type":"text"},{"text":"allowing fine-grained control over which lock state to clear while","type":"text"},{"text":" ","type":"text"},{"text":"leaving other boundaries unaffected.","type":"text"}]},{"type":"heading","level":2,"text":"Selective Cleanup Benefits","anchor":"Selective-Cleanup-Benefits"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Resource Management"}]},{"type":"text","text":": Clean up specific features without global impact"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"User Sessions"}]},{"type":"text","text":": Clear user-specific locks during logout"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Feature Lifecycle"}]},{"type":"text","text":": Clean up when components are deallocated"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Error Recovery","type":"text"}]},{"type":"text","text":": Reset specific boundary state after errors"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Boundary Isolation","anchor":"Boundary-Isolation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation only affects locks associated with the specified boundary."},{"type":"text","text":" "},{"type":"text","text":"Other boundaries managed by the same strategy instance remain unaffected."}]},{"type":"heading","level":2,"text":"Use Cases","anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Feature-specific cleanup when a view controller is deallocated","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"User session cleanup when a user logs out","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scoped cleanup for temporary contexts or workflows"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Partial system resets during development and testing"}]}]}]}],"kind":"content"}],"sections":[],"references":{"Lockman.png":{"alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png","type":"image"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp(id:)":{"title":"cleanUp(id:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup(id:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp(id:)","type":"topic","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"}}}