{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"metadata":{"modules":[{"name":"Lockman"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"externalID":"s:7Lockman03AnyA8StrategyVyACyxGqd__c1IQyd__RszAA0aC0Rd__lufc","symbolKind":"init","role":"symbol","roleHeading":"Initializer","title":"init(_:)"},"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"strategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP","text":"LockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A concrete strategy conforming to ","type":"text"},{"code":"LockmanStrategy<I>","type":"codeVoice"}],"type":"paragraph"}],"name":"strategy"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This initializer performs type erasure by capturing the concrete strategy’s methods"},{"type":"text","text":" "},{"type":"text","text":"as closures. The concrete strategy’s lifetime is preserved through these closures,"},{"type":"text","text":" "},{"type":"text","text":"ensuring that the strategy remains valid for the lifetime of this wrapper."}],"type":"paragraph"},{"text":"Type Safety","type":"heading","level":2,"anchor":"Type-Safety"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"where S.I == I"},{"type":"text","text":" constraint ensures that the concrete strategy’s lock information"},{"type":"text","text":" "},{"type":"text","text":"type matches this wrapper’s lock information type, maintaining type safety at compile time."}],"type":"paragraph"},{"text":"Memory Management","type":"heading","level":2,"anchor":"Memory-Management"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For class-based strategies: The strategy instance is retained by the closures"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For struct-based strategies: The strategy is copied into the closures"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Both approaches ensure proper lifetime management without memory leaks","type":"text"}]}]}],"type":"unorderedList"},{"text":"Performance Notes","type":"heading","level":2,"anchor":"Performance-Notes"},{"inlineContent":[{"type":"text","text":"The type erasure process happens once during initialization. Subsequent method calls"},{"type":"text","text":" "},{"type":"text","text":"have minimal overhead (single function pointer indirection)."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"kind":"symbol","references":{"Lockman.png":{"type":"image","alt":"Lockman logo","variants":[{"traits":["1x","light"],"url":"\/images\/Lockman\/Lockman.png"}],"identifier":"Lockman.png"},"doc://Lockman/documentation/Lockman":{"kind":"symbol","abstract":[{"type":"text","text":"Lockman is a Swift library that solves concurrent action control issues in The Composable Architecture (TCA) applications, with responsiveness, transparency, and declarative design in mind."}],"images":[{"type":"icon","identifier":"Lockman.png"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","url":"\/documentation\/lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"text":", enabling heterogeneous strategy","type":"text"},{"text":" ","type":"text"},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy","title":"AnyLockmanStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"kind":"symbol","title":"init(_:)","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"type":"topic","title":"I","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","required":true,"abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanstrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","title":"LockmanStrategy","role":"symbol","type":"topic"}}}