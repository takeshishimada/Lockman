{"kind":"symbol","topicSections":[{"anchor":"Associated-Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"],"generated":true,"title":"Associated Types"},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"],"generated":true,"title":"Instance Properties"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)"],"generated":true,"title":"Instance Methods"},{"anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"],"generated":true,"title":"Type Methods"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Lockman\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From"},{"kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"type":"conformingTypes","title":"Conforming Types"}],"abstract":[{"text":"A protocol defining the core locking operations that all strategies must implement.","type":"text"}],"sections":[],"metadata":{"externalID":"s:7Lockman0A8StrategyP","roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"title":"LockmanStrategy"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}]},{"level":2,"type":"heading","anchor":"Strategy-Types","text":"Strategy Types"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Single Execution","type":"text"}],"type":"strong"},{"text":": Prevents concurrent execution of the same action","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Priority-Based","type":"text"}],"type":"strong"},{"type":"text","text":": Allows higher priority actions to preempt lower priority ones"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Composite"}],"type":"strong"},{"text":": Combines multiple strategies for complex coordination","type":"text"}]}]}]},{"level":2,"type":"heading","anchor":"Implementation-Guidelines","text":"Implementation Guidelines"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Strategies can be implemented as either classes (for stateful strategies) or"},{"type":"text","text":" "},{"type":"text","text":"structs (for stateless strategies). Both can be type-erased using "},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"type":"text","text":"."}]},{"level":2,"type":"heading","anchor":"Thread-Safety","text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}]},{"level":2,"type":"heading","anchor":"Example-Implementation","text":"Example Implementation"},{"syntax":"swift","type":"codeListing","code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"]}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"kind":"symbol","title":"LockmanDynamicConditionStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Attempts to acquire a lock for the given boundary and information."}],"title":"lock(boundaryId:info:)"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"role":"symbol","kind":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 5 different strategies.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"title":"LockmanCompositeStrategy5","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy5"}],"type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy5"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"url":"\/documentation\/lockman\/lockmanstrategy\/i","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}],"title":"I","required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","type":"topic","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"url":"\/documentation\/lockman\/lockmancompositestrategy2","title":"LockmanCompositeStrategy2","navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"navigatorTitle":[{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"type":"topic","title":"LockmanGroupCoordinationStrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanGroupCoordinationStrategy"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","kind":"symbol","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmanstrategy\/unlock(boundaryid:info:)","kind":"symbol","title":"unlock(boundaryId:info:)","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"required":true,"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","role":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"role":"symbol","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","title":"cleanUp()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"required":true},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"title":"strategyId","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"required":true,"role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/strategyid","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","title":"LockmanCompositeStrategy4","role":"symbol","abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy4"}],"url":"\/documentation\/lockman\/lockmancompositestrategy4"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"abstract":[{"text":"A composite strategy that coordinates locking between 3 different strategies.","type":"text"}],"title":"LockmanCompositeStrategy3","kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"type":"topic","url":"\/documentation\/lockman\/lockmancompositestrategy3","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"type":"topic","role":"symbol","title":"LockmanPriorityBasedStrategy"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"type":"topic","abstract":[{"text":"Strategy that limits the number of concurrent executions per concurrency group.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}],"kind":"symbol","title":"LockmanConcurrencyLimitedStrategy","role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(boundaryId:info:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)","title":"canLock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"abstract":[{"type":"text","text":"Checks if a lock can be acquired without actually acquiring it."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"role":"symbol","required":true,"abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"kind":"symbol","title":"makeStrategyId()","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(boundaryId:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(boundaryid:)","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true,"title":"cleanUp(boundaryId:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","title":"LockmanSingleExecutionStrategy","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol"}}}