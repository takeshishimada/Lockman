{"metadata":{"title":"removeAllStrategies()","externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","modules":[{"name":"Lockman"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"]}],"abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method calls "},{"code":"cleanUp()","type":"codeVoice"},{"type":"text","text":" on all strategies before removing them,"},{"type":"text","text":" "},{"type":"text","text":"ensuring proper cleanup. The container returns to its initial empty state."}]},{"type":"heading","text":"Use Cases","level":2,"anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Application shutdown","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Test suite reset","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management"}],"type":"paragraph"}]}]},{"type":"heading","text":"Complexity","level":2,"anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"title":"removeAllStrategies()"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","kind":"symbol","type":"topic","title":"LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]}}}