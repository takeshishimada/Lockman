{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"_","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type = I.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA8StrategyV","text":"AnyLockmanStrategy","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The strategy identifier to look up"}],"type":"paragraph"}],"name":"id"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The expected "},{"type":"codeVoice","code":"LockmanInfo"},{"type":"text","text":" type (for type inference)"}]}],"name":"expecting"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"text":" wrapping the registered strategy instance","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Returns the type-erased strategy instance that was registered with the given ID.","type":"text"},{"text":" ","type":"text"},{"text":"The returned ","type":"text"},{"code":"AnyLockmanStrategy<I>","type":"codeVoice"},{"text":" provides the same interface as the original","type":"text"},{"text":" ","type":"text"},{"text":"strategy but with erased concrete type information.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LockmanRegistrationError.strategyNotRegistered"},{"type":"text","text":" if no strategy with this ID is registered"}]}],"style":"note","type":"aside","name":"Throws"},{"anchor":"Complexity","level":2,"type":"heading","text":"Complexity"},{"inlineContent":[{"text":"O(1) - Direct hash map lookup by ID","type":"text"}],"type":"paragraph"},{"anchor":"Thread-Safety","level":2,"type":"heading","text":"Thread Safety"},{"inlineContent":[{"text":"Safe to call concurrently from multiple threads. Resolution is atomic.","type":"text"}],"type":"paragraph"},{"anchor":"Example","level":2,"type":"heading","text":"Example"},{"syntax":"swift","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF","modules":[{"name":"Lockman"}],"title":"resolve(id:expecting:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman03AnyA8StrategyV","text":"AnyLockmanStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","title":"resolve(id:expecting:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA8StrategyV","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">"}],"abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer","kind":"symbol","type":"topic","title":"LockmanStrategyContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}]},"doc://Lockman/documentation/Lockman/LockmanInfo":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanInfo"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LockmanInfo"}],"title":"LockmanInfo","url":"\/documentation\/lockman\/lockmaninfo"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategyid","role":"symbol","abstract":[{"text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies.","type":"text"}],"title":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}]}}}