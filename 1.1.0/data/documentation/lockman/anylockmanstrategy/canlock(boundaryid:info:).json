{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A unique boundary identifier conforming to ","type":"text"},{"code":"LockmanBoundaryId","type":"codeVoice"}]}],"name":"boundaryId"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock information of type "},{"code":"I","type":"codeVoice"}]}],"name":"info"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A ","type":"text"},{"code":"LockmanResult","type":"codeVoice"},{"text":" indicating whether the lock can be acquired","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"This method delegates to the concrete strategyâ€™s implementation through the"},{"type":"text","text":" "},{"type":"text","text":"captured closure, maintaining identical behavior while hiding the concrete type."}],"type":"paragraph"},{"text":"Delegation Pattern","type":"heading","anchor":"Delegation-Pattern","level":2},{"inlineContent":[{"text":"The type-erased wrapper acts as a transparent proxy, forwarding all calls to the","type":"text"},{"text":" ","type":"text"},{"text":"underlying concrete strategy without modification. This ensures that the behavior","type":"text"},{"text":" ","type":"text"},{"text":"is identical to calling the concrete strategy directly.","type":"text"}],"type":"paragraph"},{"text":"Error Handling","type":"heading","anchor":"Error-Handling","level":2},{"inlineContent":[{"type":"text","text":"Any errors thrown by the concrete strategy are propagated unchanged through this wrapper."},{"type":"text","text":" "},{"type":"text","text":"The wrapper does not add its own error handling or modification."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)"},"sections":[],"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"method","externalID":"s:7Lockman03AnyA8StrategyV7canLock10boundaryId4infoAA0A6ResultOqd___xtSHRd__s8SendableRd__lF","title":"canLock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"}],"roleHeading":"Instance Method"},"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(boundaryId:info:)":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(boundaryid:info:)","role":"symbol","title":"canLock(boundaryId:info:)","type":"topic","abstract":[{"text":"Checks if a lock can be acquired for the given boundary and information.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanResult":{"abstract":[{"type":"text","text":"The result of attempting to acquire a lock."}],"navigatorTitle":[{"text":"LockmanResult","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmanresult","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanResult","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","type":"topic","role":"symbol","title":"LockmanResult","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol"}}}