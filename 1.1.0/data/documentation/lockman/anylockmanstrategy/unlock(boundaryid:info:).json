{"kind":"symbol","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"parameters","parameters":[{"name":"boundaryId","content":[{"inlineContent":[{"text":"The boundary identifier for which the lock should be released","type":"text"}],"type":"paragraph"}]},{"name":"info","content":[{"inlineContent":[{"type":"text","text":"The same lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" that was used when acquiring the lock"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This method must be called with the exact same parameters that were used","type":"text"},{"text":" ","type":"text"},{"text":"when acquiring the lock. The implementation delegates to the concrete strategy’s","type":"text"},{"text":" ","type":"text"},{"text":"unlock logic, which typically uses the lock info’s ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":" for precise identification.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Parameter Matching Requirements","anchor":"Parameter-Matching-Requirements","type":"heading"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Boundary ID","type":"text"}],"type":"strong"},{"text":": Must match the ID used during lock acquisition","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Lock Info"}],"type":"strong"},{"text":": Must be the same instance (same ","type":"text"},{"code":"uniqueId","type":"codeVoice"},{"text":") used during acquisition","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Strategy Consistency","type":"text"}],"type":"strong"},{"text":": Must be called on the same strategy instance that acquired the lock","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"Error Recovery","anchor":"Error-Recovery","type":"heading"},{"inlineContent":[{"type":"text","text":"If called with mismatched parameters, the concrete strategy may:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Silently ignore the unlock request (defensive programming)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Log a warning for debugging purposes","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Throw an error in debug builds","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"The behavior depends on the concrete strategy’s implementation.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)"},"metadata":{"title":"unlock(boundaryId:info:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7Lockman03AnyA8StrategyV6unlock10boundaryId4infoyqd___xtSHRd__s8SendableRd__lF","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Lockman"}]},"references":{"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","kind":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","role":"symbol","abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"type":"topic","kind":"symbol","title":"unlock(boundaryId:info:)","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}