{"metadata":{"title":"PriorityBasedStrategy","role":"article","modules":[{"name":"Lockman"}],"roleHeading":"Article"},"sections":[],"abstract":[{"text":"Control action execution based on priority levels.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/prioritybasedstrategy"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy"],"generated":true,"title":"Strategies","anchor":"Strategies"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"PriorityBasedStrategy is a strategy that performs execution control based on priority. High-priority processing can interrupt low-priority processing to execute, allowing important processing to be handled preferentially.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is used in situations where high-urgency processing or control based on importance is required."}]},{"level":2,"anchor":"Priority-System","type":"heading","text":"Priority System"},{"level":3,"anchor":"Priority-Levels","type":"heading","text":"Priority Levels"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"high","type":"text"}]},{"type":"text","text":" - High Priority"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can interrupt all other priority processing"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"System-level emergency processing or important user operations","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"low"}]},{"text":" - Low Priority","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Can interrupt none priority processing","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Interrupted by high priority","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Regular background processing"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"none","type":"text"}]},{"type":"text","text":" - No Priority"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Bypasses priority system","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Not interrupted by other processing"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic processing or temporary disabling"}]}]}]},{"level":3,"anchor":"Exclusive-Execution-Control","type":"heading","text":"Exclusive Execution Control"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Within the same priority level, control is based on the exclusive execution behavior setting of existing processing:"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"exclusive"}],"type":"strong"},{"type":"text","text":" - Exclusive Execution"}]},{"type":"codeListing","code":["LockmanPriorityBasedInfo(","    actionId: \"payment\",","    priority: .high(.exclusive)",")"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rejects new processing of the same priority"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Protects important processing from interruption"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"replaceable","type":"text"}]},{"type":"text","text":" - Replaceable Execution"}]},{"type":"codeListing","code":["LockmanPriorityBasedInfo(","    actionId: \"search\", ","    priority: .high(.replaceable)",")"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Can be interrupted by new processing of the same priority"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Applied to search or update processing","type":"text"}],"type":"paragraph"}]}]},{"level":2,"anchor":"Usage","type":"heading","text":"Usage"},{"level":3,"anchor":"Basic-Usage-Example","type":"heading","text":"Basic Usage Example"},{"type":"codeListing","code":["@LockmanPriorityBased","enum ViewAction {","    case emergencySync","    case normalSync","    case backgroundTask","    ","    var lockmanInfo: LockmanPriorityBasedInfo {","        switch self {","        case .emergencySync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSync:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        case .backgroundTask:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .none","            )","        }","    }","}"],"syntax":"swift"},{"level":2,"anchor":"Operation-Examples","type":"heading","text":"Operation Examples"},{"level":3,"anchor":"Interruption-by-Priority","type":"heading","text":"Interruption by Priority"},{"type":"codeListing","code":["Time: 0s  - Low priority process starts    ‚Üí ‚úÖ Execute","Time: 2s  - High priority process request  ‚Üí ‚úÖ Execute (interrupts low process)","Time: 2s  - Low priority process           ‚Üí üõë Cancel","Time: 5s  - High priority process complete ‚Üí ‚úÖ Complete"],"syntax":null},{"level":3,"anchor":"Control-at-Same-Priority","type":"heading","text":"Control at Same Priority"},{"type":"codeListing","code":["\/\/ Exclusive setting case","Time: 0s  - high(.exclusive) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.exclusive) request ‚Üí ‚ùå Reject","Time: 3s  - First process completes  ‚Üí ‚úÖ Complete","Time: 4s  - high(.exclusive) request ‚Üí ‚úÖ Execute","","\/\/ Replaceable setting case","Time: 0s  - high(.replaceable) starts  ‚Üí ‚úÖ Execute","Time: 1s  - high(.replaceable) request ‚Üí ‚úÖ Execute (interrupts previous)","Time: 1s  - First process              ‚Üí üõë Cancel"],"syntax":null},{"level":2,"anchor":"Error-Handling","type":"heading","text":"Error Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For errors that may occur with PriorityBasedStrategy and their solutions, please also refer to the common patterns on the "},{"overridingTitleInlineContent":[{"type":"text","text":"Error Handling"}],"type":"reference","isActive":true,"overridingTitle":"Error Handling","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling"},{"type":"text","text":" page."}]},{"level":3,"anchor":"Error-Types","type":"heading","text":"Error Types"},{"type":"paragraph","inlineContent":[{"text":"PriorityBasedStrategy uses two error types, both conforming to ","type":"text"},{"code":"LockmanCancellationError","type":"codeVoice"},{"text":" protocol:","type":"text"}]},{"level":4,"anchor":"LockmanPriorityBasedBlockedError","type":"heading","text":"LockmanPriorityBasedBlockedError"},{"type":"paragraph","inlineContent":[{"text":"Occurs when a new action is blocked due to priority conflicts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"BlockedReason cases:"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"higherPriorityExists","type":"text"}]},{"type":"text","text":" - Higher priority is running"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"samePriorityConflict","type":"text"}],"type":"strong"},{"text":" - Conflict at same priority","type":"text"}]}]}]},{"type":"codeListing","code":["lockFailure: { error, send in","    if let blockedError = error as? LockmanPriorityBasedBlockedError {","        switch blockedError.reason {","        case .higherPriorityExists(let requested, let current):","            await send(.priorityConflict(\"Waiting due to high priority process running\"))","        case .samePriorityConflict(let priority):","            await send(.busyMessage(\"Process with same priority is running\"))","        }","    }","}"],"syntax":"swift"},{"level":4,"anchor":"LockmanPriorityBasedCancellationError","type":"heading","text":"LockmanPriorityBasedCancellationError"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Occurs when an existing action is cancelled by preemption."}]},{"type":"codeListing","code":["catch handler: { error, send in","    if let cancellationError = error as? LockmanPriorityBasedCancellationError {","        await send(.processCancelled(\"Interrupted by high priority process: \\(cancellationError.cancelledInfo.actionId)\"))","    }","}"],"syntax":"swift"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Lockman/documentation/Lockman/ErrorHandling":{"url":"\/documentation\/lockman\/errorhandling","title":"Error Handling","kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}]},"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"type":"topic","abstract":[{"text":"Limit the number of concurrent executions.","type":"text"}],"kind":"article","title":"ConcurrencyLimitedStrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","url":"\/documentation\/lockman\/concurrencylimitedstrategy"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","kind":"article","type":"topic","abstract":[{"type":"text","text":"Prevent duplicate execution of the same action."}],"role":"article","title":"SingleExecutionStrategy","url":"\/documentation\/lockman\/singleexecutionstrategy"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","kind":"article","type":"topic","abstract":[{"type":"text","text":"Control actions based on runtime conditions."}],"role":"article","title":"DynamicConditionStrategy","url":"\/documentation\/lockman\/dynamicconditionstrategy"},"doc://Lockman/documentation/Lockman/CompositeStrategy":{"type":"topic","abstract":[{"text":"Combine multiple strategies for complex control scenarios.","type":"text"}],"kind":"article","title":"CompositeStrategy","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","url":"\/documentation\/lockman\/compositestrategy"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"title":"GroupCoordinationStrategy","abstract":[{"text":"Coordinate actions through leader\/member group roles.","type":"text"}],"url":"\/documentation\/lockman\/groupcoordinationstrategy","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","type":"topic","role":"article"}}}