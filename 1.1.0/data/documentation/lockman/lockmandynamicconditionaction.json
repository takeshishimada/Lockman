{"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"}],"metadata":{"role":"symbol","roleHeading":"Protocol","title":"LockmanDynamicConditionAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"modules":[{"name":"Lockman"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"externalID":"s:7Lockman0A22DynamicConditionActionP"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction"},"sections":[],"topicSections":[{"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"title":"Instance Methods","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanAction","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","preciseIdentifier":"s:7Lockman0A6ActionP"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Conforming types can create lock info with custom conditions that are evaluated at runtime.","type":"text"}]},{"type":"heading","anchor":"Example","text":"Example","level":2},{"type":"codeListing","syntax":"swift","code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .cancel(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"]}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"abstract":[{"type":"text","text":"Creates lock info with a custom condition."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"(","kind":"text"},{"text":"condition","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","required":true,"role":"symbol","title":"with(condition:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","defaultImplementations":1},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanAction":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","abstract":[{"text":"An action that participates in Lockmanâ€™s locking mechanism.","type":"text"}],"navigatorTitle":[{"text":"LockmanAction","kind":"identifier"}],"role":"symbol","title":"LockmanAction","kind":"symbol","url":"\/documentation\/lockman\/lockmanaction"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"url":"\/documentation\/lockman\/lockmandynamicconditionaction","title":"LockmanDynamicConditionAction","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionAction"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","role":"symbol","abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"abstract":[{"text":"The name of the action, typically the enum case name.","type":"text"}],"required":true,"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","title":"actionName","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]}}}