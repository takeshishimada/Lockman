{"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"LockmanManager provides configuration functionality to set Lockman’s behavior throughout the application. These settings allow you to customize default lock release timing and error handling behavior."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once configured, settings apply application-wide and can be overridden at various levels: in individual "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"withLock","overridingTitleInlineContent":[{"code":"withLock","type":"codeVoice"}]},{"type":"text","text":" calls, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"Effect.lock","overridingTitleInlineContent":[{"code":"Effect.lock","type":"codeVoice"}]},{"type":"text","text":" method chains, or when configuring "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"Reducer.lock","overridingTitleInlineContent":[{"code":"Reducer.lock","type":"codeVoice"}]},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"text":"Configuration Options","anchor":"Configuration-Options","type":"heading"},{"level":3,"text":"defaultUnlockOption","anchor":"defaultUnlockOption","type":"heading"},{"inlineContent":[{"type":"text","text":"Sets the default timing for lock release."}],"type":"paragraph"},{"code":["\/\/ Configure during application initialization","LockmanManager.config.defaultUnlockOption = .immediate"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"text":"Available values","type":"text"}],"type":"strong"},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"code":".immediate","type":"codeVoice"}],"type":"strong"},{"text":": Release immediately upon completion (default)","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"codeVoice","code":".mainRunLoop"}],"type":"strong"},{"type":"text","text":": Release on the next main loop cycle"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"code":".transition","type":"codeVoice"}]},{"text":": Release after platform-specific screen transition animation","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"codeVoice","code":".delayed(TimeInterval)"}],"type":"strong"},{"text":": Release after the specified time interval","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority order"}]},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Explicitly specified in method call ("},{"type":"codeVoice","code":"withLock"},{"type":"text","text":", "},{"type":"codeVoice","code":"Effect.lock"},{"type":"text","text":", or "},{"type":"codeVoice","code":"Reducer.lock"},{"type":"text","text":") (highest priority)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Action’s ","type":"text"},{"code":"unlockOption","type":"codeVoice"},{"text":" property (if implementing ","type":"text"},{"code":"LockmanAction","type":"codeVoice"},{"text":")","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"LockmanManager.config.defaultUnlockOption","type":"codeVoice"},{"text":" (lowest priority)","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"inlineContent":[{"text":"Use cases","type":"text"}],"type":"strong"},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Unified release timing considering UI transitions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Consistent behavior settings across the application"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjustments for performance optimization"}]}]}],"type":"unorderedList"},{"level":3,"text":"handleCancellationErrors","anchor":"handleCancellationErrors","type":"heading"},{"inlineContent":[{"text":"Sets how to handle cancellation errors.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Ignore cancellation errors (default)","LockmanManager.config.handleCancellationErrors = false","","\/\/ Pass cancellation errors to error handler","LockmanManager.config.handleCancellationErrors = true"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"text":"Values","type":"text"}],"type":"strong"},{"text":":","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"code":"false","type":"codeVoice"}],"type":"strong"},{"text":": Ignore cancellation errors and don’t pass to error handler (default)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"codeVoice","code":"true"}]},{"type":"text","text":": Pass cancellation errors to error handler"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Use cases","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Logging cancellation processing","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Tracking cancellation situations during debugging"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Collecting statistical information"}]}]}],"type":"unorderedList"},{"level":2,"text":"Configuration Examples","anchor":"Configuration-Examples","type":"heading"},{"level":3,"text":"Configuration during Application Initialization","anchor":"Configuration-during-Application-Initialization","type":"heading"},{"code":["\/\/ Configure in AppDelegate or App struct","func applicationDidFinishLaunching() {","    \/\/ Set release timing considering UI transitions","    LockmanManager.config.defaultUnlockOption = .transition","    ","    \/\/ Log cancellation errors during development","    #if DEBUG","    LockmanManager.config.handleCancellationErrors = true","    #endif","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Individual Override","anchor":"Individual-Override","type":"heading"},{"code":["\/\/ Override in Reducer.lock()",".lock(","    boundaryId: CancelID.feature,","    unlockOption: .immediate, \/\/ Override global setting","    lockFailure: { error, send in","        \/\/ Error handling","    }",")","","\/\/ Override in Effect.lock()",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .delayed(0.5) \/\/ Override for this effect",")","","\/\/ Override in withLock",".withLock(","    unlockOption: .transition, \/\/ Override for fine control","    operation: { send in","        \/\/ Processing that requires transition timing","    },","    action: action,","    boundaryId: CancelID.feature",")"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Notes","anchor":"Notes","type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Since configuration changes affect the entire application, it’s recommended to configure during initialization"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Runtime configuration changes are possible but should be done carefully to avoid unexpected behavior","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"During testing, it’s recommended to reset settings to avoid effects between tests","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"title":"Configuration","modules":[{"name":"Lockman"}],"role":"article","roleHeading":"Article"},"kind":"article","abstract":[{"text":"Configure Lockman for your application’s needs.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"seeAlsoSections":[{"title":"Essentials","anchor":"Essentials","generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/configuration"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Lockman/documentation/Lockman/GettingStarted":{"url":"\/documentation\/lockman\/gettingstarted","type":"topic","title":"Getting Started","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","role":"article","kind":"article","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"kind":"article","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"type":"topic","url":"\/documentation\/lockman\/boundaryoverview","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","title":"Boundary"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"url":"\/documentation\/lockman\/errorhandling","title":"Error Handling","kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}]},"doc://Lockman/documentation/Lockman/Unlock":{"title":"Unlock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","url":"\/documentation\/lockman\/unlock","type":"topic","abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"role":"article","kind":"article"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to select the right strategy for your use case."}],"role":"article","url":"\/documentation\/lockman\/choosingstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","title":"Choosing a Strategy"},"doc://Lockman/documentation/Lockman/Lock":{"kind":"article","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","url":"\/documentation\/lockman\/lock","type":"topic","title":"Lock"}}}