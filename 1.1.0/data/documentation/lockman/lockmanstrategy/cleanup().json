{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method clears all internal lock state managed by the strategy,"},{"type":"text","text":" "},{"type":"text","text":"effectively resetting it to its initial state. Use this for:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Application shutdown sequences","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Test suite cleanup between tests","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Global system resets during development","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Emergency cleanup scenarios"}]}]}]},{"type":"heading","text":"Implementation Guidelines","level":2,"anchor":"Implementation-Guidelines"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should remove all tracked locks regardless of boundary"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should not fail even if no locks are currently held"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be safe to call multiple times","type":"text"}]}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","required":true,"externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","modules":[{"name":"Lockman"}],"symbolKind":"method","title":"cleanUp()"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"sections":[],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"role":"symbol","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","title":"cleanUp()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"required":true},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","role":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy"}}}