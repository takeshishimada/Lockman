{"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"roleHeading":"Class","externalID":"s:7Lockman0A24DynamicConditionStrategyC","modules":[{"name":"Lockman"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"code":"LockmanDynamicConditionStrategy","type":"codeVoice"},{"text":" allows you to define arbitrary locking conditions","type":"text"},{"text":" ","type":"text"},{"text":"using closures that are evaluated when the lock is requested. This provides maximum","type":"text"},{"text":" ","type":"text"},{"text":"flexibility for complex business logic scenarios.","type":"text"}]},{"type":"heading","level":2,"anchor":"Example","text":"Example"},{"type":"codeListing","syntax":"swift","code":["\/\/ Business logic condition with custom error","struct PriorityTooLowError: Error {","    let priority: Int","}","","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let conditionalAction = action.with {","    guard priority > 3 else {","        return .cancel(PriorityTooLowError(priority: priority))","    }","    return .success","}"]},{"type":"heading","level":2,"anchor":"Thread-Safety","text":"Thread Safety"},{"type":"paragraph","inlineContent":[{"text":"This strategy is thread-safe and uses ","type":"text"},{"code":"LockmanState","type":"codeVoice"},{"text":" for managing concurrent access.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmandynamicconditionstrategy"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"},"abstract":[{"text":"A strategy that evaluates custom conditions at runtime to determine lock availability.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(boundaryId:info:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I"],"generated":true,"anchor":"Type-Aliases","title":"Type Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"type":"topic","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"kind":"symbol","title":"LockmanDynamicConditionStrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/shared":{"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/shared","abstract":[{"text":"Shared singleton instance.","type":"text"}],"title":"shared","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A24DynamicConditionStrategyC","text":"LockmanDynamicConditionStrategy","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/unlock(boundaryId:info:)":{"type":"topic","role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/unlock(boundaryid:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/unlock(boundaryId:info:)","kind":"symbol","abstract":[{"type":"text","text":"Releases all locks with the same actionId."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"unlock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/lock(boundaryId:info:)":{"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/lock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier","text":"LockmanDynamicConditionInfo"},{"kind":"text","text":")"}],"title":"lock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/lock(boundaryid:info:)","kind":"symbol","abstract":[{"type":"text","text":"Acquires a lock for the specified boundary and action."}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/getCurrentLocks()":{"role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/getcurrentlocks()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP"},{"text":"]]","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/getCurrentLocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging."}],"title":"getCurrentLocks()"},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/canLock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/canlock(boundaryid:info:)","type":"topic","abstract":[{"type":"text","text":"Evaluates the dynamic condition to determine if a lock can be acquired."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/canLock(boundaryId:info:)","title":"canLock(boundaryId:info:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","text":"LockmanDynamicConditionInfo","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A6ResultO","text":"LockmanResult","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/I":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/i","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"title":"LockmanDynamicConditionStrategy.I","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/I","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"I","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/strategyId":{"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"title":"strategyId","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/strategyid","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/strategyId","role":"symbol","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp(boundaryId:)":{"role":"symbol","abstract":[{"text":"Removes all active locks for the specified boundary.","type":"text"}],"title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup(boundaryid:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp(boundaryId:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/cleanUp()":{"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/cleanup()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"cleanUp()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/cleanUp()","abstract":[{"type":"text","text":"Removes all active locks across all boundaries."}],"kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/init()":{"title":"init()","abstract":[{"type":"text","text":"Creates a new dynamic condition strategy instance."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/init()","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/init()","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","role":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"title":"LockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy/makeStrategyId()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy\/makeStrategyId()","kind":"symbol","type":"topic","abstract":[{"text":"Creates a strategy identifier for the dynamic condition strategy.","type":"text"}],"url":"\/documentation\/lockman\/lockmandynamicconditionstrategy\/makestrategyid()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"title":"makeStrategyId()"}}}