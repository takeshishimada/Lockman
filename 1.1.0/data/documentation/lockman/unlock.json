{"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"anchor":"Essentials","generated":true}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/lockman\/unlock"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"article","modules":[{"name":"Lockman"}],"title":"Unlock","roleHeading":"Article"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"kind":"article","primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlocking in Lockman is a mechanism for properly releasing acquired locks. It ensures resource release and maintains system consistency in all situations, including after processing completion, error occurrence, or cancellation."}]},{"level":2,"anchor":"Specifications","type":"heading","text":"Specifications"},{"level":3,"anchor":"Automatic-Release","type":"heading","text":"Automatic Release"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Reducer.lock"}],"type":"reference","overridingTitle":"Reducer.lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},{"text":", ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Effect.lock"}],"type":"reference","overridingTitle":"Effect.lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},{"text":", or the auto-release version of ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"withLock"}],"type":"reference","overridingTitle":"withLock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock"},{"text":", locks are automatically released at the following timings:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"On normal completion"}],"type":"strong"},{"text":": When processing completes normally","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"On exception","type":"text"}]},{"type":"text","text":": When an error occurs"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"On cancellation","type":"text"}],"type":"strong"},{"text":": When processing is cancelled","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"On early return","type":"text"}],"type":"strong"},{"text":": When processing ends prematurely","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic release is implemented using defer blocks, ensuring that locks are reliably released regardless of the termination pattern."}]},{"level":3,"anchor":"Manual-Release","type":"heading","text":"Manual Release"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Manual release is only available in the manual release version of "},{"overridingTitleInlineContent":[{"text":"withLock","type":"text"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","isActive":true,"overridingTitle":"withLock"},{"type":"text","text":". When using "},{"overridingTitleInlineContent":[{"type":"text","text":"Reducer.lock"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","isActive":true,"overridingTitle":"Reducer.lock"},{"type":"text","text":" or "},{"overridingTitleInlineContent":[{"text":"Effect.lock","type":"text"}],"type":"reference","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","isActive":true,"overridingTitle":"Effect.lock"},{"type":"text","text":", locks are always automatically managed."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Important constraints:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"You must call unlock() in all code paths"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Forgetting to call unlock() causes permanent lock acquisition state"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Proper release is necessary even in conditional branches and error handling","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Unlock object characteristics:","type":"text"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Conforms to the Sendable protocol, allowing it to be passed when calling other actions","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Designed for use across multiple screens and actions"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Enables shared lock state and coordinated release between actions"}],"type":"paragraph"}]}]},{"level":3,"anchor":"Release-Options","type":"heading","text":"Release Options"},{"type":"paragraph","inlineContent":[{"text":"Unlock execution timing can be controlled with LockmanUnlockOption:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"immediate","type":"text"}]},{"type":"text","text":": Release immediately upon processing completion"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"mainRunLoop","type":"text"}]},{"type":"text","text":": Release in the next main run loop cycle"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"transition"}]},{"type":"text","text":": Release after platform-specific screen transition animation completion"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"iOS: 0.35 seconds (push\/pop animation)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"macOS: 0.25 seconds (window and view animation)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"tvOS: 0.4 seconds (focus-driven transition)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"watchOS: 0.3 seconds (page-based navigation)"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"delayed(TimeInterval)","type":"text"}],"type":"strong"},{"text":": Release after specified time","type":"text"}]}]}]},{"type":"heading","text":"Methods","level":2,"anchor":"Methods"},{"type":"heading","text":"Auto-release with Reducer.lock (Recommended)","level":3,"anchor":"Auto-release-with-Reducerlock-Recommended"},{"code":["var body: some ReducerOf<Self> {","    Reduce { state, action in","        switch action {","        case .startWork:","            return .run { send in","                try await someAsyncWork()","                await send(.completed)","                \/\/ Lock is automatically released here","            }","            .catch { error, send in","                await send(.failed(error))","                \/\/ Automatically released after error handling","            }","        }","    }","    .lock(","        boundaryId: CancelID.feature,","        unlockOption: .immediate  \/\/ Configure unlock timing","    )","}"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Auto-release with Effect.lock","level":3,"anchor":"Auto-release-with-Effectlock"},{"code":["return .run { send in","    try await someAsyncWork()","    await send(.completed)","    \/\/ Lock is automatically released here","}",".catch { error, send in","    await send(.failed(error))","    \/\/ Automatically released after error handling","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition  \/\/ Configure unlock timing",")"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Auto-release with withLock","level":3,"anchor":"Auto-release-with-withLock"},{"code":[".withLock(","  operation: { send in","    \/\/ Execute processing","    try await someAsyncWork()","    await send(.completed)","    \/\/ Lock is automatically released here","  },","  catch handler: { error, send in","    \/\/ Automatically released after error handling","    await send(.failed(error))","  },","  action: action,","  boundaryId: CancelID.feature",")"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Manual Release Usage Example","level":3,"anchor":"Manual-Release-Usage-Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic usage example:"}]},{"code":[".withLock(","  operation: { send, unlock in","    try await firstOperation()","    ","    if shouldEarlyReturn {","      unlock() \/\/ Early release","      return","    }","    ","    try await secondOperation()","    unlock() \/\/ Required: Final release","  },","  catch handler: { error, send, unlock in","    \/\/ Error handling","    unlock() \/\/ Release on error too","    send(.failed(error))","  },","  action: action,","  boundaryId: cancelID",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Example of release in another screenâ€™s delegate:","type":"text"}]},{"code":[".withLock(","  operation: { send, unlock in","    \/\/ Pass unlock object to another screen and transition","    send(.delegate(unlock: unlock))","  },","  action: action,","  boundaryId: cancelID",")","","\/\/ Receive and release on the delegate side","case .modal(.delegate(let unlock)):","  return .run { send in","    \/\/ Release after modal processing completion","    unlock()","  }"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/ErrorHandling":{"url":"\/documentation\/lockman\/errorhandling","title":"Error Handling","kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic","abstract":[{"type":"text","text":"Learn about common error handling patterns in Lockman."}]},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to select the right strategy for your use case."}],"role":"article","url":"\/documentation\/lockman\/choosingstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","title":"Choosing a Strategy"},"doc://Lockman/documentation/Lockman/Lock":{"kind":"article","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","url":"\/documentation\/lockman\/lock","type":"topic","title":"Lock"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","url":"\/documentation\/lockman\/debuggingguide","title":"Debugging Guide"},"doc://Lockman/documentation/Lockman/Configuration":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","abstract":[{"type":"text","text":"Configure Lockman for your applicationâ€™s needs."}],"type":"topic","url":"\/documentation\/lockman\/configuration","kind":"article","role":"article","title":"Configuration"},"doc://Lockman/documentation/Lockman/BoundaryOverview":{"kind":"article","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"type":"topic","url":"\/documentation\/lockman\/boundaryoverview","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","title":"Boundary"},"doc://Lockman/documentation/Lockman/GettingStarted":{"url":"\/documentation\/lockman\/gettingstarted","type":"topic","title":"Getting Started","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","role":"article","kind":"article","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}]},"doc://Lockman/documentation/Lockman":{"url":"\/documentation\/lockman","kind":"symbol","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","title":"Lockman","role":"collection"}}}