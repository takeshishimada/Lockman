{"kind":"symbol","metadata":{"symbolKind":"method","modules":[{"name":"Lockman"}],"title":"resolve(id:expecting:)","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"_","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type = I.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"LockmanInfo","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"inlineContent":[{"type":"text","text":"The strategy identifier to look up"}],"type":"paragraph"}]},{"name":"expecting","content":[{"inlineContent":[{"type":"text","text":"The expected "},{"type":"codeVoice","code":"LockmanInfo"},{"type":"text","text":" type (for type inference)"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" wrapping the registered strategy instance"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns the type-erased strategy instance that was registered with the given ID."},{"type":"text","text":" "},{"type":"text","text":"The returned "},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"type":"text","text":" provides the same interface as the original"},{"type":"text","text":" "},{"type":"text","text":"strategy but with erased concrete type information."}]},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"LockmanRegistrationError.strategyNotRegistered","type":"codeVoice"},{"text":" if no strategy with this ID is registered","type":"text"}]}],"style":"note"},{"text":"Complexity","anchor":"Complexity","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"O(1) - Direct hash map lookup by ID","type":"text"}]},{"text":"Thread Safety","anchor":"Thread-Safety","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Safe to call concurrently from multiple threads. Resolution is atomic.","type":"text"}]},{"text":"Example","anchor":"Example","type":"heading","level":2},{"type":"codeListing","syntax":"swift","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"]}]}],"sections":[],"abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","title":"LockmanStrategyId","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}],"abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategyid"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"title":"resolve(id:expecting:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expecting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7Lockman03AnyA8StrategyV","kind":"typeIdentifier","text":"AnyLockmanStrategy"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">"}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","kind":"symbol","abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic"},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"abstract":[{"type":"text","text":"Represents information required by Lockman locking strategies."}],"navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"role":"symbol","title":"LockmanInfo","kind":"symbol","url":"\/documentation\/lockman\/lockmaninfo","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"type":"topic","abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","title":"LockmanStrategyContainer"}}}