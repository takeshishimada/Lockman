{"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method calls ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all strategies before removing them,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring proper cleanup. The container returns to its initial empty state.","type":"text"}]},{"text":"Use Cases","type":"heading","level":2,"anchor":"Use-Cases"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Application shutdown"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test suite reset"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Memory management"}],"type":"paragraph"}]}]},{"text":"Complexity","type":"heading","level":2,"anchor":"Complexity"},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}]}],"metadata":{"symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","role":"symbol","modules":[{"name":"Lockman"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"title":"removeAllStrategies()","roleHeading":"Instance Method"},"abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"title":"removeAllStrategies()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}],"abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()"},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","navigatorTitle":[{"text":"LockmanStrategyContainer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategyContainer","kind":"identifier"}],"type":"topic","abstract":[{"text":"A thread-safe, Sendable dependency injection container for registering and resolving","type":"text"},{"text":" ","type":"text"},{"text":"lock strategies using type erasure and flexible identifiers.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer","url":"\/documentation\/lockman\/lockmanstrategycontainer","title":"LockmanStrategyContainer"}}}