{"metadata":{"symbolKind":"protocol","navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"externalID":"s:7Lockman0A22DynamicConditionActionP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"modules":[{"name":"Lockman"}],"role":"symbol","title":"LockmanDynamicConditionAction","roleHeading":"Protocol"},"kind":"symbol","abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"LockmanAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ActionP"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming types can create lock info with custom conditions that are evaluated at runtime."}]},{"type":"heading","level":2,"text":"Example","anchor":"Example"},{"code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .cancel(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"type":"codeListing","syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction"},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"}],"references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV","kind":"typeIdentifier","text":"LockmanDynamicConditionInfo"}],"defaultImplementations":1,"kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","title":"with(condition:)","required":true,"abstract":[{"type":"text","text":"Creates lock info with a custom condition."}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x"},"doc://Lockman/documentation/Lockman/LockmanAction":{"type":"topic","url":"\/documentation\/lockman\/lockmanaction","title":"LockmanAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanAction"}],"abstract":[{"text":"An action that participates in Lockmanâ€™s locking mechanism.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanAction"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"url":"\/documentation\/lockman\/lockmandynamicconditionaction","abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"title":"LockmanDynamicConditionAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The name of the action, typically the enum case name."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actionName","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","title":"actionName","required":true},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}