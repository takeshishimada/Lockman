{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This method clears all internal lock state managed by the strategy,","type":"text"},{"text":" ","type":"text"},{"text":"effectively resetting it to its initial state. Use this for:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite cleanup between tests"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Global system resets during development"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Emergency cleanup scenarios","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"Implementation Guidelines","anchor":"Implementation-Guidelines","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should remove all tracked locks regardless of boundary"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should not fail even if no locks are currently held","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be safe to call multiple times","type":"text"}]}]}],"type":"unorderedList"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"]]},"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:7Lockman0A8StrategyP7cleanUpyyF","title":"cleanUp()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy\/cleanup()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"type":"topic","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"kind":"symbol","title":"cleanUp()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol"}}}