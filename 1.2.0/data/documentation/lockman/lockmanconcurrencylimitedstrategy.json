{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"title":"LockmanConcurrencyLimitedStrategy","modules":[{"name":"Lockman"}],"symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"role":"symbol","externalID":"s:7Lockman0A26ConcurrencyLimitedStrategyC"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanConcurrencyLimitedStrategy","kind":"identifier"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanconcurrencylimitedstrategy"]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(boundaryId:info:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I"],"generated":true,"anchor":"Type-Aliases"},{"title":"Type Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared"],"generated":true,"anchor":"Type-Properties"},{"title":"Type Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()"],"generated":true,"anchor":"Type-Methods"}],"references":{"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/canLock(boundaryId:info:)":{"title":"canLock(boundaryId:info:)","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/canLock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanConcurrencyLimitedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"abstract":[{"text":"Checks if a lock can be acquired based on concurrency limits.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/canlock(boundaryid:info:)","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp()":{"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp()","title":"cleanUp()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Removes all locks across all boundaries.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup()","kind":"symbol","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/strategyId":{"title":"strategyId","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/strategyId","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"abstract":[{"text":"The strategy identifier.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/strategyid","kind":"symbol","role":"symbol"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/I":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/i","abstract":[{"type":"text","text":"The type of lock info used by this strategy."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"I"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/I","title":"LockmanConcurrencyLimitedStrategy.I"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/lock(boundaryId:info:)":{"abstract":[{"type":"text","text":"Adds the lock to the state."}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/lock(boundaryid:info:)","role":"symbol","title":"lock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/lock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV","text":"LockmanConcurrencyLimitedInfo","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/getCurrentLocks()":{"type":"topic","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/getCurrentLocks()","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/getcurrentlocks()"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/cleanUp(boundaryId:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/cleanUp(boundaryId:)","type":"topic","abstract":[{"text":"Removes all locks for a specific boundary.","type":"text"}],"title":"cleanUp(boundaryId:)","role":"symbol","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/cleanup(boundaryid:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A26ConcurrencyLimitedStrategyC","text":"LockmanConcurrencyLimitedStrategy","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/shared","title":"shared","type":"topic","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/shared","abstract":[{"type":"text","text":"Shared instance of the strategy."}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/makeStrategyId()":{"abstract":[{"text":"Creates the strategy identifier.","type":"text"}],"url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/makestrategyid()","title":"makeStrategyId()","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/makeStrategyId()","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy/unlock(boundaryId:info:)":{"role":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy\/unlock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanConcurrencyLimitedInfo","preciseIdentifier":"s:7Lockman0A22ConcurrencyLimitedInfoV"},{"kind":"text","text":")"}],"title":"unlock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy\/unlock(boundaryId:info:)","kind":"symbol","abstract":[{"type":"text","text":"Removes the lock from the state."}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"title":"LockmanConcurrencyLimitedStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}]},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"}}}