{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy"},"topicSections":[{"title":"Associated Types","generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)"]},{"title":"Type Methods","generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategy"]}],"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}],"modules":[{"name":"Lockman"}],"symbolKind":"protocol","title":"LockmanStrategy","externalID":"s:7Lockman0A8StrategyP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"role":"symbol"},"kind":"symbol","relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","type":"inheritsFrom"},{"title":"Conforming Types","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy"],"kind":"relationships","type":"conformingTypes"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I"},{"text":"> : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol provides a common interface for different locking strategies,"},{"type":"text","text":" "},{"type":"text","text":"allowing them to be used interchangeably while maintaining type safety for"},{"type":"text","text":" "},{"type":"text","text":"lock information. Each strategy implements specific logic for conflict detection,"},{"type":"text","text":" "},{"type":"text","text":"lock management, and cleanup operations."}]},{"anchor":"Strategy-Types","text":"Strategy Types","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Single Execution","type":"text"}]},{"text":": Prevents concurrent execution of the same action","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Priority-Based"}],"type":"strong"},{"text":": Allows higher priority actions to preempt lower priority ones","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composite"}]},{"type":"text","text":": Combines multiple strategies for complex coordination"}]}]}],"type":"unorderedList"},{"anchor":"Implementation-Guidelines","text":"Implementation Guidelines","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Strategies can be implemented as either classes (for stateful strategies) or","type":"text"},{"text":" ","type":"text"},{"text":"structs (for stateless strategies). Both can be type-erased using ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy"},{"text":".","type":"text"}]},{"anchor":"Thread-Safety","text":"Thread Safety","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"All strategy implementations must be thread-safe as they may be called"},{"type":"text","text":" "},{"type":"text","text":"concurrently from multiple contexts. Use appropriate synchronization"},{"type":"text","text":" "},{"type":"text","text":"mechanisms in your implementation."}]},{"anchor":"Example-Implementation","text":"Example Implementation","type":"heading","level":2},{"code":["final class MyStrategy: LockmanStrategy {","  typealias I = MyLockInfo","","  func canLock<B: LockmanBoundaryId>(id: B, info: I) -> LockmanResult {","    \/\/ Check if lock can be acquired","    return .success","  }","","  func lock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Acquire the lock","  }","","  func unlock<B: LockmanBoundaryId>(id: B, info: I) {","    \/\/ Release the lock","  }","","  func cleanUp() {","    \/\/ Clean up all state","  }","","  func cleanUp<B: LockmanBoundaryId>(id: B) {","    \/\/ Clean up state for specific boundary","  }","}"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy3":{"title":"LockmanCompositeStrategy3","navigatorTitle":[{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanCompositeStrategy3"}],"url":"\/documentation\/lockman\/lockmancompositestrategy3","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy3","role":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 3 different strategies."}],"type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionStrategy":{"url":"\/documentation\/lockman\/lockmansingleexecutionstrategy","kind":"symbol","title":"LockmanSingleExecutionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionStrategy","role":"symbol","type":"topic","navigatorTitle":[{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"A locking strategy that provides flexible execution control within a boundary."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"role":"symbol","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","kind":"symbol","abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"title":"LockmanGroupCoordinationStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/canLock(boundaryId:info:)":{"abstract":[{"text":"Checks if a lock can be acquired without actually acquiring it.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/canLock(boundaryId:info:)","role":"symbol","required":true,"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/canlock(boundaryid:info:)","kind":"symbol","title":"canLock(boundaryId:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"I","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/makeStrategyId()":{"required":true,"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for this strategy type."}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategy\/makestrategyid()","title":"makeStrategyId()","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/lock(boundaryId:info:)":{"abstract":[{"text":"Attempts to acquire a lock for the given boundary and information.","type":"text"}],"role":"symbol","title":"lock(boundaryId:info:)","kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/lock(boundaryid:info:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"I","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa"},{"kind":"text","text":")"}],"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/lock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy5":{"role":"symbol","url":"\/documentation\/lockman\/lockmancompositestrategy5","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 5 different strategies."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy5","kind":"identifier"}],"title":"LockmanCompositeStrategy5","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy5","navigatorTitle":[{"text":"LockmanCompositeStrategy5","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy4":{"url":"\/documentation\/lockman\/lockmancompositestrategy4","type":"topic","abstract":[{"text":"A composite strategy that coordinates locking between 4 different strategies.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy4","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy4","kind":"identifier"}],"title":"LockmanCompositeStrategy4","navigatorTitle":[{"text":"LockmanCompositeStrategy4","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionStrategy":{"navigatorTitle":[{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"title":"LockmanDynamicConditionStrategy","abstract":[{"type":"text","text":"A strategy that evaluates custom conditions at runtime to determine lock availability."}],"role":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionstrategy","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanDynamicConditionStrategy"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/unlock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmanstrategy\/unlock(boundaryid:info:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","text":"I"},{"kind":"text","text":")"}],"title":"unlock(boundaryId:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/unlock(boundaryId:info:)","role":"symbol","type":"topic","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp()":{"type":"topic","abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"kind":"symbol","title":"cleanUp()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp()","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup()","required":true,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanConcurrencyLimitedStrategy":{"abstract":[{"type":"text","text":"Strategy that limits the number of concurrent executions per concurrency group."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}],"title":"LockmanConcurrencyLimitedStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanConcurrencyLimitedStrategy","kind":"symbol","url":"\/documentation\/lockman\/lockmanconcurrencylimitedstrategy","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanConcurrencyLimitedStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"}],"role":"symbol","kind":"symbol","required":true,"title":"I","url":"\/documentation\/lockman\/lockmanstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","abstract":[{"text":"The type of lock information this strategy handles.","type":"text"}],"type":"topic"},"doc://Lockman/documentation/Lockman/LockmanCompositeStrategy2":{"url":"\/documentation\/lockman\/lockmancompositestrategy2","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanCompositeStrategy2","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A composite strategy that coordinates locking between 2 different strategies."}],"type":"topic","title":"LockmanCompositeStrategy2","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanCompositeStrategy2"},"doc://Lockman/documentation/Lockman/LockmanStrategy/strategyId":{"abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/strategyId","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"title":"strategyId","required":true,"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategy\/strategyid"},"doc://Lockman/documentation/Lockman/LockmanStrategy/cleanUp(boundaryId:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Removes all lock information for the specified boundary identifier."}],"required":true,"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/cleanUp(boundaryId:)","title":"cleanUp(boundaryId:)","url":"\/documentation\/lockman\/lockmanstrategy\/cleanup(boundaryid:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy/getCurrentLocks()":{"required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","text":"AnyLockmanBoundaryId"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo"},{"kind":"text","text":"]]"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/getCurrentLocks()","role":"symbol","type":"topic","kind":"symbol","title":"getCurrentLocks()","url":"\/documentation\/lockman\/lockmanstrategy\/getcurrentlocks()","abstract":[{"type":"text","text":"Returns current locks information for debugging purposes."}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"}}}