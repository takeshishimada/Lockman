{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This strategy implements a sophisticated priority system that allows higher-priority","type":"text"},{"text":" ","type":"text"},{"text":"actions to preempt lower-priority ones, while providing configurable concurrency","type":"text"},{"text":" ","type":"text"},{"text":"behavior for actions of the same priority level.","type":"text"}]},{"type":"heading","text":"Priority System Overview","level":2,"anchor":"Priority-System-Overview"},{"type":"paragraph","inlineContent":[{"text":"The strategy maintains a per-boundary collection of active ","type":"text"},{"code":"LockmanPriorityBasedInfo","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instances and uses the priority hierarchy to determine execution precedence:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"High Priority"}],"type":"strong"},{"type":"text","text":" (.high): Can cancel low\/none priority actions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Low Priority"}],"type":"strong"},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"No Priority","type":"text"}],"type":"strong"},{"type":"text","text":" (.none): Yields to all priority actions, simple conflict handling"}]}]}]},{"type":"heading","text":"Concurrency Behavior Logic","level":2,"anchor":"Concurrency-Behavior-Logic"},{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"canLock"},{"text":" is called for same-priority actions, the strategy evaluates conflicts","type":"text"},{"text":" ","type":"text"},{"text":"using the existing action’s concurrency behavior:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"No Priority Actions","type":"text"}]},{"type":"text","text":": Always succeed (bypass priority system)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Priority vs Non-Priority"}]},{"type":"text","text":": Priority actions always win"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Different Priority Levels"}],"type":"strong"},{"text":": Higher priority wins","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Same Priority Level"}]},{"type":"text","text":": Apply existing action’s "},{"type":"codeVoice","code":"ConcurrencyBehavior"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Exclusive"}]},{"text":": Existing action continues, new action fails","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Replaceable","type":"text"}],"type":"strong"},{"text":": Existing action is canceled, new action succeeds","type":"text"}],"type":"paragraph"}]}]}]}]},{"type":"heading","text":"Thread Safety","level":2,"anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is thread-safe through the underlying "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" which provides"},{"type":"text","text":" "},{"type":"text","text":"synchronized access to the per-boundary lock collections."}]},{"type":"heading","text":"Usage Examples","level":2,"anchor":"Usage-Examples"},{"type":"codeListing","code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(boundaryId: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(boundaryId: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"],"syntax":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"generated":true,"title":"Type Aliases","anchor":"Type-Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"generated":true,"title":"Type Methods","anchor":"Type-Methods"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy","symbolKind":"class","roleHeading":"Class","externalID":"s:7Lockman0A21PriorityBasedStrategyC","modules":[{"name":"Lockman"}]},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(boundaryId:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(boundaryId:)","role":"symbol","abstract":[{"type":"text","text":"Removes all priority-based locks for the specified boundary identifier."}],"kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(boundaryid:)","title":"cleanUp(boundaryId:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"title":"LockmanPriorityBasedStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Shared singleton instance for coordinating priority-based locks across the application."}],"title":"shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","text":"LockmanPriorityBasedStrategy","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","kind":"symbol","abstract":[{"type":"text","text":"Creates a new priority-based strategy instance."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(boundaryId:info:)","kind":"symbol","role":"symbol","title":"unlock(boundaryId:info:)","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(boundaryid:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV"},{"text":")","kind":"text"}],"abstract":[{"text":"Releases a previously acquired priority-based lock.","type":"text"}]},"doc://Lockman/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Lockman\/s8SendableP","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(boundaryId:info:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(boundaryId:info:)","abstract":[{"text":"Evaluates whether a priority-based lock can be acquired.","type":"text"}],"title":"canLock(boundaryId:info:)","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(boundaryid:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","title":"makeStrategyId()","type":"topic","abstract":[{"type":"text","text":"Creates a strategy identifier for the priority-based strategy."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(boundaryId:info:)":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(boundaryId:info:)","title":"lock(boundaryId:info:)","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(boundaryid:info:)","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedInfo","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"type":"topic","kind":"symbol","abstract":[{"text":"The unique identifier for this strategy instance.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strategyId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","title":"strategyId"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"abstract":[{"text":"Removes all priority-based locks across all boundaries.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","kind":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","type":"topic","title":"cleanUp()"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","kind":"symbol","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}],"navigatorTitle":[{"text":"I","kind":"identifier"}],"title":"LockmanPriorityBasedStrategy.I","role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"title":"getCurrentLocks()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","type":"topic"}}}