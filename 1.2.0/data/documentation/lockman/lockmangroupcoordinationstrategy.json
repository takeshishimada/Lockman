{"variants":[{"paths":["\/documentation\/lockman\/lockmangroupcoordinationstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This strategy manages group-based locking where:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Leaders"}]},{"type":"text","text":" can execute based on their entry policy:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".emptyGroup"},{"type":"text","text":": Only when the group is completely empty"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".withoutMembers","type":"codeVoice"},{"type":"text","text":": When there are no members (other leaders allowed)"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".withoutLeader"},{"type":"text","text":": When there is no other leader (members allowed)"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Members"}]},{"type":"text","text":" can only execute when their group has active participants"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"This creates a coordination pattern where leaders start group activities","type":"text"},{"text":" ","type":"text"},{"text":"and members can only join existing group activities.","type":"text"}]},{"text":"Key Features","type":"heading","level":2,"anchor":"Key-Features"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Groups are identified by string IDs and operate independently"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Multiple members can execute concurrently within the same group"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Prevents duplicate execution of the same action within a group"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Groups automatically dissolve when the last member completes"}]}]}],"type":"unorderedList"},{"text":"Usage Example","type":"heading","level":2,"anchor":"Usage-Example"},{"type":"codeListing","syntax":"swift","code":["let strategy = LockmanGroupCoordinationStrategy()","let boundaryId = \"mainScreen\"","","\/\/ Non-exclusive participant","let nonExclusiveInfo = LockmanGroupCoordinatedInfo(","  actionId: \"loadData\",","  groupId: \"dataLoading\",","  coordinationRole: .none",")","","\/\/ Leader that requires empty group","let emptyGroupLeader = LockmanGroupCoordinatedInfo(","  actionId: \"navigate\",","  groupId: \"navigation\",","  coordinationRole: .leader(.emptyGroup)",")","","\/\/ Members can join active group","let memberInfo = LockmanGroupCoordinatedInfo(","  actionId: \"showProgress\",","  groupId: \"dataLoading\",","  coordinationRole: .member",")","","\/\/ Leader that allows other leaders","let multiLeaderInfo = LockmanGroupCoordinatedInfo(","  actionId: \"secondaryLoad\",","  groupId: \"dataLoading\",","  coordinationRole: .leader(.withoutMembers)",")"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId"],"generated":true,"title":"Instance Properties"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)"],"generated":true,"title":"Instance Methods"},{"anchor":"Type-Aliases","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I"],"generated":true,"title":"Type Aliases"},{"anchor":"Type-Properties","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared"],"generated":true,"title":"Type Properties"},{"anchor":"Type-Methods","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()"],"generated":true,"title":"Type Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy"},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"metadata":{"navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"roleHeading":"Class","externalID":"s:7Lockman0A25GroupCoordinationStrategyC","role":"symbol","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"modules":[{"name":"Lockman"}],"title":"LockmanGroupCoordinationStrategy"},"kind":"symbol","abstract":[{"text":"A strategy that coordinates actions within groups based on their roles.","type":"text"}],"references":{"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/shared":{"title":"shared","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/shared","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A25GroupCoordinationStrategyC","text":"LockmanGroupCoordinationStrategy"}],"abstract":[{"text":"The shared singleton instance.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/makeStrategyId()":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/makestrategyid()","kind":"symbol","title":"makeStrategyId()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeStrategyId","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/makeStrategyId()","abstract":[{"text":"Creates a strategy identifier for the group coordination strategy.","type":"text"}],"role":"symbol","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/init()":{"role":"symbol","title":"init()","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/init()","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/init()","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"text":"Creates a new group coordination strategy instance.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/lock(boundaryId:info:)":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/lock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/lock(boundaryId:info:)","role":"symbol","title":"lock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp(boundaryId:)":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup(boundaryid:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp(boundaryId:)","abstract":[],"title":"cleanUp(boundaryId:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/strategyId":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier"}],"role":"symbol","title":"strategyId","abstract":[{"text":"The identifier for this strategy.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/strategyId","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/strategyid"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/I":{"role":"symbol","kind":"symbol","title":"LockmanGroupCoordinationStrategy.I","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/i","type":"topic","navigatorTitle":[{"kind":"identifier","text":"I"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"I"}],"abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/I"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/getCurrentLocks()":{"url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/getcurrentlocks()","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentLocks"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV"},{"kind":"text","text":" : [any "},{"kind":"typeIdentifier","text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP"},{"kind":"text","text":"]]"}],"title":"getCurrentLocks()","type":"topic","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/getCurrentLocks()","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy":{"role":"symbol","navigatorTitle":[{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy","kind":"symbol","abstract":[{"type":"text","text":"A strategy that coordinates actions within groups based on their roles."}],"title":"LockmanGroupCoordinationStrategy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanGroupCoordinationStrategy","kind":"identifier"}]},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"title":"LockmanStrategy","url":"\/documentation\/lockman\/lockmanstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanStrategy","kind":"identifier"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/unlock(boundaryId:info:)":{"title":"unlock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/unlock(boundaryid:info:)","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/unlock(boundaryId:info:)"},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/cleanUp()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/cleanUp()","abstract":[],"type":"topic","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/cleanup()","title":"cleanUp()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"doc://Lockman/documentation/Lockman/LockmanGroupCoordinationStrategy/canLock(boundaryId:info:)":{"type":"topic","role":"symbol","title":"canLock(boundaryId:info:)","kind":"symbol","abstract":[],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanGroupCoordinationStrategy\/canLock(boundaryId:info:)","url":"\/documentation\/lockman\/lockmangroupcoordinationstrategy\/canlock(boundaryid:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"boundaryId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LockmanGroupCoordinatedInfo","preciseIdentifier":"s:7Lockman0A20GroupCoordinatedInfoV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}]}}}