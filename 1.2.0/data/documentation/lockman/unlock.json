{"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Unlocking in Lockman is a mechanism for properly releasing acquired locks. It ensures resource release and maintains system consistency in all situations, including after processing completion, error occurrence, or cancellation.","type":"text"}]},{"type":"heading","text":"Specifications","level":2,"anchor":"Specifications"},{"type":"heading","text":"Automatic Release","level":3,"anchor":"Automatic-Release"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"overridingTitle":"Reducer.lock","isActive":true,"overridingTitleInlineContent":[{"text":"Reducer.lock","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference"},{"text":", ","type":"text"},{"overridingTitle":"Effect.lock","isActive":true,"overridingTitleInlineContent":[{"text":"Effect.lock","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference"},{"text":", or the auto-release version of ","type":"text"},{"overridingTitle":"withLock","isActive":true,"overridingTitleInlineContent":[{"text":"withLock","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","type":"reference"},{"text":", locks are automatically released at the following timings:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"On normal completion","type":"text"}],"type":"strong"},{"type":"text","text":": When processing completes normally"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"On exception","type":"text"}]},{"type":"text","text":": When an error occurs"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"On cancellation"}],"type":"strong"},{"text":": When processing is cancelled","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"On early return"}]},{"type":"text","text":": When processing ends prematurely"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic release is implemented using defer blocks, ensuring that locks are reliably released regardless of the termination pattern."}]},{"type":"heading","text":"Manual Release","level":3,"anchor":"Manual-Release"},{"type":"paragraph","inlineContent":[{"text":"Manual release is only available in the manual release version of ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"text":"withLock","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"withLock","type":"reference"},{"text":". When using ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Reducer.lock"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"Reducer.lock","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"text":"Effect.lock","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","overridingTitle":"Effect.lock","type":"reference"},{"text":", locks are always automatically managed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Important constraints:","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You must call unlock() in all code paths","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Forgetting to call unlock() causes permanent lock acquisition state","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Proper release is necessary even in conditional branches and error handling"}]}]}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Unlock object characteristics:"}]}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Conforms to the Sendable protocol, allowing it to be passed when calling other actions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Designed for use across multiple screens and actions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enables shared lock state and coordinated release between actions"}]}]}],"type":"unorderedList"},{"anchor":"Release-Options","text":"Release Options","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Unlock execution timing can be controlled with LockmanUnlockOption:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"immediate"}]},{"type":"text","text":": Release immediately upon processing completion"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"mainRunLoop","type":"text"}],"type":"strong"},{"type":"text","text":": Release in the next main run loop cycle"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"transition","type":"text"}]},{"type":"text","text":": Release after platform-specific screen transition animation completion"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS: 0.35 seconds (push\/pop animation)"}]}]},{"content":[{"inlineContent":[{"text":"macOS: 0.25 seconds (window and view animation)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tvOS: 0.4 seconds (focus-driven transition)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"watchOS: 0.3 seconds (page-based navigation)"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"delayed(TimeInterval)"}],"type":"strong"},{"type":"text","text":": Release after specified time"}]}]}],"type":"unorderedList"},{"anchor":"Methods","text":"Methods","level":2,"type":"heading"},{"anchor":"Auto-release-with-Reducerlock-Recommended","text":"Auto-release with Reducer.lock (Recommended)","level":3,"type":"heading"},{"syntax":"swift","code":["var body: some ReducerOf<Self> {","    Reduce { state, action in","        switch action {","        case .startWork:","            return .run { send in","                try await someAsyncWork()","                await send(.completed)","                \/\/ Lock is automatically released here","            }","            .catch { error, send in","                await send(.failed(error))","                \/\/ Automatically released after error handling","            }","        }","    }","    .lock(","        boundaryId: CancelID.feature,","        unlockOption: .immediate  \/\/ Configure unlock timing","    )","}"],"type":"codeListing"},{"anchor":"Auto-release-with-Effectlock","text":"Auto-release with Effect.lock","level":3,"type":"heading"},{"syntax":"swift","code":["return .run { send in","    try await someAsyncWork()","    await send(.completed)","    \/\/ Lock is automatically released here","}",".catch { error, send in","    await send(.failed(error))","    \/\/ Automatically released after error handling","}",".lock(","    action: action,","    boundaryId: CancelID.feature,","    unlockOption: .transition  \/\/ Configure unlock timing",")"],"type":"codeListing"},{"type":"heading","text":"Auto-release with withLock","level":3,"anchor":"Auto-release-with-withLock"},{"type":"codeListing","syntax":"swift","code":[".withLock(","  operation: { send in","    \/\/ Execute processing","    try await someAsyncWork()","    await send(.completed)","    \/\/ Lock is automatically released here","  },","  catch handler: { error, send in","    \/\/ Automatically released after error handling","    await send(.failed(error))","  },","  action: action,","  boundaryId: CancelID.feature",")"]},{"type":"heading","text":"Manual Release Usage Example","level":3,"anchor":"Manual-Release-Usage-Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic usage example:"}]},{"type":"codeListing","syntax":"swift","code":[".withLock(","  operation: { send, unlock in","    try await firstOperation()","    ","    if shouldEarlyReturn {","      unlock() \/\/ Early release","      return","    }","    ","    try await secondOperation()","    unlock() \/\/ Required: Final release","  },","  catch handler: { error, send, unlock in","    \/\/ Error handling","    unlock() \/\/ Release on error too","    send(.failed(error))","  },","  action: action,","  boundaryId: cancelID",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example of release in another screenâ€™s delegate:"}]},{"type":"codeListing","syntax":"swift","code":[".withLock(","  operation: { send, unlock in","    \/\/ Pass unlock object to another screen and transition","    send(.delegate(unlock: unlock))","  },","  action: action,","  boundaryId: cancelID",")","","\/\/ Receive and release on the delegate side","case .modal(.delegate(let unlock)):","  return .run { send in","    \/\/ Release after modal processing completion","    unlock()","  }"]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"variants":[{"paths":["\/documentation\/lockman\/unlock"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Lockman"}],"role":"article","roleHeading":"Article","title":"Unlock"},"sections":[],"abstract":[{"type":"text","text":"Understanding the unlocking mechanism in Lockman."}],"seeAlsoSections":[{"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"],"generated":true}],"kind":"article","references":{"doc://Lockman/documentation/Lockman/BoundaryOverview":{"role":"article","kind":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","url":"\/documentation\/lockman\/boundaryoverview","title":"Boundary","abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}]},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"url":"\/documentation\/lockman\/choosingstrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","title":"Choosing a Strategy","type":"topic","abstract":[{"text":"Learn how to select the right strategy for your use case.","type":"text"}],"role":"article","kind":"article"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"url":"\/documentation\/lockman\/debuggingguide","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","type":"topic","title":"Debugging Guide","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"role":"article","kind":"article"},"doc://Lockman/documentation/Lockman/Configuration":{"type":"topic","title":"Configuration","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration","role":"article","abstract":[{"text":"Configure Lockman for your applicationâ€™s needs.","type":"text"}],"url":"\/documentation\/lockman\/configuration","kind":"article"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"kind":"article","role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/errorhandling","title":"Error Handling"},"doc://Lockman/documentation/Lockman/GettingStarted":{"role":"article","type":"topic","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","url":"\/documentation\/lockman\/gettingstarted","title":"Getting Started","abstract":[{"type":"text","text":"Learn how to integrate Lockman into your TCA application."}]},"doc://Lockman/documentation/Lockman/Lock":{"type":"topic","title":"Lock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","role":"article","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/lock","kind":"article"},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"}}}