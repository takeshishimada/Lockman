{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(extension, conformances: "},{"kind":"typeIdentifier","text":"LockmanSingleExecutionAction","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","preciseIdentifier":"s:7Lockman0A21SingleExecutionActionP"},{"kind":"text","text":") "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: named(actionName)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanSingleExecution"},{"kind":"text","text":"()"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"Apply this macro to an enum declaration to automatically generate:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Protocol conformance to "},{"type":"codeVoice","code":"LockmanSingleExecutionAction"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"actionName"},{"text":" property that returns the enum case name as a String","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default ","type":"text"},{"type":"codeVoice","code":"strategyId"},{"text":" implementation is provided by the protocol","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important"}]},{"type":"text","text":": You must implement the "},{"type":"codeVoice","code":"lockmanInfo"},{"type":"text","text":" property to specify the execution mode:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".none"},{"type":"text","text":": No exclusive execution (always allows locks)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".boundary","type":"codeVoice"},{"text":": Only one action per boundary at a time (default behavior)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":".action","type":"codeVoice"},{"text":": Only one instance of the same actionId at a time","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage with TCA:"}]},{"syntax":"swift","code":["@Reducer","struct MyFeature {","  @LockmanSingleExecution","  enum Action {","    case login","    case logout","","    var lockmanInfo: LockmanSingleExecutionInfo {","      switch self {","      case .login:","        return .init(actionId: actionName, mode: .boundary)","      case .logout:","        return .init(actionId: actionName, mode: .action)","      }","    }","  }","","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      switch action {","      case .login:","        return .withLock(","          operation: { send in","            \/\/ async work","          },","          action: .login,","          boundaryId: \"login-operation\"","        )","      \/\/ ...","      }","    }","  }","}"],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:7Lockman0A15SingleExecutionyycfm","title":"LockmanSingleExecution()","roleHeading":"Macro","modules":[{"name":"Lockman"}],"symbolKind":"macro"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"abstract":[{"type":"text","text":"A macro that generates protocol conformance and required members for single execution locking behavior."}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmansingleexecution()"]}],"references":{"doc://Lockman/documentation/Lockman/LockmanSingleExecution()":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecution()","abstract":[{"text":"A macro that generates protocol conformance and required members for single execution locking behavior.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecution","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/lockman\/lockmansingleexecution()","title":"LockmanSingleExecution()"},"doc://Lockman/documentation/Lockman/LockmanSingleExecutionAction":{"type":"topic","title":"LockmanSingleExecutionAction","abstract":[{"type":"text","text":"A specialized "},{"type":"codeVoice","code":"LockmanAction"},{"type":"text","text":" for single-execution locking semantics."}],"navigatorTitle":[{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"url":"\/documentation\/lockman\/lockmansingleexecutionaction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanSingleExecutionAction","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanSingleExecutionAction","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"}}}