{"variants":[{"paths":["\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"unlock(boundaryId:info:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7Lockman03AnyA8StrategyV6unlock10boundaryId4infoyqd___xtSHRd__s8SendableRd__lF","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Lockman"}],"symbolKind":"method"},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The boundary identifier for which the lock should be released"}],"type":"paragraph"}],"name":"boundaryId"},{"content":[{"inlineContent":[{"type":"text","text":"The same lock information of type "},{"type":"codeVoice","code":"I"},{"type":"text","text":" that was used when acquiring the lock"}],"type":"paragraph"}],"name":"info"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method must be called with the exact same parameters that were used"},{"type":"text","text":" "},{"type":"text","text":"when acquiring the lock. The implementation delegates to the concrete strategy’s"},{"type":"text","text":" "},{"type":"text","text":"unlock logic, which typically uses the lock info’s "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":" for precise identification."}],"type":"paragraph"},{"anchor":"Parameter-Matching-Requirements","text":"Parameter Matching Requirements","level":2,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Boundary ID"}]},{"type":"text","text":": Must match the ID used during lock acquisition"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Lock Info"}]},{"type":"text","text":": Must be the same instance (same "},{"type":"codeVoice","code":"uniqueId"},{"type":"text","text":") used during acquisition"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Strategy Consistency","type":"text"}],"type":"strong"},{"text":": Must be called on the same strategy instance that acquired the lock","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Error-Recovery","text":"Error Recovery","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"If called with mismatched parameters, the concrete strategy may:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Silently ignore the unlock request (defensive programming)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Log a warning for debugging purposes","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Throw an error in debug builds","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"The behavior depends on the concrete strategy’s implementation.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Releases a previously acquired lock."}],"references":{"doc://Lockman/documentation/Lockman":{"abstract":[{"text":"A library to implement exclusive control of user actions in application development using TCA.","type":"text"}],"title":"Lockman","url":"\/documentation\/lockman","role":"collection","identifier":"doc:\/\/Lockman\/documentation\/Lockman","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/unlock(boundaryId:info:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"boundaryId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"unlock(boundaryId:info:)","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/unlock(boundaryid:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/unlock(boundaryId:info:)","type":"topic","abstract":[{"text":"Releases a previously acquired lock.","type":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"role":"symbol","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"type":"text","text":"storage and manipulation while preserving type safety for lock information."}],"title":"AnyLockmanStrategy","url":"\/documentation\/lockman\/anylockmanstrategy","navigatorTitle":[{"kind":"identifier","text":"AnyLockmanStrategy"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy","type":"topic"}}}