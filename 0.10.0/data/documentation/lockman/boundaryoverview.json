{"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","doc:\/\/Lockman\/documentation\/Lockman\/Lock","doc:\/\/Lockman\/documentation\/Lockman\/Unlock","doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","doc:\/\/Lockman\/documentation\/Lockman\/Configuration","doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/boundaryoverview"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"A Boundary is the ","type":"text"},{"inlineContent":[{"text":"exclusive control boundary","type":"text"}],"type":"strong"},{"text":" in Lockman. Lockman uses TCA’s CancelID as this boundary to control action execution.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Specify CancelID as boundary with withLock","return .withLock(","    operation: { send in","        \/\/ Processing","    },","    lockFailure: { error, send in","        \/\/ Processing when already running within the same boundary","    },","    action: action,","    cancelID: CancelID.userAction  \/\/ This CancelID functions as a Boundary",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using CancelID as a boundary provides the following benefits:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Natural integration with TCA","type":"text"}],"type":"strong"},{"text":" - Leverages existing TCA mechanisms","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Clear boundary definition","type":"text"}],"type":"strong"},{"text":" - CancelID clearly defines the scope of exclusive control","type":"text"}]}]}],"type":"orderedList"},{"level":2,"text":"Boundary Specifications","type":"heading","anchor":"Boundary-Specifications"},{"level":3,"text":"1. No exclusive control across boundaries","type":"heading","anchor":"1-No-exclusive-control-across-boundaries"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Exclusive control between different Boundaries is not possible:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ ❌ Not possible: Control save and load simultaneously","case .saveButtonTapped:","    \/\/ Control only within CancelID.save boundary","    return .withLock(..., cancelID: CancelID.save)","    ","case .loadButtonTapped:","    \/\/ Control only within CancelID.load boundary (independent from save)","    return .withLock(..., cancelID: CancelID.load)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since these are treated as separate boundaries, load can be executed even while save is running."}]},{"level":3,"text":"2. Only one Boundary per action","type":"heading","anchor":"2-Only-one-Boundary-per-action"},{"type":"paragraph","inlineContent":[{"text":"You cannot specify multiple Boundaries for a single action:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ ❌ Not possible: Specify multiple Boundaries simultaneously","return .withLock(","    operation: { send in \/* ... *\/ },","    lockFailure: { error, send in \/* ... *\/ },","    action: action,","    cancelID: [CancelID.save, CancelID.validate]  \/\/ Multiple specification not allowed",")"]},{"type":"paragraph","inlineContent":[{"text":"If you want to control multiple processes simultaneously, you need to define a common Boundary:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ ✅ Correct approach: Use a common boundary","enum CancelID {","    case fileOperation  \/\/ Common boundary including save, load, validate","}","","case .saveButtonTapped, .loadButtonTapped, .validateButtonTapped:","    return .withLock(..., cancelID: CancelID.fileOperation)"]},{"level":2,"text":"Summary","type":"heading","anchor":"Summary"},{"type":"paragraph","inlineContent":[{"text":"By setting appropriate boundaries, you can achieve both application stability and responsiveness.","type":"text"}]}]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"metadata":{"title":"Boundary","role":"article","roleHeading":"Article","modules":[{"name":"Lockman"}]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/BoundaryOverview","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Understand the concept of boundaries in Lockman."}],"references":{"doc://Lockman/documentation/Lockman/Configuration":{"role":"article","title":"Configuration","url":"\/documentation\/lockman\/configuration","type":"topic","kind":"article","abstract":[{"type":"text","text":"Configure Lockman for your application’s needs."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Configuration"},"doc://Lockman/documentation/Lockman/Unlock":{"kind":"article","abstract":[{"text":"Understanding the unlocking mechanism in Lockman.","type":"text"}],"role":"article","title":"Unlock","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Unlock","type":"topic","url":"\/documentation\/lockman\/unlock"},"doc://Lockman/documentation/Lockman/DebuggingGuide":{"url":"\/documentation\/lockman\/debuggingguide","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DebuggingGuide","title":"Debugging Guide","type":"topic","abstract":[{"type":"text","text":"Learn how to debug Lockman-related issues in your application."}],"kind":"article","role":"article"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/GettingStarted":{"title":"Getting Started","type":"topic","kind":"article","abstract":[{"text":"Learn how to integrate Lockman into your TCA application.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GettingStarted","role":"article","url":"\/documentation\/lockman\/gettingstarted"},"doc://Lockman/documentation/Lockman/ChoosingStrategy":{"type":"topic","abstract":[{"type":"text","text":"Learn how to select the right strategy for your use case."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ChoosingStrategy","title":"Choosing a Strategy","role":"article","kind":"article","url":"\/documentation\/lockman\/choosingstrategy"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/errorhandling","role":"article","kind":"article","title":"Error Handling","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic"},"doc://Lockman/documentation/Lockman/Lock":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/Lock","role":"article","type":"topic","title":"Lock","url":"\/documentation\/lockman\/lock","abstract":[{"text":"Understanding the locking mechanism in Lockman.","type":"text"}],"kind":"article"}}}