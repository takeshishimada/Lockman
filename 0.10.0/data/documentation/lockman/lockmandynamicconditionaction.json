{"metadata":{"navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"modules":[{"name":"Lockman"}],"roleHeading":"Protocol","role":"symbol","title":"LockmanDynamicConditionAction","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"externalID":"s:7Lockman0A22DynamicConditionActionP","symbolKind":"protocol"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","preciseIdentifier":"s:7Lockman0A6ActionP","text":"LockmanAction","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforming types can create lock info with custom conditions that are evaluated at runtime."}]},{"type":"heading","anchor":"Example","text":"Example","level":2},{"type":"codeListing","code":["\/\/ Define custom errors for your business logic","enum MyActionError: Error {","    case priorityTooLow(priority: Int)","    case taskTooBig(size: Int)","}","","@LockmanDynamicCondition","enum MyAction {","    case fetchData(userId: String, priority: Int)","    case processTask(size: Int)","}","","\/\/ Usage with custom error","let action = MyAction.fetchData(userId: \"123\", priority: 5)","let info = action.with {","    guard priority > 3 else {","        return .failure(MyActionError.priorityTooLow(priority: priority))","    }","    return .success","}","","try await withLock(info, in: boundary) {","    \/\/ Execute","}"],"syntax":"swift"}]}],"sections":[],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","doc:\/\/Lockman\/s8SendableP"],"title":"Inherits From"}],"variants":[{"paths":["\/documentation\/lockman\/lockmandynamicconditionaction"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"A protocol for actions that support dynamic condition-based locking.","type":"text"}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName"],"anchor":"Instance-Properties","title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x"],"anchor":"Instance-Methods","title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction":{"title":"LockmanDynamicConditionAction","abstract":[{"type":"text","text":"A protocol for actions that support dynamic condition-based locking."}],"navigatorTitle":[{"text":"LockmanDynamicConditionAction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction","kind":"symbol","url":"\/documentation\/lockman\/lockmandynamicconditionaction","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanDynamicConditionAction","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanAction":{"title":"LockmanAction","url":"\/documentation\/lockman\/lockmanaction","abstract":[{"type":"text","text":"An action that participates in Lockmanâ€™s locking mechanism."}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanAction","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanAction","kind":"identifier"}],"navigatorTitle":[{"text":"LockmanAction","kind":"identifier"}],"type":"topic"},"doc://Lockman/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/with(condition:)-9p83x":{"defaultImplementations":1,"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/with(condition:)-9p83x","required":true,"abstract":[{"type":"text","text":"Creates lock info with a custom condition."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/with(condition:)-9p83x","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanDynamicConditionInfo","preciseIdentifier":"s:7Lockman0A20DynamicConditionInfoV"}],"role":"symbol","title":"with(condition:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanDynamicConditionAction/actionName":{"required":true,"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanDynamicConditionAction\/actionName","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"type":"topic","url":"\/documentation\/lockman\/lockmandynamicconditionaction\/actionname","title":"actionName","abstract":[{"type":"text","text":"The name of the action, typically the enum case name."}]}}}