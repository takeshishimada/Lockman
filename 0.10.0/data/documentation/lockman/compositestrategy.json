{"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"CompositeStrategy is a strategy that combines multiple strategies to achieve more complex and advanced exclusive control. For complex requirements that cannot be addressed by a single strategy, you can build flexible and powerful control logic by combining 2 to 5 strategies."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This strategy is used in advanced use cases that require satisfying multiple control conditions simultaneously."}]},{"type":"heading","level":2,"text":"Combination System","anchor":"Combination-System"},{"type":"heading","level":3,"text":"Number of Strategy Combinations","anchor":"Number-of-Strategy-Combinations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lockman supports combinations of 2 to 5 strategies:"}]},{"type":"heading","level":3,"text":"Combination Control Logic","anchor":"Combination-Control-Logic"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Success required in all strategies"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Success only when lock acquisition is possible in all component strategies","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If even one fails, the entire operation fails"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Coordination of preceding cancellation","type":"text"}]},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"When any strategy requires preceding cancellation, execute preceding cancellation for all","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the first cancellation error found"}]}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"LIFO (Last In, First Out) release","type":"text"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock release is executed in reverse order of acquisition"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Release from the last acquired lock in order","type":"text"}]}]}]},{"type":"heading","level":2,"text":"Usage","anchor":"Usage"},{"type":"heading","level":3,"text":"Basic Usage Example","anchor":"Basic-Usage-Example"},{"type":"codeListing","syntax":"swift","code":["@LockmanCompositeStrategy(","    LockmanSingleExecutionStrategy.self,","    LockmanPriorityBasedStrategy.self",")","enum Action {","    case criticalSave","    case normalSave","    ","    var lockmanInfoForStrategy1: LockmanSingleExecutionInfo {","        LockmanSingleExecutionInfo(","            actionId: actionName,","            mode: .action","        )","    }","    ","    var lockmanInfoForStrategy2: LockmanPriorityBasedInfo {","        switch self {","        case .criticalSave:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .high(.exclusive)","            )","        case .normalSave:","            return LockmanPriorityBasedInfo(","                actionId: actionName,","                priority: .low(.replaceable)","            )","        }","    }","}"]},{"type":"heading","level":3,"text":"Combining 3 Strategies","anchor":"Combining-3-Strategies"},{"type":"codeListing","syntax":"swift","code":["@LockmanCompositeStrategy(","    LockmanSingleExecutionStrategy.self,","    LockmanPriorityBasedStrategy.self,","    LockmanConcurrencyLimitedStrategy.self",")","enum Action {","    case downloadFile","    ","    var lockmanInfoForStrategy1: LockmanSingleExecutionInfo {","        LockmanSingleExecutionInfo(","            actionId: actionName,","            mode: .action \/\/ Prevent duplication","        )","    }","    ","    var lockmanInfoForStrategy2: LockmanPriorityBasedInfo {","        LockmanPriorityBasedInfo(","            actionId: actionName,","            priority: .low(.replaceable) \/\/ Priority control","        )","    }","    ","    var lockmanInfoForStrategy3: LockmanConcurrencyLimitedInfo {","        LockmanConcurrencyLimitedInfo(","            actionId: actionName,","            concurrencyId: \"downloads\",","            limit: .limited(3) \/\/ Concurrent execution limit","        )","    }","}"]},{"type":"heading","level":2,"text":"Operation Examples","anchor":"Operation-Examples"},{"type":"heading","level":3,"text":"Operation with 2 Strategy Combination","anchor":"Operation-with-2-Strategy-Combination"},{"type":"codeListing","syntax":null,"code":["Strategy 1: SingleExecution(.action)","Strategy 2: PriorityBased(.high(.exclusive))","","Time: 0s  - normalSave request","  Strategy 1: ✅ Success (no duplication)","  Strategy 2: ✅ Success (no priority issue)","  Result: ✅ Start execution","","Time: 1s  - normalSave request (duplicate)","  Strategy 1: ❌ Fail (same action running)","  Strategy 2: No check (failed at strategy 1)","  Result: ❌ Overall failure","","Time: 2s  - criticalSave request (high priority)","  Strategy 1: ✅ Success (different action)","  Strategy 2: ✅ Success (with preceding cancellation)","  Result: ✅ Start execution (cancel normalSave)"]},{"type":"heading","level":3,"text":"Operation with 3 Strategy Combination","anchor":"Operation-with-3-Strategy-Combination"},{"type":"codeListing","syntax":null,"code":["Strategy 1: SingleExecution(.action)","Strategy 2: PriorityBased(.low(.replaceable))  ","Strategy 3: ConcurrencyLimited(.limited(2))","","Current situation: 2 download processes running","","Time: 0s  - New download request","  Strategy 1: ✅ Success (different file)","  Strategy 2: ✅ Success (no priority issue)","  Strategy 3: ❌ Fail (concurrent execution limit reached)","  Result: ❌ Overall failure"]},{"type":"heading","level":2,"text":"Error Handling","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For errors that may occur with CompositeStrategy and their solutions, please also refer to the common patterns on the "},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"reference","overridingTitleInlineContent":[{"text":"Error Handling","type":"text"}],"overridingTitle":"Error Handling","isActive":true},{"type":"text","text":" page."}]},{"type":"heading","level":3,"text":"Error Handling in Composite Strategy","anchor":"Error-Handling-in-Composite-Strategy"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In composite strategies, errors from each component strategy are integrated and reported. Since the error from the first failed strategy is returned, check the error type and handle appropriately:"}]},{"type":"codeListing","syntax":"swift","code":["lockFailure: { error, send in","    switch error {","    case let singleError as LockmanSingleExecutionError:","        send(.singleExecutionConflict(\"Duplicate execution detected\"))","        ","    case let priorityError as LockmanPriorityBasedError:","        send(.priorityConflict(\"Priority conflict occurred\"))","        ","    case let concurrencyError as LockmanConcurrencyLimitedError:","        send(.concurrencyLimitReached(\"Concurrent execution limit reached\"))","        ","    default:","        send(.unknownLockFailure(\"Failed to acquire lock\"))","    }","}"]},{"type":"heading","level":2,"text":"Design Guidelines","anchor":"Design-Guidelines"},{"type":"heading","level":3,"text":"Strategy Selection Order","anchor":"Strategy-Selection-Order"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Start with basic control"}]},{"text":": Begin with SingleExecution","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add if priority is needed"}]},{"type":"text","text":": Combine PriorityBased"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Add if resource control is needed"}],"type":"strong"},{"text":": Combine ConcurrencyLimited","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Add if coordination control is needed"}]},{"type":"text","text":": Combine GroupCoordination"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add if custom logic is needed","type":"text"}],"type":"strong"},{"text":": Combine DynamicCondition","type":"text"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Combine multiple strategies for complex control scenarios."}],"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Article","title":"CompositeStrategy","role":"article"},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy"],"generated":true,"title":"Strategies","anchor":"Strategies"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/compositestrategy"]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/CompositeStrategy","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"references":{"doc://Lockman/documentation/Lockman/ConcurrencyLimitedStrategy":{"abstract":[{"type":"text","text":"Limit the number of concurrent executions."}],"role":"article","url":"\/documentation\/lockman\/concurrencylimitedstrategy","title":"ConcurrencyLimitedStrategy","kind":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ConcurrencyLimitedStrategy","type":"topic"},"doc://Lockman/documentation/Lockman/SingleExecutionStrategy":{"type":"topic","abstract":[{"text":"Prevent duplicate execution of the same action.","type":"text"}],"role":"article","url":"\/documentation\/lockman\/singleexecutionstrategy","title":"SingleExecutionStrategy","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/SingleExecutionStrategy","kind":"article"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/GroupCoordinationStrategy":{"title":"GroupCoordinationStrategy","url":"\/documentation\/lockman\/groupcoordinationstrategy","kind":"article","abstract":[{"type":"text","text":"Coordinate actions through leader\/member group roles."}],"role":"article","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/GroupCoordinationStrategy","type":"topic"},"doc://Lockman/documentation/Lockman/DynamicConditionStrategy":{"kind":"article","url":"\/documentation\/lockman\/dynamicconditionstrategy","abstract":[{"type":"text","text":"Control actions based on runtime conditions."}],"title":"DynamicConditionStrategy","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/DynamicConditionStrategy","role":"article"},"doc://Lockman/documentation/Lockman/ErrorHandling":{"abstract":[{"text":"Learn about common error handling patterns in Lockman.","type":"text"}],"url":"\/documentation\/lockman\/errorhandling","role":"article","kind":"article","title":"Error Handling","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/ErrorHandling","type":"topic"},"doc://Lockman/documentation/Lockman/PriorityBasedStrategy":{"abstract":[{"type":"text","text":"Control action execution based on priority levels."}],"role":"article","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/PriorityBasedStrategy","url":"\/documentation\/lockman\/prioritybasedstrategy","kind":"article","title":"PriorityBasedStrategy"}}}