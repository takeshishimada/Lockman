{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Lockman"}],"title":"canLock(id:info:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"}],"role":"symbol","symbolKind":"method","externalID":"s:7Lockman03AnyA8StrategyV7canLock2id4infoAA0A6ResultOqd___xtSHRd__s8SendableRd__lF"},"kind":"symbol","abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"LockmanResult","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A6ResultO"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}]},{"parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A unique boundary identifier conforming to "},{"code":"LockmanBoundaryId","type":"codeVoice"}]}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock information of type "},{"type":"codeVoice","code":"I"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"LockmanResult"},{"text":" indicating whether the lock can be acquired","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method delegates to the concrete strategyâ€™s implementation through the","type":"text"},{"text":" ","type":"text"},{"text":"captured closure, maintaining identical behavior while hiding the concrete type.","type":"text"}]},{"type":"heading","level":2,"anchor":"Delegation-Pattern","text":"Delegation Pattern"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The type-erased wrapper acts as a transparent proxy, forwarding all calls to the"},{"type":"text","text":" "},{"type":"text","text":"underlying concrete strategy without modification. This ensures that the behavior"},{"type":"text","text":" "},{"type":"text","text":"is identical to calling the concrete strategy directly."}]},{"type":"heading","level":2,"anchor":"Error-Handling","text":"Error Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any errors thrown by the concrete strategy are propagated unchanged through this wrapper."},{"type":"text","text":" "},{"type":"text","text":"The wrapper does not add its own error handling or modification."}]}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)"]}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/canLock(id:info:)":{"title":"canLock(id:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LockmanResult","preciseIdentifier":"s:7Lockman0A6ResultO"}],"abstract":[{"type":"text","text":"Checks if a lock can be acquired for the given boundary and information."}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/canLock(id:info:)","role":"symbol","type":"topic","url":"\/documentation\/lockman\/anylockmanstrategy\/canlock(id:info:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","type":"topic","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"title":"AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanResult":{"role":"symbol","title":"LockmanResult","kind":"symbol","type":"topic","abstract":[{"text":"The result of attempting to acquire a lock.","type":"text"}],"url":"\/documentation\/lockman\/lockmanresult","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanResult","navigatorTitle":[{"kind":"identifier","text":"LockmanResult"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanResult"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"}}}