{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/init(_:)"]}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Lockman0A8StrategyP1IQa","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","text":"I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Lockman0A8StrategyP","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","text":"LockmanStrategy"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"strategy","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"code":"LockmanStrategy<I>","type":"codeVoice"}]}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This initializer performs type erasure by capturing the concrete strategy’s methods","type":"text"},{"text":" ","type":"text"},{"text":"as closures. The concrete strategy’s lifetime is preserved through these closures,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring that the strategy remains valid for the lifetime of this wrapper.","type":"text"}],"type":"paragraph"},{"text":"Type Safety","anchor":"Type-Safety","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"where S.I == I"},{"type":"text","text":" constraint ensures that the concrete strategy’s lock information"},{"type":"text","text":" "},{"type":"text","text":"type matches this wrapper’s lock information type, maintaining type safety at compile time."}],"type":"paragraph"},{"text":"Memory Management","anchor":"Memory-Management","type":"heading","level":2},{"items":[{"content":[{"inlineContent":[{"text":"For class-based strategies: The strategy instance is retained by the closures","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For struct-based strategies: The strategy is copied into the closures"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Both approaches ensure proper lifetime management without memory leaks"}]}]}],"type":"unorderedList"},{"text":"Performance Notes","anchor":"Performance-Notes","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The type erasure process happens once during initialization. Subsequent method calls"},{"type":"text","text":" "},{"type":"text","text":"have minimal overhead (single function pointer indirection)."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"Lockman"}],"title":"init(_:)","symbolKind":"init","externalID":"s:7Lockman03AnyA8StrategyVyACyxGqd__c1IQyd__RszAA0aC0Rd__lufc","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}]},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/init(_:)":{"type":"topic","role":"symbol","title":"init(_:)","kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy\/init(_:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new type-erased strategy wrapper from any concrete strategy implementation."}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","type":"topic","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"title":"AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategy/I":{"title":"I","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy\/I","required":true,"url":"\/documentation\/lockman\/lockmanstrategy\/i","abstract":[{"type":"text","text":"The type of lock information this strategy handles."}],"type":"topic","role":"symbol","kind":"symbol"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","role":"symbol","title":"LockmanStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]}}}