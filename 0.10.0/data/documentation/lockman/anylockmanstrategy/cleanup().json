{"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman03AnyA8StrategyV7cleanUpyyF","role":"symbol","title":"cleanUp()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method provides a global reset mechanism by clearing all internal lock state"},{"type":"text","text":" "},{"type":"text","text":"from the underlying strategy. Itâ€™s typically used during:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown sequences"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite cleanup between test cases"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Emergency reset scenarios during development","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory pressure response","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","level":2,"text":"Scope of Operation","anchor":"Scope-of-Operation"},{"type":"paragraph","inlineContent":[{"text":"This method affects ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"all boundaries"}]},{"text":" managed by the underlying strategy,","type":"text"},{"text":" ","type":"text"},{"text":"not just those accessed through this particular wrapper instance.","type":"text"}]},{"type":"heading","level":2,"text":"Thread Safety","anchor":"Thread-Safety"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The operation is atomic with respect to other strategy operations, but"},{"type":"text","text":" "},{"type":"text","text":"callers should be aware that concurrent operations may be affected."}]},{"type":"heading","level":2,"text":"Side Effects","anchor":"Side-Effects"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"All active locks are immediately released","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lock state tracking is reset to initial conditions"}]}]},{"content":[{"inlineContent":[{"text":"Pending operations may receive unexpected unlock notifications","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmanstrategy\/cleanup()"]}],"abstract":[{"text":"Removes all lock information across all boundaries.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"]]},"references":{"doc://Lockman/documentation/Lockman/AnyLockmanStrategy/cleanUp()":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Removes all lock information across all boundaries."}],"url":"\/documentation\/lockman\/anylockmanstrategy\/cleanup()","title":"cleanUp()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy\/cleanUp()"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","type":"topic","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"title":"AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"}}}