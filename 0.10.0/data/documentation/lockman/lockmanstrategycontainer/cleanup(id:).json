{"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"LockmanBoundaryId","type":"codeVoice"},{"type":"text","text":" whose associated lock state should be cleared"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method iterates through all registered strategies and calls their"},{"type":"text","text":" "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" method to clear state associated with the given boundary identifier."},{"type":"text","text":" "},{"type":"text","text":"Useful when a feature or component is being deallocated."}]},{"type":"heading","text":"Error Handling","anchor":"Error-Handling","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similar to "},{"type":"codeVoice","code":"cleanUp()"},{"type":"text","text":", errors in individual strategy cleanup are logged"},{"type":"text","text":" "},{"type":"text","text":"but donâ€™t prevent cleanup of other strategies."}]},{"type":"heading","text":"Complexity","anchor":"Complexity","level":2},{"type":"paragraph","inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}]}]}],"metadata":{"modules":[{"name":"Lockman"}],"roleHeading":"Instance Method","symbolKind":"method","title":"cleanUp(id:)","externalID":"s:7Lockman0A17StrategyContainerC7cleanUp2idyx_tSHRzs8SendableRzlF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":")"}]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)"]}],"references":{"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/cleanUp(id:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/cleanUp(id:)","title":"cleanUp(id:)","url":"\/documentation\/lockman\/lockmanstrategycontainer\/cleanup(id:)","role":"symbol","abstract":[{"type":"text","text":"Invokes "},{"type":"codeVoice","code":"cleanUp(id:)"},{"type":"text","text":" on all registered strategies for a specific boundary."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"}}}