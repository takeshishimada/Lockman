{"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"_","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type = I.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV","kind":"typeIdentifier","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","text":"LockmanInfo","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"text":"The strategy identifier to look up","type":"text"}]}]},{"name":"expecting","content":[{"inlineContent":[{"type":"text","text":"The expected "},{"type":"codeVoice","code":"LockmanInfo"},{"type":"text","text":" type (for type inference)"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"text":" wrapping the registered strategy instance","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Returns the type-erased strategy instance that was registered with the given ID.","type":"text"},{"text":" ","type":"text"},{"text":"The returned ","type":"text"},{"type":"codeVoice","code":"AnyLockmanStrategy<I>"},{"text":" provides the same interface as the original","type":"text"},{"text":" ","type":"text"},{"text":"strategy but with erased concrete type information.","type":"text"}]},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"LockmanRegistrationError.strategyNotRegistered","type":"codeVoice"},{"type":"text","text":" if no strategy with this ID is registered"}],"type":"paragraph"}]},{"anchor":"Complexity","type":"heading","text":"Complexity","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) - Direct hash map lookup by ID"}]},{"anchor":"Thread-Safety","type":"heading","text":"Thread Safety","level":2},{"type":"paragraph","inlineContent":[{"text":"Safe to call concurrently from multiple threads. Resolution is atomic.","type":"text"}]},{"anchor":"Example","type":"heading","text":"Example","level":2},{"type":"codeListing","code":["let strategy: AnyLockmanStrategy<LockmanSingleExecutionInfo> =","  try container.resolve(id: .singleExecution)","let result = strategy.canLock(id: boundaryId, info: lockInfo)"],"syntax":"swift"}]}],"metadata":{"role":"symbol","modules":[{"name":"Lockman"}],"title":"resolve(id:expecting:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"text":"<","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC7resolve2id9expectingAA03AnyaB0VyxGAA0aB2IdV_xmtKAA0A4InfoRzlF"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Resolves a registered strategy by its identifier."}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategyid","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","role":"symbol","title":"LockmanStrategyId","kind":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman/AnyLockmanStrategy":{"kind":"symbol","url":"\/documentation\/lockman\/anylockmanstrategy","type":"topic","abstract":[{"type":"text","text":"A type-erased wrapper for any "},{"type":"codeVoice","code":"LockmanStrategy<I>"},{"type":"text","text":", enabling heterogeneous strategy"},{"type":"text","text":" "},{"text":"storage and manipulation while preserving type safety for lock information.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyLockmanStrategy","kind":"identifier"}],"title":"AnyLockmanStrategy","navigatorTitle":[{"text":"AnyLockmanStrategy","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanStrategy"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/resolve(id:expecting:)":{"role":"symbol","abstract":[{"text":"Resolves a registered strategy by its identifier.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmanstrategycontainer\/resolve(id:expecting:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":", ","kind":"text"},{"text":"expecting","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AnyLockmanStrategy","preciseIdentifier":"s:7Lockman03AnyA8StrategyV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":">"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/resolve(id:expecting:)","title":"resolve(id:expecting:)","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanInfo":{"role":"symbol","abstract":[{"text":"Represents information required by Lockman locking strategies.","type":"text"}],"type":"topic","url":"\/documentation\/lockman\/lockmaninfo","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanInfo","kind":"identifier"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanInfo","title":"LockmanInfo","navigatorTitle":[{"text":"LockmanInfo","kind":"identifier"}],"kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"}}}