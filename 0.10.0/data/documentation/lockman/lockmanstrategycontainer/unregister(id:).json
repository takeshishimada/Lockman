{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unregister"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The strategy ID to unregister","type":"text"}]}],"name":"id"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the strategy was found and removed, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if it wasn’t registered","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method allows unregistering a strategy that is no longer needed."},{"type":"text","text":" "},{"type":"text","text":"The strategy’s cleanup method is called before removal."}],"type":"paragraph"},{"text":"Use Cases","type":"heading","level":2,"anchor":"Use-Cases"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Dynamic strategy replacement"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory management in long-running applications","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Test cleanup"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"code":["let wasRemoved = container.unregister(id: \"MyApp.Custom:v1\")","if wasRemoved {","  print(\"Strategy successfully unregistered\")","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"sections":[],"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:7Lockman0A17StrategyContainerC10unregister2idSbAA0aB2IdV_tF","title":"unregister(id:)"},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Removes a specific strategy from the container by its ID.","type":"text"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/unregister(id:)":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/unregister(id:)","abstract":[{"type":"text","text":"Removes a specific strategy from the container by its ID."}],"title":"unregister(id:)","role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/unregister(id:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unregister","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","text":"LockmanStrategyId","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyId":{"type":"topic","url":"\/documentation\/lockman\/lockmanstrategyid","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyId"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyId","role":"symbol","title":"LockmanStrategyId","kind":"symbol","abstract":[{"type":"text","text":"A type-safe identifier for Lockman strategies that supports both built-in and user-defined strategies."}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyId"}]}}}