{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","interfaceLanguage":"swift"},"abstract":[{"text":"Removes all registered strategies from the container.","type":"text"}],"metadata":{"modules":[{"name":"Lockman"}],"title":"removeAllStrategies()","symbolKind":"method","externalID":"s:7Lockman0A17StrategyContainerC19removeAllStrategiesyyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAllStrategies"},{"kind":"text","text":"()"}]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This method calls ","type":"text"},{"code":"cleanUp()","type":"codeVoice"},{"text":" on all strategies before removing them,","type":"text"},{"text":" ","type":"text"},{"text":"ensuring proper cleanup. The container returns to its initial empty state.","type":"text"}],"type":"paragraph"},{"text":"Use Cases","anchor":"Use-Cases","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Application shutdown"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test suite reset"}]}]},{"content":[{"inlineContent":[{"text":"Memory management","type":"text"}],"type":"paragraph"}]}]},{"text":"Complexity","anchor":"Complexity","type":"heading","level":2},{"inlineContent":[{"text":"O(n) where n is the number of registered strategies","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/removeAllStrategies()":{"type":"topic","abstract":[{"type":"text","text":"Removes all registered strategies from the container."}],"url":"\/documentation\/lockman\/lockmanstrategycontainer\/removeallstrategies()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/removeAllStrategies()","kind":"symbol","title":"removeAllStrategies()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeAllStrategies","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"}}}