{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"strategy","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","text":"LockmanStrategy","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A8StrategyP"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A concrete strategy conforming to "},{"type":"codeVoice","code":"LockmanStrategy<I>"}],"type":"paragraph"}],"name":"strategy"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Convenience method that uses the strategy’s built-in ID property."},{"type":"text","text":" "},{"type":"text","text":"This is the preferred method for registering strategies as it ensures"},{"type":"text","text":" "},{"type":"text","text":"consistency between the strategy’s identity and its registration."}]},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"LockmanRegistrationError.strategyAlreadyRegistered","type":"codeVoice"},{"text":" if this ID is already registered","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"text":"Example","type":"heading","level":2,"anchor":"Example"},{"syntax":"swift","code":["try container.register(LockmanSingleExecutionStrategy.shared)","\/\/ Uses strategy.strategyId automatically"],"type":"codeListing"}],"kind":"content"}],"metadata":{"title":"register(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Lockman"}],"externalID":"s:7Lockman0A17StrategyContainerC8registeryyxKAA0aB0RzlF"},"variants":[{"paths":["\/documentation\/lockman\/lockmanstrategycontainer\/register(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Registers a concrete strategy instance using its own strategyId.","type":"text"}],"identifier":{"url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(_:)","interfaceLanguage":"swift"},"references":{"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","role":"symbol","title":"LockmanStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer":{"kind":"symbol","url":"\/documentation\/lockman\/lockmanstrategycontainer","type":"topic","abstract":[{"type":"text","text":"A thread-safe, Sendable dependency injection container for registering and resolving"},{"type":"text","text":" "},{"type":"text","text":"lock strategies using type erasure and flexible identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategyContainer"}],"title":"LockmanStrategyContainer","navigatorTitle":[{"kind":"identifier","text":"LockmanStrategyContainer"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer"},"doc://Lockman/documentation/Lockman/LockmanStrategyContainer/register(_:)":{"url":"\/documentation\/lockman\/lockmanstrategycontainer\/register(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Registers a concrete strategy instance using its own strategyId.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategyContainer\/register(_:)","role":"symbol","title":"register(_:)","type":"topic"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"}}}