{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"externalID":"s:7Lockman0A21PriorityBasedStrategyC","roleHeading":"Class","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"title":"LockmanPriorityBasedStrategy","role":"symbol","modules":[{"name":"Lockman"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/lockmanprioritybasedstrategy"]}],"abstract":[{"type":"text","text":"A locking strategy that enforces priority-based execution semantics."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy"},"relationshipsSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","doc:\/\/Lockman\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I"],"anchor":"Type-Aliases","generated":true,"title":"Type Aliases"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared"],"anchor":"Type-Properties","generated":true,"title":"Type Properties"},{"identifiers":["doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()"],"anchor":"Type-Methods","generated":true,"title":"Type Methods"}],"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"This strategy implements a sophisticated priority system that allows higher-priority","type":"text"},{"text":" ","type":"text"},{"text":"actions to preempt lower-priority ones, while providing configurable concurrency","type":"text"},{"text":" ","type":"text"},{"text":"behavior for actions of the same priority level.","type":"text"}],"type":"paragraph"},{"text":"Priority System Overview","type":"heading","level":2,"anchor":"Priority-System-Overview"},{"inlineContent":[{"type":"text","text":"The strategy maintains a per-boundary collection of active "},{"type":"codeVoice","code":"LockmanPriorityBasedInfo"},{"type":"text","text":" "},{"type":"text","text":"instances and uses the priority hierarchy to determine execution precedence:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"High Priority"}],"type":"strong"},{"type":"text","text":" (.high): Can cancel low\/none priority actions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Low Priority","type":"text"}],"type":"strong"},{"text":" (.low): Can cancel none priority actions, yields to high priority","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"No Priority"}],"type":"strong"},{"type":"text","text":" (.none): Yields to all priority actions, simple conflict handling"}]}]}],"type":"unorderedList"},{"text":"Concurrency Behavior Logic","type":"heading","level":2,"anchor":"Concurrency-Behavior-Logic"},{"inlineContent":[{"text":"When ","type":"text"},{"code":"canLock","type":"codeVoice"},{"text":" is called for same-priority actions, the strategy evaluates conflicts","type":"text"},{"text":" ","type":"text"},{"text":"using the existing action’s concurrency behavior:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"No Priority Actions","type":"text"}]},{"text":": Always succeed (bypass priority system)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Priority vs Non-Priority","type":"text"}],"type":"strong"},{"type":"text","text":": Priority actions always win"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Different Priority Levels"}],"type":"strong"},{"text":": Higher priority wins","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Same Priority Level"}]},{"type":"text","text":": Apply existing action’s "},{"code":"ConcurrencyBehavior","type":"codeVoice"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Exclusive","type":"text"}]},{"type":"text","text":": Existing action continues, new action fails"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Replaceable"}]},{"text":": Existing action is canceled, new action succeeds","type":"text"}]}]}]}]}],"type":"orderedList"},{"text":"Thread Safety","type":"heading","level":2,"anchor":"Thread-Safety"},{"inlineContent":[{"type":"text","text":"This strategy is thread-safe through the underlying "},{"type":"codeVoice","code":"LockmanState"},{"type":"text","text":" which provides"},{"type":"text","text":" "},{"type":"text","text":"synchronized access to the per-boundary lock collections."}],"type":"paragraph"},{"text":"Usage Examples","type":"heading","level":2,"anchor":"Usage-Examples"},{"syntax":"swift","type":"codeListing","code":["let strategy = LockmanPriorityBasedStrategy.shared","","\/\/ High priority exclusive action","let payment = LockmanPriorityBasedInfo(actionId: \"payment\", priority: .high(.exclusive))","let result = strategy.canLock(id: .payment, info: payment)","\/\/ Result: .success or .failure based on existing actions","","\/\/ High priority replaceable action","let search = LockmanPriorityBasedInfo(actionId: \"search\", priority: .high(.replaceable))","let result = strategy.canLock(id: .search, info: search)","\/\/ Result: .success or .successWithPrecedingCancellation"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","references":{"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/makeStrategyId()":{"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/makeStrategyId()","abstract":[{"type":"text","text":"Creates a strategy identifier for the priority-based strategy."}],"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/makestrategyid()","title":"makeStrategyId()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeStrategyId"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Lockman0A10StrategyIdV","kind":"typeIdentifier","text":"LockmanStrategyId"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/canLock(id:info:)":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/canlock(id:info:)","title":"canLock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/canLock(id:info:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Evaluates whether a priority-based lock can be acquired."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canLock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Lockman0A6ResultO","kind":"typeIdentifier","text":"LockmanResult"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/lock(id:info:)":{"role":"symbol","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/lock(id:info:)","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/lock(id:info:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"info","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","kind":"typeIdentifier","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","abstract":[{"text":"Registers a priority-based lock for the specified boundary and action.","type":"text"}],"title":"lock(id:info:)"},"doc://Lockman/documentation/Lockman/LockmanStrategy":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanStrategy","abstract":[{"type":"text","text":"A protocol defining the core locking operations that all strategies must implement."}],"url":"\/documentation\/lockman\/lockmanstrategy","type":"topic","role":"symbol","title":"LockmanStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LockmanStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanStrategy"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy":{"title":"LockmanPriorityBasedStrategy","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy","role":"symbol","abstract":[{"text":"A locking strategy that enforces priority-based execution semantics.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LockmanPriorityBasedStrategy"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/getCurrentLocks()":{"role":"symbol","abstract":[{"text":"Returns current locks information for debugging.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCurrentLocks","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"AnyLockmanBoundaryId","preciseIdentifier":"s:7Lockman03AnyA10BoundaryIdV","kind":"typeIdentifier"},{"text":" : [any ","kind":"text"},{"text":"LockmanInfo","preciseIdentifier":"s:7Lockman0A4InfoP","kind":"typeIdentifier"},{"text":"]]","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/getCurrentLocks()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/getcurrentlocks()","title":"getCurrentLocks()","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/I":{"url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/i","type":"topic","kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/I","title":"LockmanPriorityBasedStrategy.I","role":"symbol","abstract":[],"navigatorTitle":[{"text":"I","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"I","kind":"identifier"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanPriorityBasedStrategy","preciseIdentifier":"s:7Lockman0A21PriorityBasedStrategyC","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/shared","type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/shared","kind":"symbol","title":"shared","abstract":[{"text":"Shared singleton instance for coordinating priority-based locks across the application.","type":"text"}]},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp()":{"title":"cleanUp()","abstract":[{"type":"text","text":"Removes all priority-based locks across all boundaries."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanUp"},{"kind":"text","text":"()"}],"role":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup()","type":"topic","kind":"symbol"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/unlock(id:info:)":{"title":"unlock(id:info:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"B"},{"kind":"text","text":">("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A17PriorityBasedInfoV","text":"LockmanPriorityBasedInfo"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/unlock(id:info:)","abstract":[{"text":"Releases a previously acquired priority-based lock.","type":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/unlock(id:info:)"},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/init()":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Creates a new priority-based strategy instance.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/init()","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/init()"},"doc://Lockman/s8SendableP":{"identifier":"doc:\/\/Lockman\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/cleanUp(id:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanUp","kind":"identifier"},{"text":"<","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/cleanUp(id:)","kind":"symbol","abstract":[{"text":"Removes all priority-based locks for the specified boundary identifier.","type":"text"}],"type":"topic","title":"cleanUp(id:)","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/cleanup(id:)"},"doc://Lockman/documentation/Lockman/LockmanPriorityBasedStrategy/strategyId":{"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strategyId","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LockmanStrategyId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman0A10StrategyIdV"}],"identifier":"doc:\/\/Lockman\/documentation\/Lockman\/LockmanPriorityBasedStrategy\/strategyId","url":"\/documentation\/lockman\/lockmanprioritybasedstrategy\/strategyid","abstract":[{"type":"text","text":"The unique identifier for this strategy instance."}],"kind":"symbol","title":"strategyId","type":"topic"}}}