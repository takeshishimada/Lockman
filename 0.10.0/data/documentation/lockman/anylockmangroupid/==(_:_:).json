{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/lockman\/anylockmangroupid\/==(_:_:)"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AnyLockmanGroupId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"AnyLockmanGroupId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The left-hand side wrapper to compare"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The right-hand side wrapper to compare"}]}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the wrapped values are equal; otherwise, "},{"type":"codeVoice","code":"false"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Two instances are equal if their wrapped values are equal according to"},{"type":"text","text":" "},{"type":"text","text":"the underlying type’s equality implementation."}]},{"anchor":"Type-Safety","level":2,"type":"heading","text":"Type Safety"},{"type":"paragraph","inlineContent":[{"text":"Different types with identical values will not be equal due to ","type":"text"},{"code":"AnyHashable","type":"codeVoice"},{"text":"’s","type":"text"},{"text":" ","type":"text"},{"text":"type-aware equality comparison.","type":"text"}]}]}],"metadata":{"roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","kind":"typeIdentifier","text":"AnyLockmanGroupId"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Lockman03AnyA7GroupIdV","kind":"typeIdentifier","text":"AnyLockmanGroupId"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"symbolKind":"op","title":"==(_:_:)","role":"symbol","externalID":"s:7Lockman03AnyA7GroupIdV2eeoiySbAC_ACtFZ","modules":[{"name":"Lockman"}]},"hierarchy":{"paths":[["doc:\/\/Lockman\/documentation\/Lockman","doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId"]]},"abstract":[{"type":"text","text":"Compares two "},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"type":"text","text":" instances for equality by comparing their underlying "},{"type":"codeVoice","code":"AnyHashable"},{"type":"text","text":" values."}],"references":{"doc://Lockman/documentation/Lockman/AnyLockmanGroupId":{"navigatorTitle":[{"kind":"identifier","text":"AnyLockmanGroupId"}],"url":"\/documentation\/lockman\/anylockmangroupid","kind":"symbol","title":"AnyLockmanGroupId","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId","role":"symbol","abstract":[{"text":"A type-erased wrapper for any ","type":"text"},{"code":"LockmanGroupId","type":"codeVoice"},{"text":", allowing heterogeneous group IDs","type":"text"},{"text":" ","type":"text"},{"text":"to be stored and compared in a uniform manner.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyLockmanGroupId"}]},"doc://Lockman/documentation/Lockman/AnyLockmanGroupId/==(_:_:)":{"title":"==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":", ","kind":"text"},{"text":"AnyLockmanGroupId","kind":"typeIdentifier","preciseIdentifier":"s:7Lockman03AnyA7GroupIdV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/Lockman\/documentation\/Lockman\/AnyLockmanGroupId\/==(_:_:)","url":"\/documentation\/lockman\/anylockmangroupid\/==(_:_:)","role":"symbol","type":"topic","abstract":[{"text":"Compares two ","type":"text"},{"type":"codeVoice","code":"AnyLockmanGroupId"},{"text":" instances for equality by comparing their underlying ","type":"text"},{"type":"codeVoice","code":"AnyHashable"},{"text":" values.","type":"text"}]},"doc://Lockman/documentation/Lockman":{"identifier":"doc:\/\/Lockman\/documentation\/Lockman","abstract":[{"type":"text","text":"A library to implement exclusive control of user actions in application development using TCA."}],"role":"collection","kind":"symbol","title":"Lockman","url":"\/documentation\/lockman","type":"topic"}}}