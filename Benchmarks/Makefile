# Makefile for Lockman Benchmarks
# Usage: make benchmarks
.PHONY: benchmarks install clean help run quick verify

# Default target
help:
	@echo "Lockman Benchmark Utilities"
	@echo "==========================="
	@echo "Available commands:"
	@echo "  make benchmarks - Full benchmark workflow"
	@echo "  make install    - Install required libraries"
	@echo "  make clean      - Clean benchmark cache"
	@echo ""
	@echo "Individual steps:"
	@echo "  make run        - Run benchmarks only"

# Install required libraries for benchmarks
install:
	@echo "üì¶ Installing benchmark dependencies..."
	@if ! command -v brew >/dev/null 2>&1; then \
		echo "‚ùå Homebrew is required but not installed."; \
		echo "Please install Homebrew: https://brew.sh"; \
		exit 1; \
	fi
	@echo "Installing jemalloc for optimal memory profiling..."
	@brew install jemalloc || echo "jemalloc already installed"
	@echo "‚úÖ Benchmark dependencies installed successfully!"

# Clean benchmark cache and build artifacts
clean:
	@echo "üßπ Cleaning benchmark cache and build artifacts..."
	@if [ -d "Benchmarks" ]; then \
		echo "Cleaning Benchmarks directory..."; \
		cd Benchmarks && swift package clean 2>/dev/null || true; \
		rm -rf .build 2>/dev/null || true; \
		swift package reset 2>/dev/null || true; \
		echo "‚úÖ Benchmark cache cleaned"; \
	else \
		echo "‚ö†Ô∏è  Benchmarks directory not found"; \
	fi

# Run benchmarks only (without setup)
run:
	@echo "üèÉ Running Lockman benchmarks..."
	@if [ ! -d "Benchmarks" ]; then \
		echo "‚ùå Benchmarks directory not found."; \
		echo "Please ensure Benchmarks/ directory exists with Package.swift"; \
		exit 1; \
	fi
	@echo "Changing to Benchmarks directory..."
	@cd Benchmarks && \
	echo "Resolving dependencies..." && \
	swift package resolve && \
	echo "Building in release mode..." && \
	swift build -c release && \
	echo "Executing benchmarks..." && \
	swift package benchmark --target LockmanBenchmarks
	@echo "‚úÖ Benchmarks completed successfully!"

# Full benchmark workflow: Install -> Clean -> Run
benchmarks: install clean run
	@echo ""
	@echo "üèÜ Complete benchmark workflow finished!"
	@echo "üìä Results shown above include performance metrics for:"
	@echo "   - .run (baseline TCA effect)"
	@echo "   - .withLock SingleExecution strategy"
	@echo "   - .withLock PriorityBased strategy"
	@echo "   - .withLock DynamicCondition strategy"
	@echo "   - .withLock CompositeStrategy"
	@echo ""
	@echo "üí° Use the results to optimize your Lockman integration!"

# Quick benchmark (skip install, clean cache only)
quick: clean run
	@echo "‚ö° Quick benchmark completed!"

# Verify benchmark setup
verify:
	@echo "üîç Verifying benchmark setup..."
	@echo -n "Homebrew: "
	@if command -v brew >/dev/null 2>&1; then \
		echo "‚úÖ Installed"; \
	else \
		echo "‚ùå Not installed"; \
	fi
	@echo -n "jemalloc: "
	@if brew list jemalloc >/dev/null 2>&1; then \
		echo "‚úÖ Installed"; \
	else \
		echo "‚ùå Not installed"; \
	fi
	@echo -n "Benchmarks directory: "
	@if [ -d "Benchmarks" ]; then \
		echo "‚úÖ Found"; \
	else \
		echo "‚ùå Not found"; \
	fi
	@echo -n "Package.swift: "
	@if [ -f "Benchmarks/Package.swift" ]; then \
		echo "‚úÖ Found"; \
	else \
		echo "‚ùå Not found"; \
	fi
	@echo -n "Swift: "
	@swift --version | head -n1
