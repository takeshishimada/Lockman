name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    types: [ready_for_review]
    branches:
      - main
      - develop
      - 'feature/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  swift-test:
    name: Swift Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Swift version
        run: swift --version
      
      - name: Build
        run: swift build
      
      - name: Run tests
        run: swift test --parallel

  platform-builds:
    name: Platform Build (${{ matrix.platform }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        platform: ['iOS', 'tvOS', 'watchOS']
    steps:
      - uses: actions/checkout@v4
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
        
      - name: Build for ${{ matrix.platform }}
        run: |
          case "${{ matrix.platform }}" in
            "iOS")
              xcodebuild build \
                -workspace Lockman.xcworkspace \
                -scheme LockmanCore \
                -destination "generic/platform=iOS" \
                CODE_SIGNING_ALLOWED=NO
              ;;
            "tvOS")
              xcodebuild build \
                -workspace Lockman.xcworkspace \
                -scheme LockmanCore \
                -destination "generic/platform=tvOS" \
                CODE_SIGNING_ALLOWED=NO
              ;;
            "watchOS")
              xcodebuild build \
                -workspace Lockman.xcworkspace \
                -scheme LockmanCore \
                -destination "generic/platform=watchOS" \
                CODE_SIGNING_ALLOWED=NO
              ;;
          esac

  examples:
    name: Examples
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Build Strategies Example
        run: |
          cd Examples/Strategies
          xcodebuild build \
            -project Strategies.xcodeproj \
            -scheme Strategies \
            -configuration Debug \
            -destination "platform=macOS" \
            CODE_SIGNING_ALLOWED=NO

  benchmarks:
    name: Benchmarks
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      
      - name: Select Xcode 15.4
        run: sudo xcode-select -s /Applications/Xcode_15.4.app
      
      - name: Install dependencies
        run: brew install jemalloc || true
      
      - name: Run benchmarks
        run: |
          cd Benchmarks
          swift package resolve
          swift build -c release
          swift package benchmark --target LockmanBenchmarks || echo "Benchmarks completed with warnings"

  check-macro-compatibility:
    name: Check Macro Compatibility
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Select latest Xcode
        run: sudo xcode-select -s /Applications/Xcode.app
      
      - name: Check macro compatibility
        run: |
          swift package diagnose-api-breaking-changes 1.17.1 || true